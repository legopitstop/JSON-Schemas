{
    "id": "https://raw.githubusercontent.com/legopitstop/JSON-Schemas/main/schemas/bedrock/behavior/entity.json",
    "$schema": "http://json-schema.org/draft-07/schema",
    "description": "JSON schema for data-driven entities",
    "type": "object",
    "default": {},
    "definitions": {
        "filter": {
            "description": "Minecraft Filter",
            "type": "object",
            "default": {},
            "anyOf": [
                {
                    "required": [
                        "test",
                        "value"
                    ]
                },
                {
                    "required": [
                        "all_of"
                    ]
                },
                {
                    "required": [
                        "any_of"
                    ]
                }
            ],
            "properties": {
                "all_of": {
                    "description": "Must match all filters",
                    "type": "array",
                    "default": [],
                    "items": {
                        "$ref": "#/definitions/filter/properties"
                    }
                },
                "any_of": {
                    "description": "Must at least one of the filters",
                    "type": "array",
                    "default": [],
                    "items": {
                        "$ref": "#/definitions/filter/properties"
                    }
                },
                "test": {
                    "description": "The test",
                    "enum": [
                        "in_lava",
                        "in_water",
                        "in_water_or_rain",
                        "is_family",
                        "in_contact_with_water",
                        "is_brightness"
                    ]
                },
                "subject": {
                    "description": "The target",
                    "enum": [
                        "self",
                        "other"
                    ]
                },
                "operator": {
                    "description": "The operator",
                    "enum": [
                        "==",
                        "<=",
                        ">=",
                        "><",
                        ">",
                        "<",
                        "!="
                    ],
                    "default": "=="
                },
                "value": {
                    "description": "The value to apply",
                    "type": [
                        "boolean",
                        "string",
                        "number"
                    ]
                }
            }
        },
        "events": {
            "description": "Event",
            "type": [
                "object",
                "string",
                "array"
            ],
            "items": {
                "$ref": "#/definitions/events"
            },
            "properties": {
                "filters": {
                    "$ref": "#/definitions/filter"
                },
                "events": {
                    "description": "The event",
                    "type": "string"
                },
                "target": {
                    "description": "The target",
                    "type": "string"
                }
            }
        }
    },
    "properties": {
        "minecraft:entity": {
            "description": "A minecraft entity",
            "type": "object",
            "default": {},
            "properties": {
                "description": {
                    "description": "Description properties for the entity.",
                    "type": "object",
                    "default": {},
                    "properties": {
                        "identifier": {
                            "description": "Sets the name for this entity's description.",
                            "type": "string"
                        },
                        "is_spawnable": {
                            "description": "Sets whether or not this entity has a spawn egg in the creative ui.",
                            "type": "boolean",
                            "default": true
                        },
                        "is_summonable": {
                            "description": "Sets whether or not we can summon this entity using commands such as /summon.",
                            "type": "boolean",
                            "default": true
                        },
                        "is_experimental": {
                            "description": "This mob is experimetal",
                            "type": "boolean",
                            "default": true
                        },
                        "runtime_identifier": {
                            "description": "Sets the name for the Vanilla Minecraft identifier this entity will use to build itself from.",
                            "type": "string"
                        },
                        "animations": {
                            "description": "Sets the mapping of internal animation references to actual animations. This is a JSON Object of name/animation pairs",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "animation": {
                                    "description": "Actual animation to use",
                                    "type": "string"
                                },
                                "name": {
                                    "description": "Internal (to the entity) name of this animation entry",
                                    "type": "string"
                                }
                            }
                        },
                        "scripts": {
                            "description": "Sets the mapping of internal animation controller references to actual animation controller. This is a JSON Array of name/animation-controller pairs",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "animation_controller": {
                                    "description": "Actual animation to use",
                                    "type": "string"
                                },
                                "name": {
                                    "description": "Internal (to the entity) name of this animation entry",
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "components": {
                    "description": "Properties to customize your entity.",
                    "type": "object",
                    "default": {},
                    "properties": {
                        "minecraft:health": {
                            "description": "The health of the entity.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "value": {
                                    "description": "The current amount of health the entity has",
                                    "type": "integer"
                                },
                                "max": {
                                    "description": "The max amount of health the mob has",
                                    "type": "integer"
                                }
                            }
                        },
                        "minecraft:knockback_resistance": {
                            "description": "How much resistance the entity has agenst knockback",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "value": {
                                    "description": "Amount of knockback resistance",
                                    "type": "number",
                                    "default": 0.0
                                }
                            }
                        },
                        
                        "minecraft:behavior.admire_item": {
                            "title": "AI GOALS",
                            "description": "Enables the mob to admire items that have been configured as admirable. Must be used in combination with the admire_item component",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "admire_item_sound": {
                                    "description": "The sound event to play when admiring the item",
                                    "type": "string"
                                },
                                "sound_interval": {
                                    "description": "The range of time in seconds to randomly wait before playing the sound again.",
                                    "type": [
                                        "array",
                                        "integer"
                                    ],
                                    "minItems": 2,
                                    "maxItems": 2,
                                    "default": 0,
                                    "items": {
                                        "type": "integer"
                                    }
                                }
                            }
                        },
                        "minecraft:behavior.barter": {
                            "title": "AI GOALS",
                            "description": "Enables the mob to barter for items that have been configured as barter currency. Must be used in combination with the barter component",
                            "type": "object",
                            "default": {}
                        },
                        "minecraft:behavior.beg": {
                            "title": "AI GOALS",
                            "description": "Allows this mob to look at and follow the player that holds food they like.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "items": {
                                    "description": "List of items that this mob likes",
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "look_distance": {
                                    "description": "Distance in blocks the mob will beg from",
                                    "type": "number",
                                    "default": 8.0
                                },
                                "look_time": {
                                    "description": "The range of time in seconds this mob will stare at the player holding a food they like, begging for it",
                                    "type": "array",
                                    "minItems": 2,
                                    "maxItems": 2,
                                    "default": [
                                        1,
                                        4
                                    ],
                                    "items": {
                                        "type": "integer"
                                    }
                                }
                            }
                        },
                        "minecraft:behavior.break_door": {
                            "title": "AI GOALS",
                            "description": "Allows this mob to break doors.",
                            "type": "object",
                            "default": {}
                        },
                        "minecraft:behavior.breed": {
                            "title": "AI GOALS",
                            "description": "Allows this mob to breed with other mobs.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "speed_multiplier": {
                                    "description": "Movement speed multiplier of the mob when using this AI Goal",
                                    "type": "number",
                                    "default": 1.0
                                }
                            }
                        },
                        "minecraft:behavior.celebrate": {
                            "title": "AI GOALS",
                            "description": "This allows the mob celebrate by jumping up and playing a sound periodically.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "celebration_sound": {
                                    "description": "The sound to occasionally play.",
                                    "type": "string"
                                },
                                "duration": {
                                    "description": "The duration of the celebration (in seconds).",
                                    "type": "number",
                                    "default": 1.0
                                },
                                "jump_interval": {
                                    "description": "The range of time in seconds to randomly wait before jumping again.",
                                    "type": [
                                        "array",
                                        "integer"
                                    ],
                                    "minItems": 2,
                                    "maxItems": 2,
                                    "default": 0,
                                    "items": {
                                        "type": "integer"
                                    }
                                },
                                "on_celebration_end_event": {
                                    "description": "The event to trigger when the goal's duration expires.",
                                    "$ref": "#/definitions/events"
                                },
                                "sound_interval": {
                                    "description": "The range of time in seconds to randomly wait before playing the sound again.",
                                    "type": [
                                        "array",
                                        "integer"
                                    ],
                                    "minItems": 2,
                                    "maxItems": 2,
                                    "default": 0,
                                    "items": {
                                        "type": "integer"
                                    }
                                }
                            }
                        },
                        "minecraft:behavior.defend_trusted_target": {
                            "title": "AI GOALS",
                            "description": "Allows the mob to target another mob that hurts an entity it trusts.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "aggro_sound": {
                                    "description": "Sound to occasionally play while defending.",
                                    "type": "string"
                                },
                                "attack_interval": {
                                    "description": "Time in seconds between attacks",
                                    "type": "integer",
                                    "default": 0
                                },
                                "entity_types": {
                                    "description": "List of entity types that this mob considers valid targets",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "default": {},
                                        "properties": {
                                            "filters": {
                                                "description": "Conditions that make this entry in the list valid",
                                                "$ref": "#/definitions/filter"
                                            },
                                            "max_dist": {
                                                "description": "Maximum distance this mob can be away to be a valid choice",
                                                "type": "number",
                                                "default": 16
                                            },
                                            "must_see": {
                                                "description": "If true, the mob has to be visible to be a valid choice",
                                                "type": "boolean",
                                                "default": false
                                            },
                                            "must_see_forget_duration": {
                                                "description": "Determines the amount of time in seconds that this mob will look for a target before forgetting about it and looking for a new one when the target isn't visible any more",
                                                "type": [
                                                    "boolean",
                                                    "number"
                                                ],
                                                "default": 3.0
                                            },
                                            "sprint_speed_multiplier": {
                                                "description": "Multiplier for the running speed. A value of 1.0 means the speed is unchanged",
                                                "type": "number",
                                                "default": 1.0
                                            },
                                            "walk_speed_multiplier": {
                                                "description": "Multiplier for the walking speed. A value of 1.0 means the speed is unchanged",
                                                "type": "number",
                                                "default": 1.0
                                            }
                                        }
                                    }
                                },
                                "must_see": {
                                    "description": "If true, only entities in this mob's viewing range can be selected as targets",
                                    "type": "boolean",
                                    "default": false
                                },
                                "must_see_forget_duration": {
                                    "description": "Determines the amount of time in seconds that this mob will look for a target before forgetting about it and looking for a new one when the target isn't visible any more",
                                    "type": "number",
                                    "default": 3.0
                                },
                                "within_radius": {
                                    "description": "Distance in blocks that the target can be within to launch an attack",
                                    "type": "number",
                                    "default": 0.0
                                }
                            }
                        },
                        "minecraft:behavior.door_interact": {
                            "title": "AI GOALS",
                            "description": "Allows the mob to open and close doors.",
                            "type": "object",
                            "default": {}
                        },
                        "minecraft:behavior.dragondeath": {
                            "title": "AI GOALS",
                            "description": "Allows the dragon to go out with glory. This controls the Ender Dragon's death animation and can't be used by other mobs.",
                            "type": "object",
                            "default": {}
                        },
                        "minecraft:behavior.dragonholdingpattern": {
                            "title": "AI GOALS",
                            "description": "Allows the Dragon to fly around in a circle around the center podium. Can only be used by the Ender Dragon.",
                            "type": "object",
                            "default": {}
                        },
                        "minecraft:behavior.dragonlanding": {
                            "title": "AI GOALS",
                            "description": "Allows the Dragon to stop flying and transition into perching mode. Can only be used by the Ender Dragon.",
                            "type": "object",
                            "default": {}
                        },
                        "minecraft:behavior.dragonscanning": {
                            "title": "AI GOALS",
                            "description": "Allows the dragon to look around for a player to attack while in perch mode. Can only be used by the Ender Dragon.",
                            "type": "object",
                            "default": {}
                        },
                        "minecraft:behavior.dragontakeoff": {
                            "title": "AI GOALS",
                            "description": "Allows the dragon to leave perch mode and go back to flying around. Can only be used by the Ender Dragon.",
                            "type": "object",
                            "default": {}
                        },
                        "minecraft:behavior.drink_potion": {
                            "title": "AI GOALS",
                            "description": "Allows the mob to drink potions based on specified environment conditions.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "potions": {
                                    "description": "A list of potions that this entity can drink. Each potion entry has the following parameters:",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "default": {},
                                        "properties": {
                                            "chance": {
                                                "description": "The percent chance (from 0.0 to 1.0) of this potion being selected when searching for a potion to use.",
                                                "type": "number",
                                                "default": 1.0
                                            },
                                            "filters": {
                                                "description": "The filters to use when determining if this potion can be selected.",
                                                "$ref": "#/definitions/filter"
                                            },
                                            "id": {
                                                "description": "The registry ID of the potion to use",
                                                "type": "number",
                                                "default": -1
                                            }
                                        }
                                    }
                                },
                                "speed_modifier": {
                                    "description": "The movement speed modifier to apply to the entity while it is drinking a potion. A value of 0 represents no change in speed.",
                                    "type": "number",
                                    "default": 0.0
                                }
                            }
                        },
                        "minecraft:behavior.eat_carried_item": {
                            "title": "AI GOALS",
                            "description": "If the mob is carrying a food item, the mob will eat it and the effects will be applied to the mob.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "delay_before_eating": {
                                    "description": "Time in seconds the mob should wait before eating the item.",
                                    "type": "number"
                                }
                            }
                        },
                        "minecraft:behavior.enderman_leave_block": {
                            "title": "AI GOALS",
                            "type": "object",
                            "default": {}
                        },
                        "minecraft:behavior.enderman_take_block": {
                            "title": "AI GOALS",
                            "description": "Allows the enderman to take a block and carry it around. Can only be used by Endermen.",
                            "type": "object",
                            "default": {}
                        },
                        "minecraft:behavior.explore_outskirts": {
                            "title": "AI GOALS",
                            "description": "allows a mob to explore the outskirts of a village",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "explore_dist": {
                                    "description": "The distance in which the mob will proceed past the village bounds",
                                    "type": "number",
                                    "default": 5.0
                                },
                                "speed_multiplier": {
                                    "description": "Movement speed multiplier of the mob when using this AI Goal",
                                    "type": "number",
                                    "default": 1.0
                                },
                                "wait_time": {
                                    "description": "The time the mob will stand around 'searching' for POIs",
                                    "type": "integer",
                                    "default": 0
                                }
                            }
                        },
                        "minecraft:behavior.find_cover": {
                            "title": "AI GOALS",
                            "description": "Allows the mob to seek shade.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "cooldown_time": {
                                    "description": "Time in seconds the mob has to wait before using the goal again",
                                    "type": "number",
                                    "default": 0.0
                                },
                                "speed_multiplier": {
                                    "description": "Movement speed multiplier of the mob when using this AI Goal",
                                    "type": "number",
                                    "default": 1.0
                                }
                            }
                        },
                        "minecraft:behavior.find_mount": {
                            "title": "AI GOALS",
                            "description": "Allows the mob to look around for another mob to ride atop it.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "avoid_water": {
                                    "description": "If true, the mob will not go into water blocks when going towards a mount",
                                    "type": "boolean",
                                    "default": false
                                },
                                "mount_distance": {
                                    "description": "This is the distance the mob needs to be, in blocks, from the desired mount to mount it. If the value is below 0, the mob will use its default attack distance",
                                    "type": "number",
                                    "default": -1.0
                                },
                                "start_delay": {
                                    "description": "Time the mob will wait before starting to move towards the mount",
                                    "type": "integer",
                                    "default": 0
                                },
                                "target_needed": {
                                    "description": "If true, the mob will only look for a mount if it has a target",
                                    "type": "boolean",
                                    "default": false
                                },
                                "within_radius": {
                                    "description": "Distance in blocks within which the mob will look for a mount",
                                    "type": "number",
                                    "default": 0.0
                                }
                            }
                        },
                        "minecraft:behavior.find_underwater_treasure": {
                            "title": "AI GOALS",
                            "description": "Allows the mob to move towards the nearest underwater ruin or shipwreck.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "search_range": {
                                    "description": "The range that the mob will search for a treasure chest within a ruin or shipwreck to move towards.",
                                    "type": "integer",
                                    "default": 0
                                },
                                "speed_multiplier": {
                                    "description": "Movement speed multiplier of the mob when using this AI Goal",
                                    "type": "number",
                                    "default": 1.0
                                },
                                "stop_distance": {
                                    "description": "The distance the mob will move before stopping.",
                                    "type": "number",
                                    "default": 2.0
                                }
                            }
                        },
                        "minecraft:behavior.flee_sun": {
                            "title": "AI GOALS",
                            "description": "Allows the mob to run away from direct sunlight and seek shade.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "speed_multiplier": {
                                    "description": "Movement speed multiplier of the mob when using this AI Goal",
                                    "type": "number",
                                    "default": 1.0
                                }
                            }
                        },
                        "minecraft:behavior.float": {
                            "title": "AI GOALS",
                            "description": "Allows the mob to stay afloat while swimming.",
                            "type": "object",
                            "default": {}
                        },
                        "minecraft:behavior.float_wander": {
                            "title": "AI GOALS",
                            "description": "Allows the mob to float around like the Ghast.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "float_duration": {
                                    "description": "Range of time in seconds the mob will float around before landing and choosing to do something else",
                                    "type": "array",
                                    "minItems": 2,
                                    "maxItems": 2,
                                    "default": [
                                        0.0,
                                        0.0
                                    ],
                                    "items": {
                                        "type": "number"
                                    }
                                },
                                "must_reach": {
                                    "description": "If true, the point has to be reachable to be a valid target",
                                    "type": "boolean",
                                    "default": false
                                },
                                "random_reselect": {
                                    "description": "If true, the mob will randomly pick a new point while moving to the previously selected one",
                                    "type": "boolean",
                                    "default": false
                                },
                                "xz_dist": {
                                    "description": "Distance in blocks on ground that the mob will look for a new spot to move to. Must be at least 1",
                                    "type": "integer",
                                    "minimum": 1,
                                    "default": 10
                                },
                                "y_dist": {
                                    "description": "Distance in blocks that the mob will look up or down for a new spot to move to. Must be at least 1",
                                    "type": "integer",
                                    "minimum": 1,
                                    "default": 7
                                },
                                "y_offset": {
                                    "description": "Height in blocks to add to the selected target position",
                                    "type": "number",
                                    "default": 0.0
                                }
                            }
                        },
                        "minecraft:behavior.follow_caravan": {
                            "title": "AI GOALS",
                            "description": "Allows the mob to follow mobs that are in a caravan.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "entity_count": {
                                    "description": "Number of entities that can be in the caravan",
                                    "type": "integer",
                                    "default": 1
                                },
                                "entity_types": {
                                    "description": "List of entity types that this mob can follow in a caravan",
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "filters": {
                                                "description": "Conditions that make this entry in the list valid",
                                                "$ref": "#/definitions/filter"
                                            },
                                            "max_dist": {
                                                "description": "Maximum distance this mob can be away to be a valid choice",
                                                "type": "number",
                                                "default": 16
                                            },
                                            "must_see": {
                                                "description": "If true, the mob has to be visible to be a valid choice",
                                                "type": "boolean",
                                                "default": false
                                            },
                                            "must_see_forget_duration": {
                                                "description": "Determines the amount of time in seconds that this mob will look for a target before forgetting about it and looking for a new one when the target isn't visible any more",
                                                "type": [
                                                    "boolean",
                                                    "number"
                                                ],
                                                "default": 3.0
                                            },
                                            "sprint_speed_multiplier": {
                                                "description": "Multiplier for the running speed. A value of 1.0 means the speed is unchanged",
                                                "type": "number",
                                                "default": 1.0
                                            },
                                            "walk_speed_multiplier": {
                                                "description": "Multiplier for the walking speed. A value of 1.0 means the speed is unchanged",
                                                "type": "number",
                                                "default": 1.0
                                            }
                                        }
                                    }
                                },
                                "speed_multiplier": {
                                    "description": "Movement speed multiplier of the mob when using this AI Goal",
                                    "type": "number",
                                    "default": 1.0
                                }
                            }
                        },
                        "minecraft:behavior.follow_mob": {
                            "title": "AI GOALS",
                            "description": "Allows the mob to follow other mobs.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "search_range": {
                                    "description": "The distance in blocks it will look for a mob to follow",
                                    "type": "integer",
                                    "default": 0
                                },
                                "speed_multiplier": {
                                    "description": "Movement speed multiplier of the mob when using this AI Goal",
                                    "type": "number",
                                    "default": 1.0
                                },
                                "stop_distance": {
                                    "description": "The distance in blocks this mob stops from the mob it is following",
                                    "type": "number",
                                    "default": 2.0
                                }
                            }
                        },
                        "minecraft:behavior.follow_owner": {
                            "title": "AI GOALS",
                            "description": "Allows the mob to follow the player that owns them.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "speed_multiplier": {
                                    "description": "Movement speed multiplier of the mob when using this AI Goal",
                                    "type": "number",
                                    "default": 1.0
                                },
                                "start_distance": {
                                    "description": "The distance in blocks that the owner can be away from this mob before it starts following it",
                                    "type": "number",
                                    "default": 10.0
                                },
                                "stop_distance": {
                                    "description": "The distance in blocks this mob will stop from its owner while following it",
                                    "type": "number",
                                    "default": 2.0
                                }
                            }
                        },
                        "minecraft:behavior.follow_parent": {
                            "title": "AI GOALS",
                            "description": "Allows the mob to follow their parent around.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "speed_multiplier": {
                                    "description": "Movement speed multiplier of the mob when using this AI Goal",
                                    "type": "number",
                                    "default": 1.0
                                }
                            }
                        },
                        "minecraft:behavior.follow_target_captain": {
                            "title": "AI GOALS",
                            "description": "Allows mob to move towards its current target captain.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "follow_distance": {
                                    "description": "Defines the distance in blocks the mob will stay from its target while following.",
                                    "type": "number",
                                    "default": 0.0
                                },
                                "within_radius": {
                                    "description": "Defines the maximum distance in blocks a mob can get from its target captain before giving up trying to follow it.",
                                    "type": "number",
                                    "default": 0.0
                                }
                            }
                        },
                        "minecraft:behavior.go_home": {
                            "title": "AI GOALS",
                            "description": "Allows the mob to move back to the position they were spawned.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "goal_radius": {
                                    "description": "Distance in blocks within the mob considers it has reached the goal. This is the \"wiggle room\" to stop the AI from bouncing back and forth trying to reach a specific spot",
                                    "type": "number",
                                    "default": 0.5
                                },
                                "interval": {
                                    "description": "A random value to determine when to randomly move somewhere. This has a 1/interval chance to choose this goal",
                                    "type": "integer",
                                    "default": 120
                                },
                                "on_home": {
                                    "description": "Event to run when this mob gets home.",
                                    "$ref": "#/definitions/events"
                                },
                                "speed_multiplier": {
                                    "description": "Movement speed multiplier of the mob when using this AI Goal",
                                    "type": "number",
                                    "default": 1.0
                                }
                            }
                        },
                        "minecraft:behavior.hide": {
                            "title": "AI GOALS",
                            "description": "Allows a mob with the hide component to attempt to move to - and hide at - an owned or nearby POI.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "duration": {
                                    "description": "Amount of time in seconds that the mob reacts.",
                                    "type": "number",
                                    "default": 1.0
                                },
                                "poi_type": {
                                    "description": "Defines what POI type to hide at.",
                                    "type": "string"
                                },
                                "speed_multiplier": {
                                    "description": "Movement speed multiplier of the mob when using this AI Goal",
                                    "type": "number",
                                    "default": 1.0
                                },
                                "timeout_cooldown": {
                                    "description": "The cooldown time in seconds before the goal can be reused after a internal failure or timeout condition.",
                                    "type": "number",
                                    "default": 8.0
                                }
                            }
                        },
                        "minecraft:behavior.hold_ground": {
                            "title": "AI GOALS",
                            "description": "The mob freezes and looks at the mob they are targeting.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "broadcast": {
                                    "description": "Whether to broadcast out the mob's target to other mobs of the same type.",
                                    "type": "boolean",
                                    "default": false
                                },
                                "broadcast_range": {
                                    "description": "Range in blocks for how far to broadcast.",
                                    "type": "number",
                                    "default": 0.0
                                },
                                "min_radius": {
                                    "description": "Minimum distance the target must be for the mob to run this goal.",
                                    "type": "number",
                                    "default": 10.0
                                },
                                "within_radius_event": {
                                    "description": "Event to run when target is within the radius. This event is broadcasted if broadcast is true.",
                                    "$ref": "#/definitions/events"
                                }
                            }
                        },
                        "minecraft:behavior.hurt_by_target": {
                            "title": "AI GOALS",
                            "description": "Allows the mob to target another mob that hurts them.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "alert_same_type": {
                                    "description": "If true, nearby mobs of the same type will be alerted about the damage",
                                    "type": "boolean",
                                    "default": false
                                },
                                "entity_types": {
                                    "description": "List of entity types that this mob can target when hurt by them",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "default": {},
                                        "properties": {
                                            "filters": {
                                                "description": "Conditions that make this entry in the list valid",
                                                "$ref": "#/definitions/filter"
                                            },
                                            "max_dist": {
                                                "description": "Maximum distance this mob can be away to be a valid choice",
                                                "type": "number",
                                                "default": 16
                                            },
                                            "must_see": {
                                                "description": "If true, the mob has to be visible to be a valid choice",
                                                "type": "boolean",
                                                "default": false
                                            },
                                            "must_see_forget_duration": {
                                                "description": "Determines the amount of time in seconds that this mob will look for a target before forgetting about it and looking for a new one when the target isn't visible any more",
                                                "type": [
                                                    "boolean",
                                                    "number"
                                                ],
                                                "default": 3.0
                                            },
                                            "sprint_speed_multiplier": {
                                                "description": "Multiplier for the running speed. A value of 1.0 means the speed is unchanged",
                                                "type": "number",
                                                "default": 1.0
                                            },
                                            "walk_speed_multiplier": {
                                                "description": "Multiplier for the walking speed. A value of 1.0 means the speed is unchanged",
                                                "type": "number",
                                                "default": 1.0
                                            }
                                        }
                                    }
                                },
                                "hurt_owner": {
                                    "description": "If true, the mob will hurt its owner and other mobs with the same owner as itself",
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        },
                        "minecraft:behavior.inspect_bookshelf": {
                            "title": "AI GOALS",
                            "description": "Allows the mob to inspect bookshelves.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "goal_radius": {
                                    "description": "Distance in blocks within the mob considers it has reached the goal. This is the \"wiggle room\" to stop the AI from bouncing back and forth trying to reach a specific spot",
                                    "type": "number",
                                    "default": 0.5
                                },
                                "search_count": {
                                    "description": "The number of blocks each tick that the mob will check within its search range and height for a valid block to move to. A value of 0 will have the mob check every block within range in one tick",
                                    "type": "integer",
                                    "default": 10
                                },
                                "search_height": {
                                    "description": "The height that the mob will search for bookshelves",
                                    "type": "integer",
                                    "default": 1
                                },
                                "search_range": {
                                    "description": "Distance in blocks the mob will look for books to inspect",
                                    "type": "integer",
                                    "default": 0
                                },
                                "speed_multiplier": {
                                    "description": "Movement speed multiplier of the mob when using this AI Goal",
                                    "type": "number",
                                    "default": 1.0
                                }
                            }
                        },
                        "minecraft:behavior.knockback_roar": {
                            "title": "AI GOALS",
                            "description": "Allows the mob to perform a damaging knockback that affects all nearby entities.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "attack_time": {
                                    "description": "The delay after which the knockback occurs (in seconds).",
                                    "type": "number",
                                    "default": 0.5
                                },
                                "cooldown_time": {
                                    "description": "Time in seconds the mob has to wait before using the goal again",
                                    "type": "number",
                                    "default": 0.0
                                },
                                "duration": {
                                    "description": "The duration of the roar (in seconds).",
                                    "type": "number",
                                    "default": 1.0
                                },
                                "knockback_damage": {
                                    "description": "The damage dealt by the knockback roar.",
                                    "type": "integer",
                                    "default": 6
                                },
                                "knockback_horizontal_strength": {
                                    "description": "The strength of the horizontal knockback.",
                                    "type": "integer",
                                    "default": 4
                                },
                                "knockback_range": {
                                    "description": "The radius (in blocks) of the knockback effect.",
                                    "type": "integer",
                                    "default": 4
                                },
                                "knockback_vertical_strength": {
                                    "description": "The strength of the vertical knockback.",
                                    "type": "integer",
                                    "default": 4
                                }
                            }
                        },
                        "minecraft:behavior.lay_down": {
                            "title": "AI GOALS",
                            "description": "Allows mobs to lay down at times",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "interval": {
                                    "description": "A random value to determine at what intervals something can occur. This has a 1/interval chance to choose this goal",
                                    "type": "integer",
                                    "default": 120
                                },
                                "random_stop_interval": {
                                    "description": "a random value in which the goal can use to pull out of the behavior. This is a 1/interval chance to play the sound",
                                    "type": "integer",
                                    "default": 120
                                }
                            }
                        },
                        "minecraft:behavior.lay_egg": {
                            "title": "AI GOALS",
                            "description": "Allows the mob to lay an egg block on a sand block if the mob is pregnant.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "goal_radius": {
                                    "description": "Distance in blocks within the mob considers it has reached the goal. This is the \"wiggle room\" to stop the AI from bouncing back and forth trying to reach a specific spot",
                                    "type": "number",
                                    "default": 0.5
                                },
                                "on_lay": {
                                    "description": "Event to run when this mob lays the egg.",
                                    "$ref": "#/definitions/events"
                                },
                                "search_height": {
                                    "description": "Height in blocks the mob will look for sand block to move towards",
                                    "type": "integer",
                                    "default": 1
                                },
                                "search_range": {
                                    "description": "The distance in blocks it will look for a sand block to move towards",
                                    "type": "integer",
                                    "default": 0
                                },
                                "speed_multiplier": {
                                    "description": "Movement speed multiplier of the mob when using this AI Goal",
                                    "type": "number",
                                    "default": 1.0
                                }
                            }
                        },
                        "minecraft:behavior.leap_at_target": {
                            "title": "AI GOALS",
                            "description": "Allows monsters to jump at and attack their target. Can only be used by hostile mobs.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "must_be_on_ground": {
                                    "description": "If true, the mob will only jump at its target if its on the ground. Setting it to false will allow it to jump even if its already in the air",
                                    "type": "boolean",
                                    "default": true
                                },
                                "set_persistent": {
                                    "description": "Allows the actor to be set to persist upon targeting a player",
                                    "type": "boolean",
                                    "default": false
                                },
                                "yd": {
                                    "description": "The height in blocks the mob jumps when leaping at its target",
                                    "type": "number",
                                    "default": 0.0
                                }
                            }
                        },
                        "minecraft:behavior.look_at_entity": {
                            "title": "AI GOALS",
                            "description": "Allows the mob to look at nearby entities.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "angle_of_view_horizontal": {
                                    "description": "The angle in degrees that the mob can see in the Y-axis (up-down)",
                                    "type": "integer",
                                    "default": 360
                                },
                                "angle_of_view_vertical": {
                                    "description": "The angle in degrees that the mob can see in the X-axis (left-right)",
                                    "type": "integer",
                                    "default": 360
                                },
                                "filters": {
                                    "description": "Filter to determine the conditions for this mob to look at the entity",
                                    "$ref": "#/definitions/filter"
                                },
                                "look_distance": {
                                    "description": "The distance in blocks from which the entity will look at",
                                    "type": "number",
                                    "default": 8.0
                                },
                                "look_time": {
                                    "description": "Time range to look at the entity",
                                    "type": "array",
                                    "minItems": 2,
                                    "maxItems": 2,
                                    "default": [
                                        2,
                                        4
                                    ],
                                    "items": {
                                        "type": "integer"
                                    }
                                },
                                "probability": {
                                    "description": "The probability of looking at the target. A value of 1.00 is 100%",
                                    "type": "number",
                                    "default": 0.02
                                }
                            }
                        },
                        "minecraft:behavior.look_at_player": {
                            "title": "AI GOALS",
                            "description": "Allows the mob to look at the player when the player is nearby.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "angle_of_view_horizontal": {
                                    "description": "The angle in degrees that the mob can see in the Y-axis (up-down)",
                                    "type": "integer",
                                    "default": 360
                                },
                                "angle_of_view_vertical": {
                                    "description": "The angle in degrees that the mob can see in the X-axis (left-right)",
                                    "type": "integer",
                                    "default": 360
                                },
                                "look_distance": {
                                    "description": "The distance in blocks from which the entity will look a",
                                    "type": "number",
                                    "default": 8.0
                                },
                                "look_time": {
                                    "description": "Time range to look at the entity",
                                    "type": "array",
                                    "minItems": 2,
                                    "maxItems": 2,
                                    "default": [
                                        2,
                                        4
                                    ],
                                    "items": {
                                        "type": "integer"
                                    }
                                },
                                "probability": {
                                    "description": "The probability of looking at the target. A value of 1.00 is 100%",
                                    "type": "number",
                                    "default": 0.02
                                }
                            }
                        },
                        "minecraft:behavior.look_at_target": {
                            "title": "AI GOALS",
                            "description": "Allows the mob to look at the entity they are targetting.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "angle_of_view_horizontal": {
                                    "description": "The angle in degrees that the mob can see in the Y-axis (up-down)",
                                    "type": "integer",
                                    "default": 360
                                },
                                "angle_of_view_vertical": {
                                    "description": "The angle in degrees that the mob can see in the X-axis (left-right)",
                                    "type": "integer",
                                    "default": 360
                                },
                                "look_distance": {
                                    "description": "The distance in blocks from which the entity will look at",
                                    "type": "number",
                                    "default": 8.0
                                },
                                "look_time": {
                                    "description": "Time range to look at the entity",
                                    "type": "array",
                                    "minItems": 2,
                                    "maxItems": 2,
                                    "default": [
                                        2,
                                        4
                                    ],
                                    "items": {
                                        "type": "integer"
                                    }
                                },
                                "probability": {
                                    "description": "The probability of looking at the target. A value of 1.00 is 100%",
                                    "type": "number",
                                    "default": 0.02
                                }
                            }
                        },
                        "minecraft:behavior.look_at_trading_player": {
                            "title": "AI GOALS",
                            "description": "Allows the mob to look at the player they are trading with.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "angle_of_view_horizontal": {
                                    "description": "The angle in degrees that the mob can see in the Y-axis (up-down)",
                                    "type": "integer",
                                    "default": 360
                                },
                                "angle_of_view_vertical": {
                                    "description": "The angle in degrees that the mob can see in the X-axis (left-right)",
                                    "type": "integer",
                                    "default": 360
                                },
                                "look_distance": {
                                    "description": "The distance in blocks from which the entity will look at",
                                    "type": "number",
                                    "default": 8.0
                                },
                                "look_time": {
                                    "description": "Time range to look at the entity",
                                    "type": "array",
                                    "minItems": 2,
                                    "maxItems": 2,
                                    "default": [
                                        2,
                                        4
                                    ],
                                    "items": {
                                        "type": "integer"
                                    }
                                },
                                "probability": {
                                    "description": "The probability of looking at the target. A value of 1.00 is 100%",
                                    "type": "number",
                                    "default": 0.02
                                }
                            }
                        },
                        "minecraft:behavior.make_love": {
                            "title": "AI GOALS",
                            "description": "Allows the villager to look for a mate to spawn other villagers with. Can only be used by Villagers.",
                            "type": "object",
                            "default": {}
                        },
                        "minecraft:behavior.mingle": {
                            "title": "AI GOALS",
                            "description": "Allows an entity to go to the village bell and mingle with other entities",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "cooldown_time": {
                                    "description": "Time in seconds the mob has to wait before using the goal again",
                                    "type": "number",
                                    "default": 0.0
                                },
                                "duration": {
                                    "description": "Amount of time in seconds that the entity will chat with another entity",
                                    "type": "number",
                                    "default": 1.0
                                },
                                "mingle_distance": {
                                    "description": "The distance from its partner that this entity will mingle. If the entity type is not the same as the entity, this value needs to be identical on both entities.",
                                    "type": "number",
                                    "default": 2.0
                                },
                                "mingle_partner_type": {
                                    "description": "The entity type that this entity is allowed to mingle with",
                                    "type": "array"
                                },
                                "speed_multiplier": {
                                    "description": "Movement speed multiplier of the mob when using this AI Goal",
                                    "type": "number",
                                    "default": 1.0
                                }
                            }
                        },
                        "minecraft:behavior.mount_pathing": {
                            "title": "AI GOALS",
                            "description": "Allows the mob to move around on its own while mounted seeking a target to attack.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "speed_multiplier": {
                                    "description": "Movement speed multiplier of the mob when using this AI Goal",
                                    "type": "number",
                                    "default": 1.0
                                },
                                "target_dist": {
                                    "description": "The distance at which this mob wants to be away from its target",
                                    "type": "number",
                                    "default": 0.0
                                },
                                "track_target": {
                                    "description": "If true, this mob will chase after the target as long as it's a valid target",
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        },
                        "minecraft:behavior.move_indoors": {
                            "title": "AI GOALS",
                            "description": "Can only be used by Villagers. Allows them to seek shelter indoors.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "speed_multiplier": {
                                    "description": "Movement speed multiplier of the mob when using this AI Goal",
                                    "type": "number",
                                    "default": 1.0
                                },
                                "timeout_cooldown": {
                                    "description": "The cooldown time in seconds before the goal can be reused after a internal failure or timeout condition",
                                    "type": "number",
                                    "default": 8.0
                                }
                            }
                        },
                        "minecraft:behavior.move_through_village": {
                            "title": "AI GOALS",
                            "description": "Can only be used by Villagers. Allows the villagers to create paths around the village.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "only_at_night": {
                                    "description": "If true, the mob will only move through the village during night time",
                                    "type": "boolean",
                                    "default": false
                                },
                                "speed_multiplier": {
                                    "description": "Movement speed multiplier of the mob when using this AI Goal",
                                    "type": "number",
                                    "default": 1.0
                                }
                            }
                        },
                        "minecraft:behavior.move_to_block": {
                            "title": "AI GOALS",
                            "description": "Allows mob to move towards a block.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "goal_radius": {
                                    "description": "Distance in blocks within the mob considers it has reached the goal. This is the \"wiggle room\" to stop the AI from bouncing back and forth trying to reach a specific spot",
                                    "type": "number",
                                    "default": 0.5
                                },
                                "on_reach": {
                                    "description": "Event to run on block reached.",
                                    "$ref": "#/definitions/events"
                                },
                                "on_stay_completed": {
                                    "description": "Event to run on completing a stay of stay_duration at the block.",
                                    "$ref": "#/definitions/events"
                                },
                                "search_height": {
                                    "description": "The height in blocks that the mob will look for the block.",
                                    "type": "integer",
                                    "default": 1
                                },
                                "search_range": {
                                    "description": "The distance in blocks that the mob will look for the block.",
                                    "type": "integer",
                                    "default": 0
                                },
                                "speed_multiplier": {
                                    "description": "Movement speed multiplier of the mob when using this AI Goal",
                                    "type": "number",
                                    "default": 1.0
                                },
                                "start_chance": {
                                    "description": "Chance to start the behavior (applied after each random tick_interval).",
                                    "type": "number",
                                    "default": 1.0
                                },
                                "stay_duration": {
                                    "description": "Number of ticks needed to complete a stay at the block.",
                                    "type": "number",
                                    "default": 0.0
                                },
                                "target_blocks": {
                                    "description": "Block types to move to.",
                                    "type": "array"
                                },
                                "target_offset": {
                                    "description": "Offset to add to the selected target position.",
                                    "type": "array",
                                    "minItems": 3,
                                    "maxItems": 3,
                                    "default": [
                                        0,
                                        0,
                                        0
                                    ],
                                    "items": {
                                        "type": "number"
                                    }
                                },
                                "target_selection_method": {
                                    "description": "Kind of block to find fitting the specification. Valid values are \"random\" and \"nearest\".",
                                    "enum": [
                                        "random",
                                        "nearest"
                                    ]
                                },
                                "tick_interval": {
                                    "description": "Average interval in ticks to try to run this behavior.",
                                    "type": "integer",
                                    "default": 20
                                }
                            }
                        },
                        "minecraft:behavior.move_to_land": {
                            "title": "AI GOALS",
                            "description": "Allows the mob to move back onto land when in water.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "goal_radius": {
                                    "description": "Distance in blocks within the mob considers it has reached the goal. This is the \"wiggle room\" to stop the AI from bouncing back and forth trying to reach a specific spot",
                                    "type": "number",
                                    "default": 0.5
                                },
                                "search_count": {
                                    "description": "The number of blocks each tick that the mob will check within its search range and height for a valid block to move to. A value of 0 will have the mob check every block within range in one tick",
                                    "type": "integer",
                                    "default": 10
                                },
                                "search_height": {
                                    "description": "Height in blocks the mob will look for land to move towards",
                                    "type": "integer",
                                    "default": 1
                                },
                                "search_range": {
                                    "description": "The distance in blocks it will look for land to move towards",
                                    "type": "integer",
                                    "default": 0
                                },
                                "speed_multiplier": {
                                    "description": "Movement speed multiplier of the mob when using this AI Goal",
                                    "type": "number",
                                    "default": 1.0
                                }
                            }
                        },
                        "minecraft:behavior.move_to_lava": {
                            "title": "AI GOALS",
                            "description": "Allows the mob to move back into lava when on land.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "goal_radius": {
                                    "description": "Distance in blocks within the mob considers it has reached the goal. This is the \"wiggle room\" to stop the AI from bouncing back and forth trying to reach a specific spot",
                                    "type": "number",
                                    "default": 0.5
                                },
                                "search_count": {
                                    "description": "The number of blocks each tick that the mob will check within its search range and height for a valid block to move to. A value of 0 will have the mob check every block within range in one tick",
                                    "type": "integer",
                                    "default": 10
                                },
                                "search_height": {
                                    "description": "Height in blocks the mob will look for lava to move towards",
                                    "type": "integer",
                                    "default": 1
                                },
                                "search_range": {
                                    "description": "The distance in blocks it will look for lava to move towards",
                                    "type": "integer",
                                    "default": 0
                                },
                                "speed_multiplier": {
                                    "description": "Movement speed multiplier of the mob when using this AI Goal",
                                    "type": "number",
                                    "default": 1.0
                                }
                            }
                        },
                        "minecraft:behavior.move_to_liquid": {
                            "title": "AI GOALS",
                            "description": "Allows the mob to move into a liquid when on land.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "goal_radius": {
                                    "description": "Distance in blocks within the mob considers it has reached the goal. This is the \"wiggle room\" to stop the AI from bouncing back and forth trying to reach a specific spot",
                                    "type": "number",
                                    "default": 0.5
                                },
                                "material_type": {
                                    "description": "The material type of the liquid block to find. Valid values are \"Any\", \"Water\", and \"Lava\".",
                                    "enum": [
                                        "any",
                                        "water",
                                        "lava"
                                    ]
                                },
                                "search_count": {
                                    "description": "The number of blocks each tick that the mob will check within its search range and height for a valid block to move to. A value of 0 will have the mob check every block within range in one tick",
                                    "type": "integer",
                                    "default": 10
                                },
                                "search_height": {
                                    "description": "Height in blocks the mob will look for the liquid block to move towards",
                                    "type": "integer",
                                    "default": 1
                                },
                                "search_range": {
                                    "description": "The distance in blocks it will look for the liquid block to move towards",
                                    "type": "integer",
                                    "default": 0
                                },
                                "speed_multiplier": {
                                    "description": "Movement speed multiplier of the mob when using this AI Goal",
                                    "type": "number",
                                    "default": 1.0
                                }
                            }
                        },
                        "minecraft:behavior.move_to_poi": {
                            "title": "AI GOALS",
                            "description": "Allows the mob to move to a POI if able to",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "poi_type": {
                                    "description": "Tells the goal what POI type it should be looking for",
                                    "type": "string"
                                },
                                "speed_multiplier": {
                                    "description": "Movement speed multiplier of the mob when using this AI Goal",
                                    "type": "number",
                                    "default": 1.0
                                }
                            }
                        },
                        "minecraft:behavior.move_to_random_block": {
                            "title": "AI GOALS",
                            "description": "Allows mob to move towards a random block.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "block_distance": {
                                    "description": "Defines the distance from the mob, in blocks, that the block to move to will be chosen.",
                                    "type": "number",
                                    "default": 16.0
                                },
                                "within_radius": {
                                    "description": "Defines the distance in blocks the mob has to be from the block for the movement to be finished.",
                                    "type": "number",
                                    "default": 0.0
                                }
                            }
                        },
                        "minecraft:behavior.move_to_village": {
                            "title": "AI GOALS",
                            "description": "Allows the mob to move into a random location within a village.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "cooldown_time": {
                                    "description": "Time in seconds the mob has to wait before using the goal again",
                                    "type": "number",
                                    "default": 0.0
                                },
                                "goal_radius": {
                                    "description": "Distance in blocks within the mob considers it has reached the goal. This is the \"wiggle room\" to stop the AI from bouncing back and forth trying to reach a specific spot",
                                    "type": "number",
                                    "default": 0.5
                                },
                                "search_range": {
                                    "description": "The distance in blocks to search for villages. If <= 0, find the closest village regardless of distance.",
                                    "type": "integer",
                                    "default": 0
                                },
                                "speed_multiplier": {
                                    "description": "Movement speed multiplier of the mob when using this AI Goal",
                                    "type": "number",
                                    "default": 1.0
                                }
                            }
                        },
                        "minecraft:behavior.move_to_water": {
                            "title": "AI GOALS",
                            "description": "Allows the mob to move back into water when on land.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "goal_radius": {
                                    "description": "Distance in blocks within the mob considers it has reached the goal. This is the \"wiggle room\" to stop the AI from bouncing back and forth trying to reach a specific spot",
                                    "type": "number",
                                    "default": 0.5
                                },
                                "search_count": {
                                    "description": "The number of blocks each tick that the mob will check within its search range and height for a valid block to move to. A value of 0 will have the mob check every block within range in one tick",
                                    "type": "integer",
                                    "default": 10
                                },
                                "search_height": {
                                    "description": "Height in blocks the mob will look for water to move towards",
                                    "type": "integer",
                                    "default": 1
                                },
                                "search_range": {
                                    "description": "The distance in blocks it will look for water to move towards",
                                    "type": "integer",
                                    "default": 1.0
                                },
                                "speed_multiplier": {
                                    "description": "Movement speed multiplier of the mob when using this AI Goal",
                                    "type": "number",
                                    "default": 1.0
                                }
                            }
                        },
                        "minecraft:behavior.move_towards_target": {
                            "title": "AI GOALS",
                            "description": "Allows mob to move towards its current target.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "within_radius": {
                                    "description": "Defines the radius in blocks that the mob tries to be from the target. A value of 0 means it tries to occupy the same block as the target",
                                    "type": "number",
                                    "default": 0.0
                                }
                            }
                        },
                        "minecraft:behavior.nap": {
                            "title": "AI GOALS",
                            "description": "Allows mobs to occassionally stop and take a nap under certain conditions.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "cooldown_max": {
                                    "description": "Maximum time in seconds the mob has to wait before using the goal again",
                                    "type": "number",
                                    "default": 0.0
                                },
                                "cooldown_min": {
                                    "description": "Minimum time in seconds the mob has to wait before using the goal again",
                                    "type": "number",
                                    "default": 0.0
                                },
                                "mob_detect_dist": {
                                    "description": "The block distance in x and z that will be checked for mobs that this mob detects",
                                    "type": "number",
                                    "default": 6.0
                                },
                                "mob_detect_height": {
                                    "description": "The block distance in y that will be checked for mobs that this mob detects",
                                    "type": "number",
                                    "default": 6.0
                                }
                            }
                        },
                        "minecraft:behavior.nearest_attackable_target": {
                            "title": "AI GOALS",
                            "description": "Allows an entity to attack the closest target within a given subset of specific target types.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "attack_interval": {
                                    "description": "Time range (in seconds) between searching for an attack target, range is in (0, \"attack_interval\"]. Only used if \"attack_interval\" is greater than 0, otherwise \"scan_interval\" is used.",
                                    "type": "integer",
                                    "default": 0
                                },
                                "attack_interval_min": {
                                    "description": "Alias for \"attack_interval\"; provides the same functionality as \"attack_interval\".",
                                    "type": "integer",
                                    "default": 0
                                },
                                "attack_owner": {
                                    "description": "If true, this entity can attack its owner.",
                                    "type": "boolean",
                                    "default": false
                                },
                                "entity_types": {
                                    "description": "Filters which types of targets are valid for this entity.",
                                    "type": [
                                        "object",
                                        "array"
                                    ],
                                    "default": {},
                                    "items": {
                                        "$ref": "#/properties/minecraft:entity/properties/components/properties/minecraft:behavior.nearest_attackable_target/properties/entity_types"
                                    },
                                    "properties": {
                                        "filters": {
                                            "description": "Conditions that make this target a valid type.",
                                            "$ref": "#/definitions/filter"
                                        },
                                        "max_dist": {
                                            "description": "To be a valid target choice, the target type cannot be farther away from this entity than \"max_dist\".",
                                            "type": "number",
                                            "default": 16
                                        },
                                        "must_see": {
                                            "description": "Determines if target-validity requires this entity to be in range only, or both in range and in sight.",
                                            "type": "boolean",
                                            "default": false
                                        },
                                        "must_see_forget_duration": {
                                            "description": "Time (in seconds) the target must not be seen by this entity to become invalid. Used only if \"must_see\" is true.",
                                            "type": [
                                                "boolean",
                                                "number"
                                            ],
                                            "default": 3.0
                                        }
                                    }
                                },
                                "must_reach": {
                                    "description": "If true, this entity requires a path to the target.",
                                    "type": "boolean",
                                    "default": false
                                },
                                "must_see": {
                                    "description": "Determines if target-validity requires this entity to be in range only, or both in range and in sight.",
                                    "type": "boolean",
                                    "default": false
                                },
                                "must_see_forget_duration": {
                                    "description": "Time (in seconds) the target must not be seen by this entity to become invalid. Used only if \"must_see\" is true.",
                                    "type": "number",
                                    "default": 3.0
                                },
                                "persist_time": {
                                    "description": "Time (in seconds) this entity can continue attacking the target after the target is no longer valid.",
                                    "type": "number",
                                    "default": 0.0
                                },
                                "reselect_targets": {
                                    "description": "Allows the attacking entity to update the nearest target, otherwise a target is only reselected after each \"scan_interval\" or \"attack_interval\".",
                                    "type": "boolean",
                                    "default": false
                                },
                                "scan_interval": {
                                    "description": "If \"attack_interval\" is 0 or isn't declared, then between attacks: scanning for a new target occurs every amount of ticks equal to \"scan_interval\", minimum value is 1. Values under 10 can affect performance.",
                                    "type": "integer",
                                    "default": 10
                                },
                                "set_persistent": {
                                    "description": "Allows the actor to be set to persist upon targeting a player",
                                    "type": "boolean",
                                    "default": false
                                },
                                "target_invisible_multiplier": {
                                    "description": "Multiplied with the target's armor coverage percentage to modify \"max_dist\" when detecting an invisible target.",
                                    "type": "number",
                                    "default": 0.7
                                },
                                "target_search_height": {
                                    "description": "Maximum vertical target-search distance, if it's greater than the target type's \"max_dist\". A negative value defaults to \"entity_types\" greatest \"max_dist\".",
                                    "type": "number",
                                    "default": -1.0
                                },
                                "target_sneak_visibility_multiplier": {
                                    "description": "Multiplied with the target type's \"max_dist\" when trying to detect a sneaking target.",
                                    "type": "number",
                                    "default": 0.8
                                },
                                "within_radius": {
                                    "description": "Maximum distance this entity can be from the target when following it, otherwise the target becomes invalid. This value is only used if the entity doesn't declare \"minecraft:follow_range\".",
                                    "type": "number",
                                    "default": 0.0
                                }
                            }
                        },
                        "minecraft:behavior.nearest_prioritized_attackable_target": {
                            "title": "AI GOALS",
                            "description": "Allows the mob to check for and pursue the nearest valid target.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "attack_interval": {
                                    "description": "Time in seconds before selecting a target",
                                    "type": "integer",
                                    "default": 0
                                },
                                "entity_types": {
                                    "description": "List of entity types that this mob considers valid targets",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "default": {},
                                        "properties": {
                                            "filters": {
                                                "description": "Conditions that make this entry in the list valid",
                                                "$ref": "#/definitions/filter"
                                            },
                                            "max_dist": {
                                                "description": "Maximum distance this mob can be away to be a valid choice",
                                                "type": "number",
                                                "default": 16
                                            },
                                            "must_see": {
                                                "description": "If true, the mob has to be visible to be a valid choice",
                                                "type": "boolean",
                                                "default": false
                                            },
                                            "must_see_forget_duration": {
                                                "description": "Determines the amount of time in seconds that this mob will look for a target before forgetting about it and looking for a new one when the target isn't visible any more",
                                                "type": [
                                                    "boolean",
                                                    "number"
                                                ],
                                                "default": 3.0
                                            },
                                            "sprint_speed_multiplier": {
                                                "description": "Multiplier for the running speed. A value of 1.0 means the speed is unchanged",
                                                "type": "number",
                                                "default": 1.0
                                            },
                                            "walk_speed_multiplier": {
                                                "description": "Multiplier for the walking speed. A value of 1.0 means the speed is unchanged",
                                                "type": "number",
                                                "default": 1.0
                                            }
                                        }
                                    }
                                },
                                "must_reach": {
                                    "description": "If true, only entities that this mob can path to can be selected as targets",
                                    "type": "boolean",
                                    "default": false
                                },
                                "must_see": {
                                    "description": "If true, only entities in this mob's viewing range can be selected as targets",
                                    "type": "boolean",
                                    "default": false
                                },
                                "must_see_forget_duration": {
                                    "description": "Determines the amount of time in seconds that this mob will look for a target before forgetting about it and looking for a new one when the target isn't visible any more",
                                    "type": "number",
                                    "default": 3.0
                                },
                                "persist_time": {
                                    "description": "Time in seconds for a valid target to stay targeted when it becomes and invalid target.",
                                    "type": "number",
                                    "default": 0.0
                                },
                                "priority": {
                                    "description": "Specifies the priority in which filtered enemy types should be attacked. Lower number means higher priority.",
                                    "type": "integer",
                                    "default": 0
                                },
                                "reselect_targets": {
                                    "description": "If true, the target will change to the current closest entity whenever a different entity is closer",
                                    "type": "boolean",
                                    "default": false
                                },
                                "scan_interval": {
                                    "description": "How many ticks to wait between scanning for a target.",
                                    "type": "integer",
                                    "default": 10
                                },
                                "set_persistent": {
                                    "description": "Allows the actor to be set to persist upon targeting a player",
                                    "type": "boolean",
                                    "default": false
                                },
                                "target_search_height": {
                                    "description": "Height in blocks to search for a target mob. -1.0f means the height does not matter.",
                                    "type": "number",
                                    "default": -1.0
                                },
                                "within_radius": {
                                    "description": "Distance in blocks that the target can be within to launch an attack",
                                    "type": "number",
                                    "default": 0.0
                                }
                            }
                        },
                        "minecraft:behavior.ocelot_sit_on_block": {
                            "title": "AI GOALS",
                            "description": "Allows to mob to be able to sit in place like the ocelot.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "speed_multiplier": {
                                    "description": "Movement speed multiplier of the mob when using this AI Goal",
                                    "type": "number",
                                    "default": 1.0
                                }
                            }
                        },
                        "minecraft:behavior.offer_flower": {
                            "title": "AI GOALS",
                            "description": "Allows the mob to offer the player a flower like the Iron Golem does.",
                            "type": "object",
                            "default": {}
                        },
                        "minecraft:behavior.open_door": {
                            "title": "AI GOALS",
                            "description": "Allows the mob to open doors. Requires the mob to be able to path through doors, otherwise the mob won't even want to try opening them.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "close_door_after": {
                                    "description": "If true, the mob will close the door after opening it and going through it",
                                    "type": "boolean",
                                    "default": true
                                }
                            }
                        },
                        "minecraft:behavior.owner_hurt_by_target": {
                            "title": "AI GOALS",
                            "description": "Allows the mob to target another mob that hurts their owner.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "entity_types": {
                                    "description": "List of entity types that this mob can target if they hurt their owner",
                                    "type": "object",
                                    "default": {},
                                    "properties": {
                                        "filters": {
                                            "description": "Conditions that make this entry in the list valid",
                                            "$ref": "#/definitions/filter"
                                        },
                                        "max_dist": {
                                            "description": "Maximum distance this mob can be away to be a valid choice",
                                            "type": "number",
                                            "default": 16
                                        },
                                        "must_see": {
                                            "description": "If true, the mob has to be visible to be a valid choice",
                                            "type": "boolean",
                                            "default": false
                                        },
                                        "must_see_forget_duration": {
                                            "description": "Determines the amount of time in seconds that this mob will look for a target before forgetting about it and looking for a new one when the target isn't visible any more",
                                            "type": [
                                                "boolean",
                                                "integer"
                                            ],
                                            "default": 3.0
                                        },
                                        "sprint_speed_multiplier": {
                                            "description": "Multiplier for the running speed. A value of 1.0 means the speed is unchanged",
                                            "type": "number",
                                            "default": 1.0
                                        },
                                        "walk_speed_multiplier": {
                                            "description": "Multiplier for the walking speed. A value of 1.0 means the speed is unchanged",
                                            "type": "number",
                                            "default": 1.0
                                        }
                                    }
                                }
                            }
                        },
                        "minecraft:behavior.owner_hurt_target": {
                            "title": "AI GOALS",
                            "description": "Allows the mob to target a mob that is hurt by their owner.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "entity_types": {
                                    "description": "List of entity types that this entity can target if the potential target is hurt by this mob's owner",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "default": {},
                                        "properties": {
                                            "filters": {
                                                "description": "Conditions that make this entry in the list valid",
                                                "$ref": "#/definitions/filter"
                                            },
                                            "max_dist": {
                                                "description": "Maximum distance this mob can be away to be a valid choice",
                                                "type": "number",
                                                "default": 16
                                            },
                                            "must_see": {
                                                "description": "If true, the mob has to be visible to be a valid choice",
                                                "type": "boolean",
                                                "default": false
                                            },
                                            "must_see_forget_duration": {
                                                "description": "Determines the amount of time in seconds that this mob will look for a target before forgetting about it and looking for a new one when the target isn't visible any more",
                                                "type": [
                                                    "boolean",
                                                    "number"
                                                ],
                                                "default": 3.0
                                            },
                                            "sprint_speed_multiplier": {
                                                "description": "Multiplier for the running speed. A value of 1.0 means the speed is unchanged",
                                                "type": "number",
                                                "default": 1.0
                                            },
                                            "walk_speed_multiplier": {
                                                "description": "Multiplier for the walking speed. A value of 1.0 means the speed is unchanged",
                                                "type": "number",
                                                "default": 1.0
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "minecraft:behavior.panic": {
                            "title": "AI GOALS",
                            "description": "Allows the mob to enter the panic state, which makes it run around and away from the damage source that made it enter this state.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "damage_sources": {
                                    "description": "The list of Entity Damage Sources that will cause this mob to panic",
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "force": {
                                    "description": "If true, this mob will not stop panicking until it can't move anymore or the goal is removed from it",
                                    "type": "boolean",
                                    "default": false
                                },
                                "ignore_mob_damage": {
                                    "description": "If true, the mob will not panic in response to damage from other mobs. This overrides the damage types in \"damage_sources\"",
                                    "type": "boolean",
                                    "default": false
                                },
                                "prefer_water": {
                                    "description": "If true, the mob will prefer water over land",
                                    "type": "boolean",
                                    "default": false
                                },
                                "speed_multiplier": {
                                    "description": "Movement speed multiplier of the mob when using this AI Goal",
                                    "type": "number",
                                    "default": 1.0
                                }
                            }
                        },
                        "minecraft:behavior.peek": {
                            "title": "AI GOALS",
                            "description": "Allows the mob to peek out. This is what the shulker uses to look out of its shell.",
                            "type": "object",
                            "default": {}
                        },
                        "minecraft:behavior.pet_sleep_with_owner": {
                            "title": "AI GOALS",
                            "description": "Allows the pet mob to move onto a bed with its owner while sleeping.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "goal_radius": {
                                    "description": "Distance in blocks within the mob considers it has reached the goal. This is the \"wiggle room\" to stop the AI from bouncing back and forth trying to reach a specific spot",
                                    "type": "number",
                                    "default": 0.5
                                },
                                "search_height": {
                                    "description": "Height in blocks from the owner the pet can be to sleep with owner.",
                                    "type": "integer",
                                    "default": 1
                                },
                                "search_range": {
                                    "description": "The distance in blocks from the owner the pet can be to sleep with owner.",
                                    "type": "integer",
                                    "default": 0
                                },
                                "speed_multiplier": {
                                    "description": "Movement speed multiplier of the mob when using this AI Goal",
                                    "type": "number",
                                    "default": 1.0
                                }
                            }
                        },
                        "minecraft:behavior.pickup_items": {
                            "title": "AI GOALS",
                            "description": "Allows the mob to pick up items on the ground.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "can_pickup_any_item": {
                                    "description": "If true, the mob can pickup any item",
                                    "type": "boolean",
                                    "default": false
                                },
                                "can_pickup_to_hand_or_equipment": {
                                    "description": "If true, the mob can pickup items to its hand or armor slots",
                                    "type": "boolean",
                                    "default": true
                                },
                                "excluded_items": {
                                    "description": "List of items this mob will not pick up",
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "goal_radius": {
                                    "description": "Distance in blocks within the mob considers it has reached the goal. This is the \"wiggle room\" to stop the AI from bouncing back and forth trying to reach a specific spot",
                                    "type": "number",
                                    "default": 0.5
                                },
                                "max_dist": {
                                    "description": "Maximum distance this mob will look for items to pick up",
                                    "type": "number",
                                    "default": 0.0
                                },
                                "pickup_based_on_chance": {
                                    "description": "If true, depending on the difficulty, there is a random chance that the mob may not be able to pickup items",
                                    "type": "boolean",
                                    "default": false
                                },
                                "speed_multiplier": {
                                    "description": "Movement speed multiplier of the mob when using this AI Goal",
                                    "type": "number",
                                    "default": 1.0
                                },
                                "track_target": {
                                    "description": "If true, this mob will chase after the target as long as it's a valid target",
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        },
                        "minecraft:behavior.play": {
                            "title": "AI GOALS",
                            "description": "Allows the mob to play with other baby villagers. This can only be used by Villagers.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "speed_multiplier": {
                                    "description": "Movement speed multiplier of the mob when using this AI Goal",
                                    "type": "number",
                                    "default": 1.0
                                }
                            }
                        },
                        "minecraft:behavior.player_ride_tamed": {
                            "title": "AI GOALS",
                            "description": "Allows the mob to be ridden by the player after being tamed.",
                            "type": "object",
                            "default": {}
                        },
                        "minecraft:behavior.raid_garden": {
                            "title": "AI GOALS",
                            "description": "Allows the mob to eat/raid crops out of farms until they are full.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "blocks": {
                                    "description": "Blocks that the mob is looking for to eat/raid",
                                    "type": "array"
                                },
                                "eat_delay": {
                                    "description": "Time in seconds between each time it eats/raids",
                                    "type": "integer",
                                    "default": 2
                                },
                                "full_delay": {
                                    "description": "Amount of time in seconds before this mob wants to eat/raid again after eating its maximum",
                                    "type": "integer",
                                    "default": 100
                                },
                                "goal_radius": {
                                    "description": "Distance in blocks within the mob considers it has reached the goal. This is the \"wiggle room\" to stop the AI from bouncing back and forth trying to reach a specific spot",
                                    "type": "number",
                                    "default": 0.5
                                },
                                "initial_eat_delay": {
                                    "description": "Time in seconds before starting to eat/raid once it arrives at it",
                                    "type": "integer",
                                    "default": 0
                                },
                                "max_to_eat": {
                                    "description": "Maximum number of crops this entity wants to eat/raid. If set to zero or less then it doesn't have a maximum",
                                    "type": "integer",
                                    "default": 6
                                },
                                "search_range": {
                                    "description": "Distance in blocks the mob will look for crops to eat",
                                    "type": "integer",
                                    "default": 0
                                },
                                "speed_multiplier": {
                                    "description": "Movement speed multiplier of the mob when using this AI Goal",
                                    "type": "number",
                                    "default": 1.0
                                }
                            }
                        },
                        "minecraft:behavior.random_breach": {
                            "title": "AI GOALS",
                            "description": "Allows the mob to randomly break surface of the water.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "cooldown_time": {
                                    "description": "Time in seconds the mob has to wait before using the goal again",
                                    "type": "number",
                                    "default": 0.0
                                },
                                "interval": {
                                    "description": "A random value to determine when to randomly move somewhere. This has a 1/interval chance to choose this goal",
                                    "type": "integer",
                                    "default": 120
                                },
                                "speed_multiplier": {
                                    "description": "Movement speed multiplier of the mob when using this AI Goal",
                                    "type": "integer",
                                    "default": 10
                                },
                                "xz_dist": {
                                    "description": "Distance in blocks on ground that the mob will look for a new spot to move to. Must be at least 1",
                                    "type": "integer",
                                    "minimum": 1,
                                    "default": 10
                                },
                                "y_dist": {
                                    "description": "Distance in blocks that the mob will look up or down for a new spot to move to. Must be at least 1",
                                    "type": "integer",
                                    "minimum": 1,
                                    "default": 7
                                }
                            }
                        },
                        "minecraft:behavior.random_fly": {
                            "title": "AI GOALS",
                            "description": "Allows a mob to randomly fly around.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "can_land_on_trees": {
                                    "description": "If true, the mob can stop flying and land on a tree instead of the ground",
                                    "type": "boolean",
                                    "default": true
                                },
                                "xz_dist": {
                                    "description": "Distance in blocks on ground that the mob will look for a new spot to move to. Must be at least 1",
                                    "type": "integer",
                                    "default": 10,
                                    "minimum": 1
                                },
                                "y_dist": {
                                    "description": "Distance in blocks that the mob will look up or down for a new spot to move to. Must be at least 1",
                                    "type": "integer",
                                    "default": 7,
                                    "minimum": 1
                                }
                            }
                        },
                        "minecraft:behavior.random_hover": {
                            "title": "AI GOALS",
                            "description": "Allows the mob to hover around randomly, close to the surface",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "hover_height": {
                                    "description": "The height above the surface which the mob will try to maintain",
                                    "type": "array",
                                    "minItems": 2,
                                    "maxItems": 2,
                                    "items": {
                                        "type": "integer"
                                    }
                                },
                                "interval": {
                                    "description": "A random value to determine when to randomly move somewhere. This has a 1/interval chance to choose this goal",
                                    "type": "integer",
                                    "default": 120
                                },
                                "speed_multiplier": {
                                    "description": "Movement speed multiplier of the mob when using this AI Goal",
                                    "type": "number",
                                    "default": 1.0
                                },
                                "xz_dist": {
                                    "description": "Distance in blocks on ground that the mob will look for a new spot to move to. Must be at least 1",
                                    "type": "integer",
                                    "default": 10,
                                    "minimum": 1
                                },
                                "y_dist": {
                                    "description": "Distance in blocks that the mob will look up or down for a new spot to move to. Must be at least 1",
                                    "type": "integer",
                                    "default": 7,
                                    "minimum": 1
                                },
                                "y_offset": {
                                    "description": "Height in blocks to add to the selected target position",
                                    "type": "number",
                                    "default": 0.0
                                }
                            }
                        },
                        "minecraft:behavior.random_look_around": {
                            "title": "AI GOALS",
                            "description": "Allows the mob to randomly look around.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "look_time": {
                                    "description": "The range of time in seconds the mob will stay looking in a random direction before looking elsewhere",
                                    "type": "array",
                                    "minItems": 2,
                                    "maxItems": 2,
                                    "default": [
                                        2,
                                        4
                                    ],
                                    "items": {
                                        "type": "integer"
                                    }
                                }
                            }
                        },
                        "minecraft:behavior.random_look_around_and_sit": {
                            "title": "AI GOALS",
                            "description": "Allows the mob to randomly sit and look around for a duration. Note: Must have a sitting animation set up to use this.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "max_look_count": {
                                    "description": "The max amount of unique looks a mob will have while looking around.",
                                    "type": "integer",
                                    "default": 2
                                },
                                "max_look_time": {
                                    "description": "The max amount of time (in ticks) a mob will stay looking at a direction while looking around.",
                                    "type": "integer",
                                    "default": 40
                                },
                                "min_look_count": {
                                    "description": "The min amount of unique looks a mob will have while looking around.",
                                    "type": "integer",
                                    "default": 1
                                },
                                "min_look_time": {
                                    "description": "The min amount of time (in ticks) a mob will stay looking at a direction while looking around.",
                                    "type": "integer",
                                    "default": 20
                                },
                                "probability": {
                                    "description": "The probability of randomly looking around/sitting.",
                                    "type": "number",
                                    "default": 0.02
                                }
                            }
                        },
                        "minecraft:behavior.random_sitting": {
                            "title": "AI GOALS",
                            "description": "Allows the mob to randomly sit for a duration.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "cooldown_time": {
                                    "description": "Time in seconds the mob has to wait before using the goal again",
                                    "type": "number",
                                    "default": 0.0
                                },
                                "min_sit_time": {
                                    "description": "The minimum amount of time in seconds before the mob can stand back up",
                                    "type": "number",
                                    "default": 10
                                },
                                "start_chance": {
                                    "description": "This is the chance that the mob will start this goal, from 0 to 1",
                                    "type": "number",
                                    "minium": 0.0,
                                    "maxium": 1.0,
                                    "default": 0.1
                                },
                                "stop_chance": {
                                    "description": "This is the chance that the mob will stop this goal, from 0 to 1",
                                    "type": "number",
                                    "minium": 0.0,
                                    "maxium": 1.0,
                                    "default": 0.3
                                }
                            }
                        },
                        "minecraft:behavior.random_stroll": {
                            "title": "AI GOALS",
                            "description": "Allows a mob to randomly stroll around.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "interval": {
                                    "description": "A random value to determine when to randomly move somewhere. This has a 1/interval chance to choose this goal",
                                    "type": "integer",
                                    "default": 120
                                },
                                "speed_multiplier": {
                                    "description": "Movement speed multiplier of the mob when using this AI Goal",
                                    "type": "number",
                                    "default": 1.0
                                },
                                "xz_dist": {
                                    "description": "Distance in blocks on ground that the mob will look for a new spot to move to. Must be at least 1",
                                    "type": "integer",
                                    "default": 10,
                                    "minimum": 1
                                },
                                "y_dist": {
                                    "description": "Distance in blocks that the mob will look up or down for a new spot to move to. Must be at least 1",
                                    "type": "integer",
                                    "default": 7,
                                    "minimum": 1
                                }
                            }
                        },
                        "minecraft:behavior.random_swim": {
                            "title": "AI GOALS",
                            "description": "Allows an entity to randomly move through water",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "avoid_surface": {
                                    "description": "If true, the mob will avoid surface water blocks by swimming below them",
                                    "type": "boolean",
                                    "default": true
                                },
                                "interval": {
                                    "description": "A random value to determine when to randomly move somewhere. This has a 1/interval chance to choose this goal",
                                    "type": "integer",
                                    "default": 120
                                },
                                "speed_multiplier": {
                                    "description": "Movement speed multiplier of the mob when using this AI Goal",
                                    "type": "number",
                                    "default": 1.0
                                },
                                "xz_dist": {
                                    "description": "Distance in blocks on ground that the mob will look for a new spot to move to. Must be at least 1",
                                    "type": "integer",
                                    "default": 10,
                                    "minimum": 1
                                },
                                "y_dist": {
                                    "description": "Distance in blocks that the mob will look up or down for a new spot to move to. Must be at least 1",
                                    "type": "integer",
                                    "default": 7,
                                    "minimum": 1
                                }
                            }
                        },
                        "minecraft:behavior.receive_love": {
                            "title": "AI GOALS",
                            "description": "Allows the villager to stop so another villager can breed with it. Can only be used by a Villager.",
                            "type": "object",
                            "default": {}
                        },
                        "minecraft:behavior.restrict_open_door": {
                            "title": "AI GOALS",
                            "description": "Allows the mob to stay indoors during night time.",
                            "type": "object",
                            "default": {}
                        },
                        "minecraft:behavior.restrict_sun": {
                            "title": "AI GOALS",
                            "description": "Allows the mob to automatically start avoiding the sun when its a clear day out.",
                            "type": "object",
                            "default": {}
                        },
                        "minecraft:behavior.rise_to_liquid_level": {
                            "title": "AI GOALS",
                            "description": "Allows the mob to stay at a certain level when in liquid.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "liquid_y_offset": {
                                    "description": "Target distance down from the liquid surface. i.e. Positive values move the target Y down.",
                                    "type": "number",
                                    "default": 0.0
                                },
                                "rise_delta": {
                                    "description": "Movement up in Y per tick when below the liquid surface.",
                                    "type": "number",
                                    "default": 0.0
                                },
                                "sink_delta": {
                                    "description": "Movement down in Y per tick when above the liquid surface.",
                                    "type": "number",
                                    "default": 0.0
                                }
                            }
                        },
                        "minecraft:behavior.roll": {
                            "title": "AI GOALS",
                            "description": "This allows the mob to roll forward.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "probability": {
                                    "description": "The probability that the mob will use the goal.",
                                    "type": "number",
                                    "default": 1.0
                                }
                            }
                        },
                        "minecraft:behavior.run_around_like_crazy": {
                            "title": "AI GOALS",
                            "description": "Allows the mob to run around aimlessly.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "speed_multiplier": {
                                    "description": "Movement speed multiplier of the mob when using this AI Goal",
                                    "type": "number",
                                    "default": 1.0
                                }
                            }
                        },
                        "minecraft:behavior.scared": {
                            "title": "AI GOALS",
                            "description": "Allows the a mob to become scared when the weather outside is thundering",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "sound_interval": {
                                    "description": "The interval in which a sound will play when active in a 1/delay chance to kick off",
                                    "type": "integer",
                                    "default": 0
                                }
                            }
                        },
                        "minecraft:behavior.send_event": {
                            "title": "AI GOALS",
                            "description": "Allows the mob to send an event to another mob.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "cast_duration": {
                                    "description": "Time in seconds for the entire event sending process",
                                    "type": "number",
                                    "default": 0.0
                                },
                                "look_at_target": {
                                    "description": "If true, the mob will face the entity it sends an event to",
                                    "type": "boolean",
                                    "default": true
                                },
                                "sequence": {
                                    "description": "List of events to send",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "default": {},
                                        "properties": {
                                            "base_delay": {
                                                "description": "Amount of time in seconds before starting this step",
                                                "type": "number",
                                                "default": 0.0
                                            },
                                            "event": {
                                                "description": "The event to send to the entity",
                                                "type": "string"
                                            },
                                            "sound_event": {
                                                "description": "The sound event to play when this step happens",
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "minecraft:behavior.share_items": {
                            "title": "AI GOALS",
                            "description": "Allows the mob to give items it has to others.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "entity_types": {
                                    "description": "List of entities this mob will share items with",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "default": {},
                                        "properties": {
                                            "filters": {
                                                "description": "Conditions that make this entry in the list valid",
                                                "$ref": "#/definitions/filter"
                                            },
                                            "max_dist": {
                                                "description": "Maximum distance this mob can be away to be a valid choice",
                                                "type": "number",
                                                "default": 16
                                            },
                                            "must_see": {
                                                "description": "If true, the mob has to be visible to be a valid choice",
                                                "type": "boolean",
                                                "default": false
                                            },
                                            "must_see_forget_duration": {
                                                "description": "Determines the amount of time in seconds that this mob will look for a target before forgetting about it and looking for a new one when the target isn't visible any more",
                                                "type": [
                                                    "boolean",
                                                    "number"
                                                ],
                                                "default": 3.0
                                            },
                                            "sprint_speed_multiplier": {
                                                "description": "Multiplier for the running speed. A value of 1.0 means the speed is unchanged",
                                                "type": "number",
                                                "default": 1.0
                                            },
                                            "walk_speed_multiplier": {
                                                "description": "Multiplier for the walking speed. A value of 1.0 means the speed is unchanged",
                                                "type": "number",
                                                "default": 1.0
                                            }
                                        }
                                    }
                                },
                                "goal_radius": {
                                    "description": "Distance in blocks within the mob considers it has reached the goal. This is the \"wiggle room\" to stop the AI from bouncing back and forth trying to reach a specific spot",
                                    "type": "number",
                                    "default": 0.5
                                },
                                "max_dist": {
                                    "description": "Maximum distance in blocks this mob will look for entities to share items with",
                                    "type": "number",
                                    "default": 0.0
                                },
                                "speed_multiplier": {
                                    "description": "Movement speed multiplier of the mob when using this AI Goal",
                                    "type": "number",
                                    "default": 0.0
                                }
                            }
                        },
                        "minecraft:behavior.silverfish_merge_with_stone": {
                            "title": "AI GOALS",
                            "description": "Allows the mob to go into stone blocks like Silverfish do. Currently it can only be used by Silverfish.",
                            "type": "object",
                            "default": {}
                        },
                        "minecraft:behavior.silverfish_wake_up_friends": {
                            "title": "AI GOALS",
                            "description": "Allows the mob to alert mobs in nearby blocks to come out. Currently it can only be used by Silverfish.",
                            "type": "object",
                            "default": {}
                        },
                        "minecraft:behavior.skeleton_horse_trap": {
                            "title": "AI GOALS",
                            "description": "Allows Equine mobs to be Horse Traps and be triggered like them, spawning a lightning bolt and a bunch of horses when a player is nearby. Can only be used by Horses, Mules, Donkeys and Skeleton Horses.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "duration": {
                                    "description": "Amount of time in seconds the trap exists. After this amount of time is elapsed, the trap is removed from the world if it hasn't been activated",
                                    "type": "number",
                                    "default": 1.0
                                },
                                "within_radius": {
                                    "description": "Distance in blocks that the player has to be within to trigger the horse trap",
                                    "type": "number",
                                    "default": 0.0
                                }
                            }
                        },
                        "minecraft:behavior.sleep": {
                            "title": "AI GOALS",
                            "description": "Allows mobs that own a bed to in a village to move to and sleep in it.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "cooldown_time": {
                                    "description": "Time in seconds the mob has to wait before using the goal again",
                                    "type": "number",
                                    "default": 0.0
                                },
                                "sleep_collider_height": {
                                    "description": "The height of the mob's collider while sleeping",
                                    "type": "number",
                                    "default": 1.0
                                },
                                "sleep_collider_width": {
                                    "description": "The width of the mob's collider while sleeping",
                                    "type": "number",
                                    "default": 1.0
                                },
                                "sleep_y_offset": {
                                    "description": "The y offset of the mob's collider while sleeping",
                                    "type": "number",
                                    "default": 1.0
                                },
                                "speed_multiplier": {
                                    "description": "Movement speed multiplier of the mob when using this AI Goal",
                                    "type": "number",
                                    "default": 1.0
                                },
                                "timeout_cooldown": {
                                    "description": "The cooldown time in seconds before the goal can be reused after a internal failure or timeout condition",
                                    "type": "number",
                                    "default": 8.0
                                }
                            }
                        },
                        "minecraft:behavior.slime_attack": {
                            "title": "AI GOALS",
                            "description": "Can only be used by Slimes and Magma Cubes. Allows the mob to use a melee attack like the slime's.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "set_persistent": {
                                    "description": "Allows the actor to be set to persist upon targeting a player",
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        },
                        "minecraft:behavior.snacking": {
                            "title": "AI GOALS",
                            "description": "Allows the mob to take a load off and snack on food that it found nearby.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "items": {
                                    "description": "Items that we are interested in snacking on",
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "snacking_cooldown": {
                                    "description": "The cooldown time in seconds before the mob is able to snack again",
                                    "type": "number",
                                    "default": 7.5
                                },
                                "snacking_cooldown_min": {
                                    "description": "The minimum time in seconds before the mob is able to snack again",
                                    "type": "number",
                                    "default": 0.5
                                },
                                "snacking_stop_chance": {
                                    "description": "This is the chance that the mob will stop snacking, from 0 to 1",
                                    "type": "number",
                                    "minium": 0.0,
                                    "maxium": 1.0,
                                    "default": 0.0017
                                }
                            }
                        },
                        "minecraft:behavior.sneeze": {
                            "title": "AI GOALS",
                            "description": "Allows the mob to stop and sneeze possibly startling nearby mobs and dropping an item.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "cooldown_time": {
                                    "description": "Time in seconds the mob has to wait before using the goal again",
                                    "type": "number",
                                    "default": 0.0
                                },
                                "drop_item_chance": {
                                    "description": "The probability that the mob will drop an item when it sneezes.",
                                    "type": "number",
                                    "default": 0.0
                                },
                                "entity_types": {
                                    "description": "List of entity types this mob will startle (cause to jump) when it sneezes.",
                                    "type": "object",
                                    "default": {},
                                    "properties": {
                                        "filters": {
                                            "description": "Conditions that make this entry in the list valid",
                                            "$ref": "#/definitions/filter"
                                        },
                                        "max_dist": {
                                            "description": "Maximum distance this mob can be away to be a valid choice",
                                            "type": "number",
                                            "default": 16
                                        },
                                        "must_see": {
                                            "description": "If true, the mob has to be visible to be a valid choice",
                                            "type": "boolean",
                                            "default": false
                                        },
                                        "must_see_forget_duration": {
                                            "description": "Determines the amount of time in seconds that this mob will look for a target before forgetting about it and looking for a new one when the target isn't visible any more",
                                            "type": [
                                                "boolean",
                                                "number"
                                            ],
                                            "default": 3.0
                                        },
                                        "sprint_speed_multiplier": {
                                            "description": "Multiplier for the running speed. A value of 1.0 means the speed is unchanged",
                                            "type": "number",
                                            "default": 1.0
                                        },
                                        "walk_speed_multiplier": {
                                            "description": "Multiplier for the walking speed. A value of 1.0 means the speed is unchanged",
                                            "type": "number",
                                            "default": 1.0
                                        }
                                    }
                                },
                                "loot_table": {
                                    "description": "Loot table to select dropped items from.",
                                    "type": "string"
                                },
                                "prepare_sound": {
                                    "description": "Sound to play when the sneeze is about to happen.",
                                    "type": "string"
                                },
                                "prepare_time": {
                                    "description": "The time in seconds that the mob takes to prepare to sneeze (while the prepare_sound is playing).",
                                    "type": "number",
                                    "default": 1.0
                                },
                                "probability": {
                                    "description": "The probability of sneezing. A value of 1.00 is 100%",
                                    "type": "number",
                                    "minium": 0.0,
                                    "maxium": 1.0,
                                    "default": 0.02
                                },
                                "sound": {
                                    "description": "Sound to play when the sneeze occurs.",
                                    "type": "string"
                                },
                                "within_radius": {
                                    "description": "Distance in blocks that mobs will be startled.",
                                    "type": "number",
                                    "default": 0.0
                                }
                            }
                        },
                        "minecraft:behavior.squid_dive": {
                            "title": "AI GOALS",
                            "description": "Allows the squid to dive down in water. Can only be used by the Squid.",
                            "type": "object",
                            "default": {}
                        },
                        "minecraft:behavior.squid_flee": {
                            "title": "AI GOALS",
                            "description": "Allows the squid to swim away. Can only be used by the Squid.",
                            "type": "object",
                            "default": {}
                        },
                        "minecraft:behavior.squid_idle": {
                            "title": "AI GOALS",
                            "description": "Allows the squid to swim in place idly. Can only be used by the Squid.",
                            "type": "object",
                            "default": {}
                        },
                        "minecraft:behavior.squid_move_away_from_ground": {
                            "title": "AI GOALS",
                            "description": "Allows the squid to move away from ground blocks and back to water. Can only be used by the Squid.",
                            "type": "object",
                            "default": {}
                        },
                        "minecraft:behavior.squid_out_of_water": {
                            "title": "AI GOALS",
                            "description": "Allows the squid to stick to the ground when outside water. Can only be used by the Squid.",
                            "type": "object",
                            "default": {}
                        },
                        "minecraft:behavior.stalk_and_pounce_on_target": {
                            "title": "AI GOALS",
                            "description": "Allows a mob to stalk a target, then once within range pounce onto a target, on success the target will be attacked dealing damage defined by the attack component. On failure, the mob will risk getting stuck",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "interest_time": {
                                    "description": "The amount of time the mob will be interested before pouncing. This happens when the mob is within range of pouncing",
                                    "type": "number",
                                    "default": 2.0
                                },
                                "leap_distance": {
                                    "description": "The distance in blocks the mob jumps in the direction of its target",
                                    "type": "number",
                                    "default": 0.8
                                },
                                "leap_height": {
                                    "description": "The height in blocks the mob jumps when leaping at its target",
                                    "type": "number",
                                    "default": 0.9
                                },
                                "max_stalk_dist": {
                                    "description": "The maximum distance away a target can be before the mob gives up on stalking",
                                    "type": "number",
                                    "default": 10.0
                                },
                                "pounce_max_dist": {
                                    "description": "The maximum distance away from the target in blocks to begin pouncing at the target",
                                    "type": "number",
                                    "default": 5.0
                                },
                                "set_persistent": {
                                    "description": "Allows the actor to be set to persist upon targeting a player",
                                    "type": "boolean",
                                    "default": false
                                },
                                "stalk_speed": {
                                    "description": "The movement speed in which you stalk your target",
                                    "type": "number",
                                    "default": 1.2
                                },
                                "strike_dist": {
                                    "description": "The max distance away from the target when landing from the pounce that will still result in damaging the target",
                                    "type": "number",
                                    "default": 2.0
                                },
                                "stuck_time": {
                                    "description": "The amount of time the mob will be stuck if they fail and land on a block they can be stuck on",
                                    "type": "number",
                                    "default": 2.0
                                }
                            }
                        },
                        "minecraft:behavior.stay_while_sitting": {
                            "title": "AI GOALS",
                            "description": "Allows the mob to stay put while it is in a sitting state instead of doing something else.",
                            "type": "object",
                            "default": {}
                        },
                        "minecraft:behavior.stomp_turtle_egg": {
                            "title": "AI GOALS",
                            "description": "Allows this mob to stomp turtle eggs",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "goal_radius": {
                                    "description": "Distance in blocks within the mob considers it has reached the goal. This is the \"wiggle room\" to stop the AI from bouncing back and forth trying to reach a specific spot",
                                    "type": "number",
                                    "default": 0.5
                                },
                                "interval": {
                                    "description": "A random value to determine when to randomly move somewhere. This has a 1/interval chance to choose this goal",
                                    "type": "integer",
                                    "default": 120
                                },
                                "search_height": {
                                    "description": "Height in blocks the mob will look for turtle eggs to move towards",
                                    "type": "integer",
                                    "default": 1
                                },
                                "search_range": {
                                    "description": "The distance in blocks it will look for turtle eggs to move towards",
                                    "type": "integer",
                                    "default": 0
                                },
                                "speed_multiplier": {
                                    "description": "Movement speed multiplier of the mob when using this AI Goal",
                                    "type": "number",
                                    "default": 1.0
                                }
                            }
                        },
                        "minecraft:behavior.stroll_towards_village": {
                            "title": "AI GOALS",
                            "description": "Allows the mob to move into a random location within a village within the search range.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "cooldown_time": {
                                    "description": "Time in seconds the mob has to wait before using the goal again",
                                    "type": "number",
                                    "default": 0.0
                                },
                                "goal_radius": {
                                    "description": "Distance in blocks within the mob considers it has reached the goal. This is the \"wiggle room\" to stop the AI from bouncing back and forth trying to reach a specific spot",
                                    "type": "number",
                                    "default": 0.5
                                },
                                "search_range": {
                                    "description": "The distance in blocks to search for points inside villages. If <= 0, find the closest village regardless of distance.",
                                    "type": "integer",
                                    "default": 0
                                },
                                "speed_multiplier": {
                                    "description": "Movement speed multiplier of the mob when using this AI Goal",
                                    "type": "number",
                                    "default": 1.0
                                },
                                "start_chance": {
                                    "description": "This is the chance that the mob will start this goal, from 0 to 1",
                                    "type": "number",
                                    "minium": 0.0,
                                    "maxium": 1.0,
                                    "default": 0.1
                                }
                            }
                        },
                        "minecraft:behavior.summon_entity": {
                            "title": "AI GOALS",
                            "description": "Allows the mob to attack the player by summoning other entities.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "summon_choices": {
                                    "description": "List of spells for the mob to use to summon entities. Each spell has the following parameters:",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "default": {},
                                        "properties": {
                                            "cast_duration": {
                                                "description": "Time in seconds the spell casting will take",
                                                "type": "number",
                                                "default": 0.0
                                            },
                                            "cooldown_time": {
                                                "description": "Time in seconds the mob has to wait before using the spell again",
                                                "type": "number",
                                                "default": 0.0
                                            },
                                            "do_casting": {
                                                "description": "If true, the mob will do the casting animations and render spell particles",
                                                "type": "boolean",
                                                "default": true
                                            },
                                            "filters": {
                                                "$ref": "#/definitions/filter"
                                            },
                                            "max_activation_range": {
                                                "description": "Upper bound of the activation distance in blocks for this spell, must not be negative.",
                                                "type": "number",
                                                "default": 23.0
                                            },
                                            "min_activation_range": {
                                                "description": "Lower bound of the activation distance in blocks for this spell, must not be negative.",
                                                "type": "number",
                                                "default": 1.0
                                            },
                                            "particle_color": {
                                                "description": "The color of the particles for this spell",
                                                "type": "integer",
                                                "default": 0
                                            },
                                            "sequence": {
                                                "description": "List of steps for the spell.",
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "default": {},
                                                    "properties": {
                                                        "base_delay": {
                                                            "description": "Amount of time in seconds to wait before this step starts",
                                                            "type": "number",
                                                            "default": 0.0
                                                        },
                                                        "delay_per_summon": {
                                                            "description": "Amount of time in seconds before each entity is summoned in this step",
                                                            "type": "number",
                                                            "default": 0.0
                                                        },
                                                        "entity_lifespan": {
                                                            "description": "Amount of time in seconds that the spawned entity will be alive for. A value of -1.0 means it will remain alive for as long as it can",
                                                            "type": "number",
                                                            "default": -1.0
                                                        },
                                                        "entity_type": {
                                                            "description": "The entity type of the entities we will spawn in this step",
                                                            "type": "string"
                                                        },
                                                        "num_entities_spawned": {
                                                            "description": "Number of entities that will be spawned in this step",
                                                            "type": "integer",
                                                            "default": 1
                                                        },
                                                        "shape": {
                                                            "description": "The base shape of this step. Valid values are circle and line",
                                                            "type": "string",
                                                            "default": "line"
                                                        },
                                                        "size": {
                                                            "description": "The base size of the entity",
                                                            "type": "number",
                                                            "default": 1.0
                                                        },
                                                        "sound_event": {
                                                            "description": "The sound event to play for this step",
                                                            "type": "string"
                                                        },
                                                        "summon_cap": {
                                                            "description": "Maximum number of summoned entities at any given time",
                                                            "type": "integer",
                                                            "default": 0
                                                        },
                                                        "summon_cap_radius": {
                                                            "type": "number",
                                                            "default": 0.0
                                                        },
                                                        "target": {
                                                            "description": "The target of the spell. This is where the spell will start (line will start here, circle will be centered here)",
                                                            "type": "string",
                                                            "default": "self"
                                                        }
                                                    }
                                                }
                                            },
                                            "start_sound_event": {
                                                "description": "The sound event to play when using this spell",
                                                "$ref": "#/definitions/events"
                                            },
                                            "weight": {
                                                "description": "The weight of this spell. Controls how likely the mob is to choose this spell when casting one",
                                                "type": "number",
                                                "default": 0.0
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "minecraft:behavior.swell": {
                            "title": "AI GOALS",
                            "description": "Allows the creeper to swell up when a player is nearby. It can only be used by Creepers.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "start_distance": {
                                    "description": "This mob starts swelling when a target is at least this many blocks away",
                                    "type": "number",
                                    "default": 10.0
                                },
                                "stop_distance": {
                                    "description": "This mob stops swelling when a target has moved away at least this many blocks",
                                    "type": "number",
                                    "default": 2.0
                                }
                            }
                        },
                        "minecraft:behavior.take_flower": {
                            "title": "AI GOALS",
                            "description": "Can only be used by Villagers. Allows the mob to accept flowers from Iron Golems.",
                            "type": "object",
                            "default": {}
                        },
                        "minecraft:behavior.tempt": {
                            "title": "AI GOALS",
                            "description": "Allows the mob to be tempted by food they like.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "can_get_scared": {
                                    "description": "If true, the mob can stop being tempted if the player moves too fast while close to this mob",
                                    "type": "boolean",
                                    "default": false
                                },
                                "can_tempt_vertically": {
                                    "description": "If true, vertical distance to the player will be considered when tempting.",
                                    "type": "boolean",
                                    "default": false
                                },
                                "can_tempt_while_ridden": {
                                    "description": "If true, the mob can be tempted even if it has a passenger (i.e. if being ridden).",
                                    "type": "boolean",
                                    "default": false
                                },
                                "items": {
                                    "description": "List of items this mob is tempted by",
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "sound_interval": {
                                    "description": "Range of random ticks to wait between tempt sounds.",
                                    "type": "array",
                                    "minItems": 2,
                                    "maxItems": 2,
                                    "default": [
                                        0.0,
                                        0.0
                                    ],
                                    "items": {
                                        "type": "number"
                                    }
                                },
                                "speed_multiplier": {
                                    "description": "Movement speed multiplier of the mob when using this AI Goal",
                                    "type": "number",
                                    "default": 1.0
                                },
                                "tempt_sound": {
                                    "description": "Sound to play while the mob is being tempted.",
                                    "type": "string"
                                },
                                "within_radius": {
                                    "description": "Distance in blocks this mob can get tempted by a player holding an item they like",
                                    "type": "number",
                                    "default": 0.0
                                }
                            }
                        },
                        "minecraft:behavior.trade_interest": {
                            "title": "AI GOALS",
                            "description": "Allows the mob to look at a player that is holding a tradable item.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "carried_item_switch_time": {
                                    "description": "The max time in seconds that the trader will hold an item before attempting to switch for a different item that takes the same trade",
                                    "type": "number",
                                    "default": 2.0
                                },
                                "cooldown": {
                                    "description": "The time in seconds before the trader can use this goal again",
                                    "type": "number",
                                    "default": 2.0
                                },
                                "interest_time": {
                                    "description": "The max time in seconds that the trader will be interested with showing its trade items",
                                    "type": "number",
                                    "default": 45.0
                                },
                                "remove_item_time": {
                                    "description": "The max time in seconds that the trader will wait when you no longer have items to trade",
                                    "type": "number",
                                    "default": 1.0
                                },
                                "within_radius": {
                                    "description": "Distance in blocks this mob can be interested by a player holding an item they like",
                                    "type": "number",
                                    "default": 0.0
                                }
                            }
                        },
                        "minecraft:behavior.trade_with_player": {
                            "title": "AI GOALS",
                            "description": "Allows the player to trade with this mob.",
                            "type": "object",
                            "default": {}
                        },
                        "minecraft:behavior.vex_copy_owner_target": {
                            "title": "AI GOALS",
                            "description": "Allows the mob to target the same entity its owner is targeting.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "entity_types": {
                                    "description": "List of entities this mob can copy the owner from",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "default": {},
                                        "properties": {
                                            "filters": {
                                                "description": "Conditions that make this entry in the list valid",
                                                "$ref": "#/definitions/filter"
                                            },
                                            "max_dist": {
                                                "description": "Maximum distance this mob can be away to be a valid choice",
                                                "type": "number",
                                                "default": 16
                                            },
                                            "must_see": {
                                                "description": "If true, the mob has to be visible to be a valid choice",
                                                "type": "boolean",
                                                "default": false
                                            },
                                            "must_see_forget_duration": {
                                                "description": "Determines the amount of time in seconds that this mob will look for a target before forgetting about it and looking for a new one when the target isn't visible any more",
                                                "type": [
                                                    "boolean",
                                                    "number"
                                                ],
                                                "default": 3.0
                                            },
                                            "sprint_speed_multiplier": {
                                                "description": "Multiplier for the running speed. A value of 1.0 means the speed is unchanged",
                                                "type": "number",
                                                "default": 1.0
                                            },
                                            "walk_speed_multiplier": {
                                                "description": "Multiplier for the walking speed. A value of 1.0 means the speed is unchanged",
                                                "type": "number",
                                                "default": 1.0
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "minecraft:behavior.vex_random_move": {
                            "title": "AI GOALS",
                            "description": "Allows the mob to move around randomly like the Vex.",
                            "type": "object",
                            "default": {}
                        },
                        "minecraft:behavior.wither_random_attack_pos_goal": {
                            "title": "AI GOALS",
                            "description": "Allows the wither to launch random attacks. Can only be used by the Wither Boss.",
                            "type": "object",
                            "default": {}
                        },
                        "minecraft:behavior.wither_target_highest_damage": {
                            "title": "AI GOALS",
                            "description": "Allows the wither to focus its attacks on whichever mob has dealt the most damage to it.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "entity_types": {
                                    "description": "List of entity types the wither takes into account to find who dealt the most damage to it",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "default": {},
                                        "properties": {
                                            "filters": {
                                                "description": "Conditions that make this entry in the list valid",
                                                "$ref": "#/definitions/filter"
                                            },
                                            "max_dist": {
                                                "description": "Maximum distance this mob can be away to be a valid choice",
                                                "type": "number",
                                                "default": 16
                                            },
                                            "must_see": {
                                                "description": "If true, the mob has to be visible to be a valid choice",
                                                "type": "boolean",
                                                "default": false
                                            },
                                            "must_see_forget_duration": {
                                                "description": "Determines the amount of time in seconds that this mob will look for a target before forgetting about it and looking for a new one when the target isn't visible any more",
                                                "type": [
                                                    "boolean",
                                                    "number"
                                                ],
                                                "default": 3.0
                                            },
                                            "sprint_speed_multiplier": {
                                                "description": "Multiplier for the running speed. A value of 1.0 means the speed is unchanged",
                                                "type": "number",
                                                "default": 1.0
                                            },
                                            "walk_speed_multiplier": {
                                                "description": "Multiplier for the walking speed. A value of 1.0 means the speed is unchanged",
                                                "type": "number",
                                                "default": 1.0
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "minecraft:behavior.work": {
                            "title": "AI GOALS",
                            "description": "allows the NPC to use their jobsite POI",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "active_time": {
                                    "description": "The amount of ticks the NPC will stay in their the work location",
                                    "type": "integer",
                                    "default": 0
                                },
                                "can_work_in_rain": {
                                    "description": "If true, this entity can work when their jobsite POI is being rained on.",
                                    "type": "boolean",
                                    "default": false
                                },
                                "goal_cooldown": {
                                    "description": "The amount of ticks the goal will be on cooldown before it can be used again",
                                    "type": "integer",
                                    "default": 0
                                },
                                "on_arrival": {
                                    "description": "Event to run when the mob reaches their jobsite and finishes working.",
                                    "$ref": "#/definitions/events"
                                },
                                "sound_delay_max": {
                                    "description": "The max interval in which a sound will play",
                                    "type": "integer",
                                    "default": 0
                                },
                                "sound_delay_min": {
                                    "description": "The min interval in which a sound will play",
                                    "type": "integer",
                                    "default": 0
                                },
                                "speed_multiplier": {
                                    "description": "Movement speed multiplier of the mob when using this AI Goal",
                                    "type": "number",
                                    "default": 1.0
                                },
                                "work_in_rain_tolerance": {
                                    "description": "If \"can_work_in_rain\" is false, this is the maximum number of ticks left in the goal where rain will not interrupt the goal",
                                    "type": "integer",
                                    "default": -1
                                }
                            }
                        },
                        "minecraft:attack": {
                            "title": "ATTRIBUTES",
                            "description": "Defines an entity's melee attack and any additional effects on it.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "damage": {
                                    "description": "Range of the random amount of damage the melee attack deals. A negative value can heal the entity instead of hurting it",
                                    "type": [
                                        "array",
                                        "integer"
                                    ],
                                    "minItems": 2,
                                    "maxItems": 2,
                                    "items": {
                                        "type": "integer"
                                    }
                                },
                                "effect_duration": {
                                    "description": "Duration in seconds of the status ailment applied to the damaged entity",
                                    "type": "number",
                                    "default": 0.0
                                },
                                "effect_name": {
                                    "description": "Identifier of the status ailment to apply to an entity attacked by this entity's melee attack",
                                    "type": "string"
                                }
                            }
                        },
                        "minecraft:spell_effects": {
                            "title": "ATTRIBUTES",
                            "description": "Defines what mob effects to add and remove to the entity when adding this component.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "add_effects": {
                                    "description": "List of effects to add to this entity after adding this component",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "default": {},
                                        "properties": {
                                            "effect": {
                                                "description": "Effect to add to this entity. Includes 'duration' in seconds, 'amplifier' level, 'ambient' if it is to be considered an ambient effect, and 'visible' if the effect should be visible",
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "remove_effects": {
                                    "description": "List of identifiers of effects to be removed from this entity after adding this component",
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "minecraft:strength": {
                            "title": "ATTRIBUTES",
                            "description": "Defines the entity's strength to carry items.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "max": {
                                    "description": "The maximum strength of this entity",
                                    "type": "integer",
                                    "default": 5
                                },
                                "value": {
                                    "description": "The initial value of the strength",
                                    "type": "integer",
                                    "default": 1
                                }
                            }
                        },
                        "minecraft:addrider": {
                            "title": "COMPONENTS",
                            "description": "Adds a rider to the entity. Requires minecraft:rideable.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "entity_type": {
                                    "description": "The entity type that will be riding this entity.",
                                    "type": "string"
                                },
                                "spawn_event": {
                                    "description": "The spawn event that will be used when the riding entity is created.",
                                    "$ref": "#/definitions/events"
                                }
                            }
                        },
                        "minecraft:admire_item": {
                            "title": "COMPONENTS",
                            "description": "Causes the mob to ignore attackable targets for a given duration.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "cooldown_after_being_attacked": {
                                    "description": "Duration, in seconds, for which mob won't admire items if it was hurt",
                                    "type": "integer",
                                    "default": 0
                                },
                                "duration": {
                                    "description": "Duration, in seconds, that the mob is pacified.",
                                    "type": "integer",
                                    "default": 10
                                }
                            }
                        },
                        "minecraft:ageable": {
                            "title": "COMPONENTS",
                            "description": "Adds a timer for the entity to grow up. It can be accelerated by giving the entity the items it likes as defined by feedItems.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "drop_items": {
                                    "description": "List of items that the entity drops when it grows up.",
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "duration": {
                                    "description": "Amount of time before the entity grows up, -1 for always a baby.",
                                    "type": "number",
                                    "default": 1200.0
                                },
                                "feed_items": {
                                    "description": "List of items that can be fed to the entity. Includes 'item' for the item name and 'growth' to define how much time it grows up by",
                                    "type": [
                                        "array",
                                        "string"
                                    ],
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "grow_up": {
                                    "description": "Event to run when this entity grows up.",
                                    "type": [
                                        "string",
                                        "object"
                                    ],
                                    "properties": {
                                        "event": {
                                            "description": "The event to run",
                                            "type": "string"
                                        },
                                        "target": {
                                            "description": "The target",
                                            "type": "string"
                                        }
                                    }
                                },
                                "transform_to_item": {
                                    "description": "The feed item used will transform to this item upon successful interaction. Format: itemName:auxValue",
                                    "type": "string"
                                }
                            }
                        },
                        "minecraft:angry": {
                            "title": "COMPONENTS",
                            "description": "Defines the entity's 'angry' state using a timer.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "angry_sound": {
                                    "description": "The sound event to play when the mob is angry",
                                    "type": "string"
                                },
                                "broadcast_anger": {
                                    "description": "If true, other entities of the same entity definition within the broadcastRange will also become angry",
                                    "type": "boolean",
                                    "default": false
                                },
                                "broadcast_anger_on_attack": {
                                    "description": "If true, other entities of the same entity definition within the broadcastRange will also become angry whenever this mob attacks",
                                    "type": "boolean",
                                    "default": false
                                },
                                "broadcast_anger_on_being_attacked": {
                                    "description": "If true, other entities of the same entity definition within the broadcastRange will also become angry whenever this mob is attacked",
                                    "type": "boolean",
                                    "default": false
                                },
                                "broadcast_filters": {
                                    "description": "Conditions that make this entry in the list valid",
                                    "$ref": "#/definitions/filter"
                                },
                                "broadcast_range": {
                                    "description": "Distance in blocks within which other entities of the same entity definition will become angry",
                                    "type": "integer",
                                    "default": 20
                                },
                                "broadcast_targets": {
                                    "description": "A list of entity families to broadcast anger to",
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "calm_event": {
                                    "description": "Event to run after the number of seconds specified in duration expires (when the entity stops being 'angry')",
                                    "$ref": "#/definitions/events"
                                },
                                "duration": {
                                    "description": "The amount of time in seconds that the entity will be angry",
                                    "type": "integer",
                                    "default": 25
                                },
                                "duration_delta": {
                                    "description": "Variance in seconds added to the duration [-delta, delta]",
                                    "type": "integer",
                                    "default": 0
                                },
                                "filters": {
                                    "description": "Filter out mob types that it should not attack while angry (other Piglins)",
                                    "$ref": "#/definitions/filter"
                                },
                                "sound_interval": {
                                    "description": "The range of time in seconds to randomly wait before playing the sound again",
                                    "type": [
                                        "array",
                                        "integer"
                                    ],
                                    "minItems": 2,
                                    "maxItems": 2,
                                    "default": 0,
                                    "items": {
                                        "type": "integer"
                                    }
                                }
                            }
                        },
                        "minecraft:annotation.break_door": {
                            "title": "COMPONENTS",
                            "description": "Allows the actor to break doors assuming that that flags set up for the component to use in navigation",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "break_time": {
                                    "description": "he time in seconds required to break through doors.",
                                    "type": "number",
                                    "default": 12.0
                                },
                                "min_difficulty": {
                                    "description": "The minimum difficulty that the world must be on for this entity to break doors.",
                                    "type": "string",
                                    "default": "hard"
                                }
                            }
                        },
                        "minecraft:annotation.open_door": {
                            "title": "COMPONENTS",
                            "description": "Allows the actor to open doors assuming that that flags set up for the component to use in navigation",
                            "type": "object",
                            "default": {}
                        },
                        "minecraft:area_attack": {
                            "title": "COMPONENTS",
                            "description": "A component that does damage to entities that get within range.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "cause": {
                                    "description": "The type of damage that is applied to entities that enter the damage range.",
                                    "type": "string"
                                },
                                "damage_per_tick": {
                                    "description": "How much damage per tick is applied to entities that enter the damage range.",
                                    "type": "integer",
                                    "default": 2
                                },
                                "damage_range": {
                                    "description": "How close a hostile entity must be to have the damage applied.",
                                    "type": "number",
                                    "default": 0.2
                                },
                                "entity_filter": {
                                    "description": "The set of entities that are valid to apply the damage to when within range.",
                                    "$ref": "#/definitions/filter"
                                }
                            }
                        },
                        "minecraft:attack_cooldown": {
                            "title": "COMPONENTS",
                            "description": "Adds a cooldown to a mob. The intention of this cooldown is to be used to prevent the mob from attempting to aquire new attack targets.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "attack_cooldown_complete_event": {
                                    "description": "Event to be runned when the cooldown is complete.",
                                    "$ref": "#/definitions/events"
                                },
                                "attack_cooldown_time": {
                                    "description": "Amount of time in seconds for the cooldown. Can be specified as a number or a pair of numbers (min and max).",
                                    "type": [
                                        "array",
                                        "number"
                                    ],
                                    "minItems": 2,
                                    "maxItems": 2,
                                    "default": [
                                        0.0,
                                        1.0
                                    ],
                                    "items": {
                                        "type": "number"
                                    }
                                }
                            }
                        },
                        "minecraft:barter": {
                            "title": "COMPONENTS",
                            "description": "Enables the component to drop an item as a barter exchange.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "barter_table": {
                                    "description": "Loot table that's used to drop a random item.",
                                    "type": "string"
                                },
                                "cooldown_after_being_attacked": {
                                    "description": "Duration, in seconds, for which mob won't barter items if it was hurt",
                                    "type": "integer",
                                    "default": 0
                                }
                            }
                        },
                        "minecraft:block_climber": {
                            "title": "COMPONENTS",
                            "description": "Allows the player to detect and maneuver on the scaffolding block.",
                            "type": "object",
                            "default": {}
                        },
                        "minecraft:block_sensor": {
                            "title": "COMPONENTS",
                            "description": "Fires off a specified event when a block in the block list is broken within the sensor range.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "on_break": {
                                    "description": "List of blocks to watch for being broken to fire off a specified event. If a block is in multiple lists, multiple events will fire.",
                                    "type": "array",
                                    "items": {
                                        "type": [
                                            "string",
                                            "object"
                                        ],
                                        "default": {},
                                        "properties": {
                                            "block_list": {
                                                "type": "array",
                                                "default": [],
                                                "items": {
                                                    "type": "string"
                                                }
                                            },
                                            "on_block_broken": {
                                                "description": "Event to run when a block has been broken",
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "sensor_radius": {
                                    "description": "The maximum radial distance in which a specified block can be detected. The biggest radius is 32.0.",
                                    "type": "number",
                                    "default": 16.0,
                                    "maximum": 32.0
                                }
                            }
                        },
                        "minecraft:boostable": {
                            "title": "COMPONENTS",
                            "description": "Defines the conditions and behavior of a rideable entity's boost.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "boost_items": {
                                    "description": "List of items that can be used to boost while riding this entity.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "default": {},
                                        "properties": {
                                            "damage": {
                                                "description": "This is the damage that the item will take each time it is used.",
                                                "type": "integer",
                                                "default": 1
                                            },
                                            "item": {
                                                "description": "Name of the item that can be used to boost.",
                                                "type": "string"
                                            },
                                            "replace_item": {
                                                "description": "The item used to boost will become this item once it is used up.",
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "duration": {
                                    "description": "Time in seconds for the boost.",
                                    "type": "number",
                                    "default": 3.0
                                },
                                "speed_multiplier": {
                                    "description": "Factor by which the entity's normal speed increases. E.g. 2.0 means go twice as fast.",
                                    "type": "number",
                                    "default": 1.0
                                }
                            }
                        },
                        "minecraft:boss": {
                            "title": "COMPONENTS",
                            "description": "The current state of the boss for updating the boss HUD.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "hud_range": {
                                    "description": "The max distance from the boss at which the boss's health bar is present on the players screen.",
                                    "type": "integer",
                                    "default": 55
                                },
                                "name": {
                                    "description": "The name that will be displayed above the boss's health bar.",
                                    "type": "string"
                                },
                                "should_darken_sky": {
                                    "description": "Whether the sky should darken in the presence of the boss.",
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        },
                        "minecraft:break_blocks": {
                            "title": "COMPONENTS",
                            "description": "Specifies the blocks that this entity can break as it moves around.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "breakable_blocks": {
                                    "description": "A list of the blocks that can be broken as this entity moves around",
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "minecraft:breathable": {
                            "title": "COMPONENTS",
                            "description": "Defines what blocks this entity can breathe in and gives them the ability to suffocate.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "breathe_blocks": {
                                    "description": "List of blocks this entity can breathe in, in addition to the other \"breathes\" parameters.",
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "breathes_air": {
                                    "description": "If true, this entity can breathe in air.",
                                    "type": "boolean",
                                    "default": true
                                },
                                "breathes_lava": {
                                    "description": "If true, this entity can breathe in lava.",
                                    "type": "boolean",
                                    "default": true
                                },
                                "breathes_solids": {
                                    "description": "If true, this entity can breathe in solid blocks.",
                                    "type": "boolean",
                                    "default": true
                                },
                                "breathes_water": {
                                    "description": "If true, this entity can breathe in water.",
                                    "type": "boolean",
                                    "default": false
                                },
                                "generates_bubbles": {
                                    "description": "If true, this entity will have visible bubbles while in water.",
                                    "type": "boolean",
                                    "default": true
                                },
                                "inhale_time": {
                                    "description": "Time in seconds to recover breath to maximum.",
                                    "type": "number",
                                    "default": 0
                                },
                                "non_breathe_blocks": {
                                    "description": "List of blocks this entity can't breathe in, in addition to the other \"breathes\" parameters.",
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "suffocate_time": {
                                    "description": "Time in seconds between suffocation damage.",
                                    "type": "integer",
                                    "default": -20
                                },
                                "total_supply": {
                                    "description": "Time in seconds the entity can hold its breath.",
                                    "type": "integer",
                                    "default": 15
                                }
                            }
                        },
                        "minecraft:breedable": {
                            "title": "COMPONENTS",
                            "description": "Defines the way an entity can get into the 'love' state.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "allow_sitting": {
                                    "description": "If true, entities can breed while sitting",
                                    "type": "boolean",
                                    "default": false
                                },
                                "blend_attributes": {
                                    "description": "If true, the entities will blend their attributes in the offspring after they breed. For example, horses blend their health, movement, and jump_strength in their offspring.",
                                    "type": "boolean",
                                    "default": true
                                },
                                "breed_cooldown": {
                                    "description": "Time in seconds before the Entity can breed again.",
                                    "type": "number",
                                    "default": 60
                                },
                                "breed_items": {
                                    "description": "The list of items that can be used to get the entity into the 'love' state",
                                    "type": [
                                        "array",
                                        "string"
                                    ],
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "breeds_with": {
                                    "description": "The list of entity definitions that this entity can breed with.",
                                    "type": [
                                        "array",
                                        "object"
                                    ],
                                    "items": {
                                        "$ref": "#/properties/minecraft:entity/properties/components/properties/minecraft:breedable/properties/breeds_with"
                                    },
                                    "properties": {
                                        "baby_type": {
                                            "description": "The entity definition of this entity's babies.",
                                            "type": "string"
                                        },
                                        "breed_event": {
                                            "description": "Event to run when this entity breeds.",
                                            "$ref": "#/definitions/events"
                                        },
                                        "mate_type": {
                                            "description": "The entity definition of this entity's mate.",
                                            "type": "string"
                                        }
                                    }
                                },
                                "causes_pregnancy": {
                                    "description": "If true, the entity will become pregnant instead of spawning a baby.",
                                    "type": "boolean",
                                    "default": false
                                },
                                "deny_parents_variant": {
                                    "description": "Determines how likely the baby of parents with the same variant will deny that variant and take a random variant within the given range instead.",
                                    "type": "object",
                                    "default": {},
                                    "properties": {
                                        "chance": {
                                            "description": "The percentage chance of denying the parents' variant.",
                                            "type": "number",
                                            "default": 0
                                        },
                                        "max_variant": {
                                            "description": "The inclusive maximum of the variant range.",
                                            "type": "integer",
                                            "default": 0
                                        },
                                        "min_variant": {
                                            "description": "The inclusive minimum of the variant range.",
                                            "type": "integer",
                                            "default": 0
                                        }
                                    }
                                },
                                "environment_requirements": {
                                    "description": "The list of nearby block requirements to get the entity into the 'love' state.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "default": {},
                                        "properties": {
                                            "blocks": {
                                                "description": "The block types required nearby for the entity to breed.",
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                }
                                            },
                                            "count": {
                                                "description": "The number of the required block types nearby for the entity to breed.",
                                                "type": "number"
                                            },
                                            "radius": {
                                                "description": "How many blocks radius from the mob's center to search in for the required blocks. Bounded between 0 and 16.",
                                                "type": "number",
                                                "minimum": 0,
                                                "maximum": 16
                                            }
                                        }
                                    }
                                },
                                "extra_baby_chance": {
                                    "description": "Chance that up to 16 babies will spawn between 0.0 and 1.0, where 1.0 is 100%.",
                                    "type": "number",
                                    "minium": 0.0,
                                    "maxium": 1.0,
                                    "default": 0.0
                                },
                                "inherit_tamed": {
                                    "description": "If true, the babies will be automatically tamed if its parents are",
                                    "type": "boolean",
                                    "default": true
                                },
                                "love_filters": {
                                    "description": "The filters to run when attempting to fall in love.",
                                    "$ref": "#/definitions/filter"
                                },
                                "mutation_factor": {
                                    "description": "Determines how likely the babies are to NOT inherit one of their parent's variances. Values are between 0.0 and 1.0, with a higher number meaning more likely to mutate.",
                                    "type": "object",
                                    "default": {},
                                    "properties": {
                                        "color": {
                                            "description": "The percentage chance of a mutation on the entity's color.",
                                            "type": "number",
                                            "default": 0
                                        },
                                        "extra_variant": {
                                            "description": "The percentage chance of a mutation on the entity's extra variant type.",
                                            "type": "number",
                                            "default": 0
                                        },
                                        "variant": {
                                            "description": "The percentage chance of a mutation on the entity's variant type.",
                                            "type": "number",
                                            "default": 0
                                        }
                                    }
                                },
                                "require_full_health": {
                                    "description": "If true, the entity needs to be at full health before it can breed.",
                                    "type": "boolean",
                                    "default": false
                                },
                                "require_tame": {
                                    "description": "If true, the entities need to be tamed first before they can breed.",
                                    "type": "boolean",
                                    "default": true
                                },
                                "transform_to_item": {
                                    "description": "The breed item used will transform to this item upon successful interaction. Format: itemName:auxValue",
                                    "type": "string"
                                }
                            }
                        },
                        "minecraft:bribeable": {
                            "title": "COMPONENTS",
                            "description": "Defines the way an entity can get into the 'bribed' state.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "bribe_cooldown": {
                                    "description": "Time in seconds before the Entity can be bribed again.",
                                    "type": "number",
                                    "default": 2.0
                                },
                                "bribe_items": {
                                    "description": "The list of items that can be used to bribe the entity.",
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "minecraft:buoyant": {
                            "title": "COMPONENTS",
                            "description": "Enables an entity to float on the specified liquid blocks.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "apply_gravity": {
                                    "description": "Applies gravity each tick. Causes more of a wave simulation, but will cause more gravity to be applied outside liquids.",
                                    "type": "boolean",
                                    "default": true
                                },
                                "base_buoyancy": {
                                    "description": "Base buoyancy used to calculate how much will a mob float.",
                                    "type": "number",
                                    "default": 1.0
                                },
                                "big_wave_probability": {
                                    "description": "Probability for a big wave hitting the entity. Only used if `simulate_waves` is true.",
                                    "type": "number",
                                    "default": 0.03
                                },
                                "big_wave_speed": {
                                    "description": "Multiplier for the speed to make a big wave. Triggered depending on 'big_wave_probability'.",
                                    "type": "number",
                                    "default": 1.0
                                },
                                "drag_down_on_buoyancy_removed": {
                                    "description": "How much an actor will be dragged down when the Buoyancy Component is removed.",
                                    "type": "number",
                                    "default": 0.0
                                },
                                "liquid_blocks": {
                                    "description": "List of blocks this entity can float on. Must be a liquid block.",
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "simulate_waves": {
                                    "description": "Should the movement simulate waves going through.",
                                    "type": "boolean",
                                    "default": true
                                }
                            }
                        },
                        "minecraft:burns_in_daylight": {
                            "title": "COMPONENTS",
                            "description": "Specifies if/how a mob burns in daylight.",
                            "type": "object",
                            "default": {}
                        },
                        "minecraft:celebrate_hunt": {
                            "title": "COMPONENTS",
                            "description": "Specifies hunt celebration behaviour.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "broadcast": {
                                    "description": "If true, celebration will be broadcasted to other entities in the radius.",
                                    "type": "boolean",
                                    "default": true
                                },
                                "celeberation_targets": {
                                    "description": "The list of conditions that target of hunt must satisfy to initiate celebration.",
                                    "$ref": "#/definitions/filter"
                                },
                                "celebrate_sound": {
                                    "description": "The sound event to play when the mob is celebrating",
                                    "type": "string"
                                },
                                "duration": {
                                    "description": "Duration, in seconds, of celebration",
                                    "type": "integer",
                                    "default": 4
                                },
                                "radius": {
                                    "description": "If broadcast is enabled, specifies the radius in which it will notify other entities for celebration.",
                                    "type": "number",
                                    "default": 16
                                },
                                "sound_interval": {
                                    "description": "The range of time in seconds to randomly wait before playing the sound again",
                                    "type": [
                                        "array",
                                        "integer"
                                    ],
                                    "minItems": 2,
                                    "maxItems": 2,
                                    "default": 0,
                                    "items": {
                                        "type": "integer"
                                    }
                                }
                            }
                        },
                        "minecraft:combat_regeneration": {
                            "title": "COMPONENTS",
                            "description": "Gives Regeneration I and removes Mining Fatigue from the mob that kills the Actor's attack target.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "apply_to_family": {
                                    "description": "Determines if the mob will grant mobs of the same type combat buffs if they kill the target.",
                                    "type": "boolean",
                                    "default": false
                                },
                                "apply_to_self": {
                                    "description": "Determines if the mob will grant itself the combat buffs if it kills the target.",
                                    "type": "boolean",
                                    "default": false
                                },
                                "regeneration_duration": {
                                    "description": "The duration in seconds of Regeneration I added to the mob.",
                                    "type": "integer",
                                    "default": 5
                                }
                            }
                        },
                        "minecraft:conditional_bandwidth_optimization": {
                            "title": "COMPONENTS",
                            "description": "Defines the Conditional Spatial Update Bandwidth Optimizations of this entity.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "conditional_values": {
                                    "description": "The object containing the conditional bandwidth optimization values.",
                                    "type": [
                                        "object",
                                        "array"
                                    ],
                                    "default": {},
                                    "items": {
                                        "$ref": "#/properties/minecraft:entity/properties/components/properties/minecraft:conditional_bandwidth_optimization/properties/conditional_values"
                                    },
                                    "properties": {
                                        "conditional_values": {
                                            "description": "Conditions that must be met for these optimization values to be used.",
                                            "type": "integer"
                                        },
                                        "max_dropped_ticks": {
                                            "description": "In relation to the optimization value, determines the maximum ticks spatial update packets can be not sent.",
                                            "type": "integer"
                                        },
                                        "max_optimized_distance": {
                                            "description": "The maximum distance considered during bandwidth optimizations. Any value below the max is interpolated to find optimization, and any value greater than or equal to this max results in max optimization.",
                                            "type": "number",
                                            "default": 0.0
                                        },
                                        "use_motion_prediction_hints": {
                                            "description": "When set to true, smaller motion packets will be sent during drop packet intervals, resulting in the same amount of packets being sent as without optimizations but with much less data being sent. This should be used when actors are travelling very quickly or teleporting to prevent visual oddities.",
                                            "type": "boolean",
                                            "default": true
                                        }
                                    }
                                },
                                "default_values": {
                                    "description": "The object containing the default bandwidth optimization values.",
                                    "type": "object",
                                    "default": {},
                                    "properties": {
                                        "max_dropped_ticks": {
                                            "description": "In relation to the optimization value, determines the maximum ticks spatial update packets can be not sent.",
                                            "type": "integer"
                                        },
                                        "max_optimized_distance": {
                                            "description": "The maximum distance considered during bandwidth optimizations. Any value below the max is interpolated to find optimization, and any value greater than or equal to this max results in max optimization.",
                                            "type": "number",
                                            "default": 0.0
                                        },
                                        "use_motion_prediction_hints": {
                                            "description": "When set to true, smaller motion packets will be sent during drop packet intervals, resulting in the same amount of packets being sent as without optimizations but with much less data being sent. This should be used when actors are travelling very quickly or teleporting to prevent visual oddities.",
                                            "type": "boolean",
                                            "default": true
                                        }
                                    }
                                }
                            }
                        },
                        "minecraft:custom_hit_test": {
                            "title": "COMPONENTS",
                            "description": "List of hitboxes for melee and ranged hits against the entity.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "hitboxes": {
                                    "description": "Comma seperated list of hitboxes.",
                                    "type": "array"
                                }
                            }
                        },
                        "minecraft:damage_over_time": {
                            "title": "COMPONENTS",
                            "description": "Applies defined amount of damage to the entity at specified intervals.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "damage_per_hurt": {
                                    "description": "Amount of damage caused each hurt.",
                                    "type": "integer",
                                    "default": 1
                                },
                                "time_between_hurt": {
                                    "description": "Time in seconds between damage.",
                                    "type": "number",
                                    "default": 0.0
                                }
                            }
                        },
                        "minecraft:damage_sensor": {
                            "title": "COMPONENTS",
                            "description": "Defines what events to call when this entity is damaged by specific entities or items.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "triggers": {
                                    "description": "List of triggers with the events to call when taking specific kinds of damage.",
                                    "type": [
                                        "array",
                                        "object"
                                    ],
                                    "items": {
                                        "$ref": "#/properties/minecraft:entity/properties/components/properties/minecraft:damage_sensor/properties/triggers"
                                    },
                                    "properties": {
                                        "cause": {
                                            "description": "Type of damage that triggers the events.",
                                            "type": "string",
                                            "default": "none"
                                        },
                                        "damage_modifier": {
                                            "description": "A modifier that adds to/removes from the base damage from the damage cause. It does not reduce damage to less than 0.",
                                            "type": "number",
                                            "default": 0.0
                                        },
                                        "damage_multiplier": {
                                            "description": "A multiplier that modifies the base damage from the damage cause. If deals_damage is true the multiplier can only reduce the damage the entity will take to a minimum of 1.",
                                            "type": "number",
                                            "default": 1.0
                                        },
                                        "deals_damage": {
                                            "description": "If true, the damage dealt to the entity will take away health from it, set to false to make the entity ignore that damage.",
                                            "type": "boolean",
                                            "default": true
                                        },
                                        "on_damage": {
                                            "description": "Specifies filters for entity definitions and events.",
                                            "$ref": "#/definitions/filter"
                                        },
                                        "on_damage_sound_event": {
                                            "description": "Defines what sound to play, if any, when the on_damage filters are met.",
                                            "$ref": "#/definitions/events"
                                        }
                                    }
                                }
                            }
                        },
                        "minecraft:despawn": {
                            "title": "COMPONENTS",
                            "description": "Despawns the Actor when the despawn rules or optional filters evaluate to true.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "despawn_from_chance": {
                                    "description": "Determines if \"min_range_random_chance\" is used in the standard despawn rules",
                                    "type": "boolean",
                                    "default": true
                                },
                                "despawn_from_distance": {
                                    "description": "Specifies if the \"min_distance\" and \"max_distance\" are used in the standard despawn rules.",
                                    "type": "object",
                                    "default": {},
                                    "properties": {
                                        "max_distance": {
                                            "description": "maximum distance for standard despawn rules to instantly despawn the mob.",
                                            "type": "integer",
                                            "default": 128
                                        },
                                        "min_distance": {
                                            "description": "minimum distance for standard despawn rules to try to despawn the mob.",
                                            "type": "integer",
                                            "default": 32
                                        }
                                    }
                                },
                                "despawn_from_inactivity": {
                                    "description": "Determines if the \"min_range_inactivity_timer\" is used in the standard despawn rules.",
                                    "type": "boolean",
                                    "default": true
                                },
                                "despawn_from_simulation_edge": {
                                    "description": "Determines if the mob is instantly despawned at the edge of simulation distance in the standard despawn rules.",
                                    "type": "boolean",
                                    "default": true
                                },
                                "filters": {
                                    "description": "The list of conditions that must be satisfied before the Actor is despawned. If a filter is defined then standard despawn rules are ignored.",
                                    "$ref": "#/definitions/filter"
                                },
                                "min_range_inactivity_timer": {
                                    "description": "The amount of time in seconds that the mob must be inactive.",
                                    "type": "integer",
                                    "default": 30
                                },
                                "min_range_random_chance": {
                                    "description": "A random chance between 1 and the given value.",
                                    "type": "integer",
                                    "default": 800
                                },
                                "remove_child_entities": {
                                    "description": "If true, all entities linked to this entity in a child relationship (eg. leashed) will also be despawned.",
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        },
                        "minecraft:drying_out_timer": {
                            "title": "COMPONENTS",
                            "description": "Adds a timer for drying out that will count down and fire 'dried_out_event' or will stop as soon as the entity will get under rain or water and fire 'stopped_drying_out_event'",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "dried_out_event": {
                                    "description": "Event to fire when the drying out time runs out.",
                                    "$ref": "#/definitions/events"
                                },
                                "recover_after_dried_out_event": {
                                    "description": "Event to fire when entity was already dried out but received increase in water supply.",
                                    "$ref": "#/definitions/events"
                                },
                                "stopped_drying_out_event": {
                                    "description": "Event to fire when entity stopped drying out, for example got into water or under rain.",
                                    "$ref": "#/definitions/events"
                                },
                                "total_time": {
                                    "description": "Amount of time in seconds to dry out fully.",
                                    "type": "number",
                                    "default": 0.0
                                },
                                "water_bottle_refill_time": {
                                    "description": "Optional amount of additional time in seconds given by using splash water bottle on entity.",
                                    "type": "number",
                                    "default": 0.0
                                }
                            }
                        },
                        "minecraft:economy_trade_table": {
                            "title": "COMPONENTS",
                            "description": "Defines this entity's ability to trade with players.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "convert_trades_economy": {
                                    "description": "Determines when the mob transforms, if the trades should be converted when the new mob has a economy_trade_table. When the trades are converted, the mob will generate a new trade list with their new trade table, but then it will try to convert any of the same trades over to have the same enchantments and user data. For example, if the original has a Emerald to Enchanted Iron Sword (Sharpness 1), and the new trade also has an Emerald for Enchanted Iron Sword, then the enchantment will be Sharpness 1.",
                                    "type": "boolean",
                                    "default": true
                                },
                                "cured_discount": {
                                    "description": "How much should the discount be modified by when the player has cured the Zombie Villager. Can be specified as a pair of numbers (low-tier trade discount and high-tier trade discount)",
                                    "type": "array",
                                    "minItems": 2,
                                    "maxItems": 2,
                                    "default": [
                                        -5,
                                        -20
                                    ],
                                    "items": {
                                        "type": "integer"
                                    }
                                },
                                "display_name": {
                                    "description": "Name to be displayed while trading with this entity",
                                    "type": "string"
                                },
                                "hero_demand_discount": {
                                    "description": "Used in legacy prices to determine how much should Demand be modified by when the player has the Hero of the Village mob effect",
                                    "type": "integer",
                                    "default": -4
                                },
                                "max_cured_discount": {
                                    "description": "The max the discount can be modified by when the player has cured the Zombie Villager. Can be specified as a pair of numbers (low-tier trade discount and high-tier trade discount)",
                                    "type": "array",
                                    "minItems": 2,
                                    "maxItems": 2,
                                    "default": [
                                        -25,
                                        -63
                                    ],
                                    "items": {
                                        "type": "integer"
                                    }
                                },
                                "max_nearby_cured_discount": {
                                    "description": "The max the discount can be modified by when the player has cured a nearby Zombie Villager",
                                    "type": "integer",
                                    "default": -200
                                },
                                "nearby_cured_discount": {
                                    "description": "How much should the discount be modified by when the player has cured a nearby Zombie Villager",
                                    "type": "integer",
                                    "default": -25
                                },
                                "new_screen": {
                                    "description": "Used to determine if trading with entity opens the new trade screen",
                                    "type": "boolean",
                                    "default": false
                                },
                                "persist_trades": {
                                    "description": "Determines if the trades should persist when the mob transforms. This makes it so that the next time the mob is transformed to something with a trade_table or economy_trade_table, then it keeps their trades.",
                                    "type": "boolean",
                                    "default": false
                                },
                                "show_trade_screen": {
                                    "description": "Show an in game trade screen when interacting with the mob.",
                                    "type": "boolean",
                                    "default": true
                                },
                                "table": {
                                    "description": "File path relative to the resource pack root for this entity's trades",
                                    "type": "string"
                                },
                                "use_legacy_price_formula": {
                                    "description": "Determines whether the legacy formula is used to determines the trade prices.",
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        },
                        "minecraft:entity_sensor": {
                            "title": "COMPONENTS",
                            "description": "A component that fires an event when a set of conditions are met by other entities within the defined range.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "event": {
                                    "description": "Event to fire when the conditions are met.",
                                    "type": "string"
                                },
                                "event_filters": {
                                    "description": "The set of conditions that must be satisfied to fire the event.",
                                    "$ref": "#/definitions/filter"
                                },
                                "maximum_count": {
                                    "description": "The maximum number of entities that must pass the filter conditions for the event to send.",
                                    "type": "integer",
                                    "default": -1
                                },
                                "minimum_count": {
                                    "description": "The minimum number of entities that must pass the filter conditions for the event to send.",
                                    "type": "integer",
                                    "default": 1
                                },
                                "relative_range": {
                                    "description": "If true the sensor range is additive on top of the entity's size.",
                                    "type": "boolean",
                                    "default": true
                                },
                                "require_all": {
                                    "description": "If true requires all nearby entities to pass the filter conditions for the event to send.",
                                    "type": "boolean",
                                    "default": false
                                },
                                "sensor_range": {
                                    "description": "The maximum distance another entity can be from this and have the filters checked against it.",
                                    "type": "number",
                                    "default": 10
                                }
                            }
                        },
                        "minecraft:environment_sensor": {
                            "title": "COMPONENTS",
                            "description": "Creates a trigger based on environment conditions.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "triggers": {
                                    "description": "The list of triggers that fire when the environment conditions match the given filter criteria.",
                                    "type": [
                                        "array",
                                        "object",
                                        "string"
                                    ],
                                    "items": {
                                        "$ref": "#/properties/minecraft:entity/properties/components/properties/minecraft:environment_sensor/properties/triggers"
                                    },
                                    "properties": {
                                        "filters": {
                                            "description": "The filder",
                                            "$ref": "#/definitions/filter"
                                        },
                                        "event": {
                                            "description": "The event",
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "minecraft:equip_item": {
                            "title": "COMPONENTS",
                            "description": "The entity puts on the desired equipment.",
                            "type": "object",
                            "default": {}
                        },
                        "minecraft:equippable": {
                            "title": "COMPONENTS",
                            "description": "Defines an entity's behavior for having items equipped to it.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "slots": {
                                    "description": "List of slots and the item that can be equipped.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "default": {},
                                        "properties": {
                                            "accepted_items": {
                                                "description": "The list of items that can go in this slot.",
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                }
                                            },
                                            "interact_text": {
                                                "description": "Text to be displayed when the entity can be equipped with this item when playing with Touch-screen controls.",
                                                "type": "string"
                                            },
                                            "item": {
                                                "description": "Identifier of the item that can be equipped for this slot.",
                                                "type": "string"
                                            },
                                            "on_equip": {
                                                "description": "Event to trigger when this entity is equipped with this item.",
                                                "$ref": "#/definitions/events"
                                            },
                                            "on_unequip": {
                                                "description": "Event to trigger when this item is removed from this entity.",
                                                "$ref": "#/definitions/events"
                                            },
                                            "slot": {
                                                "description": "The slot number of this slot.",
                                                "type": "integer",
                                                "default": 0
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "minecraft:experience_reward": {
                            "title": "COMPONENTS",
                            "description": ".",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "on_bred": {
                                    "description": "A Molang expression defining the amount of experience rewarded when this entity is successfully bred. An array of expressions adds each expression's result together for a final total.",
                                    "type": [
                                        "string",
                                        "number"
                                    ],
                                    "default": 0
                                },
                                "on_death": {
                                    "description": "A Molang expression defining the amount of experience rewarded when this entity dies. An array of expressions adds each expression's result together for a final total.",
                                    "type": [
                                        "string",
                                        "number"
                                    ],
                                    "default": 0
                                }
                            }
                        },
                        "minecraft:explode": {
                            "title": "COMPONENTS",
                            "description": "Defines how the entity explodes.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "breaks_blocks": {
                                    "description": "If true, the explosion will destroy blocks in the explosion radius.",
                                    "type": "boolean",
                                    "default": true
                                },
                                "causes_fire": {
                                    "description": "If true, blocks in the explosion radius will be set on fire.",
                                    "type": "boolean",
                                    "default": false
                                },
                                "destroy_affected_by_griefing": {
                                    "description": "If true, whether the explosion breaks blocks is affected by the mob griefing game rule.",
                                    "type": "boolean",
                                    "default": false
                                },
                                "fire_affected_by_griefing": {
                                    "description": "If true, whether the explosion causes fire is affected by the mob griefing game rule.",
                                    "type": "boolean",
                                    "default": false
                                },
                                "fuse_length": {
                                    "description": "The range for the random amount of time the fuse will be lit before exploding, a negative value means the explosion will be immediate.",
                                    "type": "array",
                                    "minItems": 2,
                                    "maxItems": 2,
                                    "default": [
                                        0.0,
                                        0.0
                                    ],
                                    "items": {
                                        "type": "number",
                                        "default": 0.0
                                    }
                                },
                                "fuse_lit": {
                                    "description": "If true, the fuse is already lit when this component is added to the entity.",
                                    "type": "boolean",
                                    "default": false
                                },
                                "max_resistance": {
                                    "description": "A blocks explosion resistance will be capped at this value when an explosion occurs.",
                                    "type": "number",
                                    "default": 3.40282e+38
                                },
                                "power": {
                                    "description": "The radius of the explosion in blocks and the amount of damage the explosion deals.",
                                    "type": "number",
                                    "default": 3
                                }
                            }
                        },
                        "minecraft:flocking": {
                            "title": "COMPONENTS",
                            "description": "Allows entities to flock in groups in water or not.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "block_distance": {
                                    "description": "The amount of blocks away the entity will look at to push away from.",
                                    "type": "number",
                                    "default": 0
                                },
                                "block_weight": {
                                    "description": "The weight of the push back away from blocks.",
                                    "type": "number",
                                    "default": 0
                                },
                                "breach_influence": {
                                    "description": "The amount of push back given to a flocker that breaches out of the water.",
                                    "type": "number",
                                    "default": 0
                                },
                                "cohesion_threshold": {
                                    "description": "The threshold in which to start applying cohesion.",
                                    "type": "number",
                                    "default": 1
                                },
                                "cohesion_weight": {
                                    "description": "The weight applied for the cohesion steering of the flock.",
                                    "type": "number",
                                    "default": 1
                                },
                                "goal_weight": {
                                    "description": "The weight on which to apply on the goal output.",
                                    "type": "number",
                                    "default": 0
                                },
                                "high_flock_limit": {
                                    "description": "Determines the high bound amount of entities that can be allowed in the flock.",
                                    "type": "integer",
                                    "default": 0
                                },
                                "in_water": {
                                    "description": "Tells the Flocking Component if the entity exists in water.",
                                    "type": "boolean",
                                    "default": false
                                },
                                "influence_radius": {
                                    "description": "The area around the entity that allows others to be added to the flock.",
                                    "type": "number",
                                    "default": 0
                                },
                                "innner_cohesion_threshold": {
                                    "description": "The distance in which the flocker will stop applying cohesion.",
                                    "type": "number",
                                    "default": 0
                                },
                                "loner_chance": {
                                    "description": "The percentage chance between 0-1 that a fish will spawn and not want to join flocks. Invalid values will be capped at the end points.",
                                    "type": "number",
                                    "minium": 0.0,
                                    "maxium": 1.0,
                                    "default": 0
                                },
                                "low_flock_limit": {
                                    "description": "Determines the low bound amount of entities that can be allowed in the flock.",
                                    "type": "integer",
                                    "default": 0
                                },
                                "match_variants": {
                                    "description": "Tells the flockers that they can only match similar entities that also match the variant, mark variants, and color data of the other potential flockers.",
                                    "type": "boolean",
                                    "default": false
                                },
                                "max_height": {
                                    "description": "The max height allowable in the air or water.",
                                    "type": "number",
                                    "default": 0
                                },
                                "min_height": {
                                    "description": "The min height allowable in the air or water.",
                                    "type": "number",
                                    "default": 0
                                },
                                "separation_threshold": {
                                    "description": "The distance that is determined to be to close to another flocking and to start applying separation.",
                                    "type": "number",
                                    "default": 2
                                },
                                "separation_weight": {
                                    "description": "The weight applied to the separation of the flock.",
                                    "type": "number",
                                    "default": 1
                                },
                                "use_center_of_mass": {
                                    "description": "Tells the flockers that they will follow flocks based on the center of mass.",
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        },
                        "minecraft:genetics": {
                            "title": "COMPONENTS",
                            "description": "Defines the way a mob's genes and alleles are passed on to its offspring, and how those traits manifest in the child. Compatible parent genes are crossed together, the alleles are handed down from the parents to the child, and any matching genetic variants fire off JSON events to modify the child and express the traits.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "genes": {
                                    "description": "The list of genes that this entity has and will cross with a partner during breeding.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "default": {},
                                        "properties": {
                                            "allele_range": {
                                                "description": "The range of positive integer allele values for this gene. Spawned mobs will have a random number in this range assigned to them.",
                                                "type": "object",
                                                "default": {},
                                                "properties": {
                                                    "range_max": {
                                                        "description": "Upper bound of the allele values for this gene.",
                                                        "type": "integer",
                                                        "default": 0
                                                    },
                                                    "range_min": {
                                                        "description": "Lower bound of the allele values for this gene.",
                                                        "type": "integer",
                                                        "default": 0
                                                    }
                                                }
                                            },
                                            "genetic_variants": {
                                                "description": "The list of genetic variants for this gene. These check for particular allele combinations and fire events when all of them are satisfied.",
                                                "type": "object",
                                                "default": {},
                                                "properties": {
                                                    "birth_event": {
                                                        "description": "Event to run when this mob is created and matches the allele conditions.",
                                                        "$ref": "#/definitions/events"
                                                    },
                                                    "both_allele": {
                                                        "description": "If this value is non-negative, compare both the mob's main and hidden alleles with this value for a match with both. Can also be a range of integers.",
                                                        "type": "integer",
                                                        "default": -1
                                                    },
                                                    "either_allele": {
                                                        "description": "If this value is non-negative, compare both the mob's main and hidden alleles with this value for a match with either. Can also be a range of integers.",
                                                        "type": "integer",
                                                        "default": -1
                                                    },
                                                    "hidden_allele": {
                                                        "description": "If this value is non-negative, compare the mob's hidden allele with this value for a match. Can also be a range of integers.",
                                                        "type": "integer",
                                                        "default": -1
                                                    },
                                                    "main_allele": {
                                                        "description": "If this value is non-negative, compare the mob's main allele with this value for a match. Can also be a range of integers.",
                                                        "type": "integer",
                                                        "default": -1
                                                    }
                                                }
                                            },
                                            "mutation_rate": {
                                                "description": "If this value is non-negative, overrides the chance for this gene that an allele will be replaced with a random one instead of the parent's allele during birth. Non-negative values greater than `1` will be the same as the value `1`.",
                                                "type": "number",
                                                "default": -1
                                            },
                                            "name": {
                                                "description": "The name of the gene.",
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "mutation_rate": {
                                    "description": "Chance that an allele will be replaced with a random one instead of the parent's allele during birth.",
                                    "type": "number",
                                    "default": 0.03125
                                }
                            }
                        },
                        "minecraft:giveable": {
                            "title": "COMPONENTS",
                            "description": "Defines sets of items that can be used to trigger events when used on this entity. The item will also be taken and placed in the entity's inventory.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "cooldown": {
                                    "description": "An optional cool down in seconds to prevent spamming interactions.",
                                    "type": "number",
                                    "default": 0.0
                                },
                                "items": {
                                    "description": "The list of items that can be given to the entity to place in their inventory.",
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "on_give": {
                                    "description": "Event to fire when the correct item is given.",
                                    "$ref": "#/definitions/events"
                                }
                            }
                        },
                        "minecraft:group_size": {
                            "title": "COMPONENTS",
                            "description": "Keeps track of entity group size in the given radius.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "filters": {
                                    "description": "The list of conditions that must be satisfied for other entities to be counted towards group size.",
                                    "$ref": "#/definitions/filter"
                                },
                                "radius": {
                                    "description": "Radius from center of entity.",
                                    "type": "number",
                                    "default": 16
                                }
                            }
                        },
                        "minecraft:grows_crop": {
                            "title": "COMPONENTS",
                            "description": "Could increase crop growth when entity walks over crop",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "chance": {
                                    "description": "Value between 0-1. Chance of success per tick.",
                                    "type": "number",
                                    "default": 0
                                },
                                "charges": {
                                    "description": "Number of charges",
                                    "type": "integer",
                                    "default": 10
                                }
                            }
                        },
                        "minecraft:healable": {
                            "title": "COMPONENTS",
                            "description": "Defines the interactions with this entity for healing it.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "filters": {
                                    "description": "The filter group that defines the conditions for using this item to heal the entity.",
                                    "$ref": "#/definitions/filter"
                                },
                                "force_use": {
                                    "description": "Determines if item can be used regardless of entity being at full health.",
                                    "type": "boolean",
                                    "default": false
                                },
                                "items": {
                                    "description": "The array of items that can be used to heal this entity.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "default": {},
                                        "properties": {
                                            "heal_amount": {
                                                "description": "The amount of health this entity gains when fed this item.",
                                                "type": "integer",
                                                "default": 1
                                            },
                                            "item": {
                                                "description": "Item identifier that can be used to heal this entity.",
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "minecraft:home": {
                            "title": "COMPONENTS",
                            "description": "Saves a home pos for when the the entity is spawned.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "home_block_list": {
                                    "description": "Optional block list that the home position will be associated with. If any of the blocks no longer exist at that position, the home restriction is removed. Example syntax: minecraft:sand. Not supported: minecraft:sand:1",
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "restriction_radius": {
                                    "description": "The radius that the entity will be restricted to in relation to its home",
                                    "type": "integer",
                                    "default": -1
                                }
                            }
                        },
                        "minecraft:hurt_on_condition": {
                            "title": "COMPONENTS",
                            "description": "Defines a set of conditions under which an entity should take damage.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "damage_conditions": {
                                    "description": "List of damage conditions that when met can cause damage to the entity.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "default": {},
                                        "properties": {
                                            "cause": {
                                                "description": "The kind of damage that is caused to the entity. Various armors and spells use this to determine if the entity is immune.",
                                                "type": "string",
                                                "default": "none"
                                            },
                                            "damage_per_tick": {
                                                "description": "The amount of damage done each tick that the conditions are met.",
                                                "type": "integer"
                                            },
                                            "filters": {
                                                "description": "The set of conditions that must be satisfied before the entity takes the defined damage.",
                                                "$ref": "#/definitions/filter"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "minecraft:inside_block_notifier": {
                            "title": "COMPONENTS",
                            "description": "Verifies whether the entity is inside any of the listed blocks.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "block_list": {
                                    "description": "List of blocks, with certain block states, that we are monitoring to see if the entity is inside.",
                                    "type": "array",
                                    "items": {
                                        "type": [
                                            "string",
                                            "object"
                                        ],
                                        "default": {},
                                        "properties": {
                                            "block": {
                                                "description": "The block and its states",
                                                "type": "object",
                                                "default": {},
                                                "properties": {
                                                    "name": {
                                                        "description": "The name of the block",
                                                        "type": "string"
                                                    },
                                                    "states": {
                                                        "description": "The block state",
                                                        "type": "object",
                                                        "default": {}
                                                    }
                                                }
                                            },
                                            "entered_block_event": {
                                                "description": "Event when the entity has entered the block",
                                                "$ref": "#/definitions/events"
                                            },
                                            "exited_block_event": {
                                                "description": "Event whent the entity has exited the block",
                                                "$ref": "#/definitions/events"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "minecraft:insomnia": {
                            "title": "COMPONENTS",
                            "description": "Adds a timer since last rested to see if phantoms should spawn.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "days_until_insomnia": {
                                    "description": "Number of days the mob has to stay up until the insomnia effect begins.",
                                    "type": "number",
                                    "default": 3.0
                                }
                            }
                        },
                        "minecraft:instant_despawn": {
                            "title": "COMPONENTS",
                            "description": "Despawns the Actor immediately.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "remove_child_entities": {
                                    "description": "If true, all entities linked to this entity in a child relationship (eg. leashed) will also be despawned.",
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        },
                        "minecraft:interact": {
                            "title": "COMPONENTS",
                            "description": "Defines interactions with this entity.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "add_items": {
                                    "description": "Loot table with items to add to the player's inventory upon successful interaction.",
                                    "type": "object",
                                    "default": {},
                                    "properties": {
                                        "table": {
                                            "description": "File path, relative to the Behavior Pack's path, to the loot table file.",
                                            "type": "string"
                                        }
                                    }
                                },
                                "cooldown": {
                                    "description": "Time in seconds before this entity can be interacted with again.",
                                    "type": "number",
                                    "default": 0
                                },
                                "cooldown_after_being_attacked": {
                                    "description": "Time in seconds before this entity can be interacted with after being attacked.",
                                    "type": "number",
                                    "default": 0
                                },
                                "hurt_item": {
                                    "description": "The amount of damage the item will take when used to interact with this entity. A value of 0 means the item won't lose durability.",
                                    "type": "integer",
                                    "default": 0
                                },
                                "interact_text": {
                                    "description": "Text to show when the player is able to interact in this way with this entity when playing with Touch-screen controls.",
                                    "type": "string"
                                },
                                "on_interact": {
                                    "description": "Event to fire when the interaction occurs.",
                                    "$ref": "#/definitions/events"
                                },
                                "particle_on_start": {
                                    "description": "Particle effect that will be triggered at the start of the interaction.",
                                    "type": "object",
                                    "default": {},
                                    "properties": {
                                        "particle_offset_towards_interactor": {
                                            "description": "Whether or not the particle will appear closer to who performed the interaction.",
                                            "type": "number"
                                        },
                                        "particle_type": {
                                            "description": "The type of particle that will be spawned.",
                                            "type": "string"
                                        },
                                        "particle_y_offset": {
                                            "description": "Will offset the particle this amount in the y direction.",
                                            "type": "number"
                                        }
                                    }
                                },
                                "play_sounds": {
                                    "description": "List of sounds to play when the interaction occurs.",
                                    "type": [
                                        "array",
                                        "string"
                                    ],
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "spawn_entities": {
                                    "description": "List of entities to spawn when the interaction occurs.",
                                    "type": [
                                        "array",
                                        "string"
                                    ],
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "spawn_items": {
                                    "description": "Loot table with items to drop on the ground upon successful interaction.",
                                    "type": "object",
                                    "default": {},
                                    "properties": {
                                        "table": {
                                            "description": "File path, relative to the Behavior Pack's path, to the loot table file.",
                                            "type": "string"
                                        }
                                    }
                                },
                                "swing": {
                                    "description": "If true, the player will do the 'swing' animation when interacting with this entity.",
                                    "type": "boolean",
                                    "default": false
                                },
                                "transform_to_item": {
                                    "description": "The item used will transform to this item upon successful interaction. Format: itemName:auxValue",
                                    "type": "string"
                                },
                                "use_item": {
                                    "description": "If true, the interaction will use an item.",
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        },
                        "minecraft:inventory": {
                            "title": "COMPONENTS",
                            "description": "Defines this entity's inventory properties.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "additional_slots_per_strength": {
                                    "description": "Number of slots that this entity can gain per extra strength",
                                    "type": "integer",
                                    "default": 0
                                },
                                "can_be_siphoned_from": {
                                    "description": "If true, the contents of this inventory can be removed by a hopper",
                                    "type": "boolean",
                                    "default": false
                                },
                                "container_type": {
                                    "description": "Type of container this entity has. Can be horse, minecart_chest, minecart_hopper, inventory, container or hopper",
                                    "enum": [
                                        "horse",
                                        "minecart_chest",
                                        "minecart_hopper",
                                        "inventory",
                                        "container",
                                        "hopper"
                                    ]
                                },
                                "inventory_size": {
                                    "description": "Number of slots the container has",
                                    "type": "integer",
                                    "default": 5
                                },
                                "private": {
                                    "description": "If true, the entity will not drop its inventory on death",
                                    "type": "boolean",
                                    "default": false
                                },
                                "restrict_to_owner": {
                                    "description": "If true, the entity's inventory can only be accessed by its owner or itself",
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        },
                        "minecraft:item_hopper": {
                            "title": "COMPONENTS",
                            "description": "Determines that this entity is an item hopper.",
                            "type": "object",
                            "default": {}
                        },
                        "minecraft:jump.dynamic": {
                            "title": "COMPONENTS",
                            "description": "Defines a dynamic type jump control that will change jump properties based on the speed modifier of the mob.",
                            "type": "object",
                            "default": {}
                        },
                        "minecraft:jump.static": {
                            "title": "COMPONENTS",
                            "description": "Gives the entity the ability to jump.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "jump_power": {
                                    "description": "The initial vertical velocity for the jump",
                                    "type": "number",
                                    "default": 0.42
                                }
                            }
                        },
                        "minecraft:leashable": {
                            "title": "COMPONENTS",
                            "description": "Allows this entity to be leashed and defines the conditions and events for this entity when is leashed.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "can_be_stolen": {
                                    "description": "If true, players can leash this entity even if it is already leashed to another mob.",
                                    "type": "boolean",
                                    "default": false
                                },
                                "hard_distance": {
                                    "description": "Distance in blocks at which the leash stiffens, restricting movement.",
                                    "type": "number",
                                    "default": 6
                                },
                                "max_distance": {
                                    "description": "Distance in blocks at which the leash breaks.",
                                    "type": "number",
                                    "default": 10
                                },
                                "on_leash": {
                                    "description": "Event to call when this entity is leashed.",
                                    "$ref": "#/definitions/events"
                                },
                                "on_unleash": {
                                    "description": "Event to call when this entity is unleashed.",
                                    "$ref": "#/definitions/events"
                                },
                                "soft_distance": {
                                    "description": "Distance in blocks at which the 'spring' effect starts acting to keep this entity close to the entity that leashed it.",
                                    "type": "number",
                                    "default": 4
                                }
                            }
                        },
                        "minecraft:lookat": {
                            "title": "COMPONENTS",
                            "description": "Defines the behavior when another entity looks at this entity.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "allow_invulnerable": {
                                    "description": "If true, invulnerable entities (e.g. Players in creative mode) are considered valid targets.",
                                    "type": "boolean",
                                    "default": false
                                },
                                "filters": {
                                    "description": "Defines the entities that can trigger this component.",
                                    "$ref": "#/definitions/filter"
                                },
                                "look_cooldown": {
                                    "description": "The range for the random amount of time during which the entity is 'cooling down' and won't get angered or look for a target.",
                                    "type": "array",
                                    "minItems": 2,
                                    "maxItems": 2,
                                    "default": [
                                        0,
                                        0
                                    ],
                                    "items": {
                                        "type": "integer"
                                    }
                                },
                                "look_event": {
                                    "description": "The event identifier to run when the entities specified in filters look at this entity.",
                                    "$ref": "#/definitions/events"
                                },
                                "search_radius": {
                                    "description": "Maximum distance this entity will look for another entity looking at it.",
                                    "type": "number",
                                    "default": 10
                                },
                                "set_target": {
                                    "description": "If true, this entity will set the attack target as the entity that looked at it.",
                                    "type": "boolean",
                                    "default": true
                                }
                            }
                        },
                        "minecraft:managed_wandering_trader": {
                            "title": "COMPONENTS",
                            "description": "This component is used to implement part of the Wandering Trader behavior",
                            "type": "object",
                            "default": {}
                        },
                        "minecraft:mob_effect": {
                            "title": "COMPONENTS",
                            "description": "A component that applies a mob effect to entities that get within range.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "effect_range": {
                                    "description": "How close a hostile entity must be to have the mob effect applied.",
                                    "type": "number",
                                    "default": 0.2
                                },
                                "effect_time": {
                                    "description": "How long the applied mob effect lasts in seconds.",
                                    "type": "integer",
                                    "default": 10
                                },
                                "entity_filter": {
                                    "description": "The set of entities that are valid to apply the mob effect to.",
                                    "$ref": "#/definitions/filter"
                                },
                                "mob_effect": {
                                    "description": "The mob effect that is applied to entities that enter this entities effect range.",
                                    "type": "string"
                                }
                            }
                        },
                        "minecraft:movement.amphibious": {
                            "title": "COMPONENTS",
                            "description": "This move control allows the mob to swim in water and walk on land.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "max_turn": {
                                    "description": "The maximum number in degrees the mob can turn per tick",
                                    "type": "number",
                                    "default": 30.0
                                }
                            }
                        },
                        "minecraft:movement.basic": {
                            "title": "COMPONENTS",
                            "description": "This component accents the movement of an entity.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "max_turn": {
                                    "description": "The maximum number in degrees the mob can turn per tick.",
                                    "type": "number",
                                    "default": 30.0
                                }
                            }
                        },
                        "minecraft:movement.fly": {
                            "title": "COMPONENTS",
                            "description": "This move control causes the mob to fly.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "max_turn": {
                                    "description": "The maximum number in degrees the mob can turn per tick.",
                                    "type": "number",
                                    "default": 30.0
                                }
                            }
                        },
                        "minecraft:movement.generic": {
                            "title": "COMPONENTS",
                            "description": "This move control allows a mob to fly, swim, climb, etc.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "max_turn": {
                                    "description": "The maximum number in degrees the mob can turn per tick.",
                                    "type": "number",
                                    "default": 30.0
                                }
                            }
                        },
                        "minecraft:movement.hover": {
                            "title": "COMPONENTS",
                            "description": "This move control causes the mob to hover.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "max_turn": {
                                    "description": "The maximum number in degrees the mob can turn per tick.",
                                    "type": "number",
                                    "default": 30.0
                                }
                            }
                        },
                        "minecraft:movement.jump": {
                            "title": "COMPONENTS",
                            "description": "Move control that causes the mob to jump as it moves with a specified delay between jumps.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "jump_delay": {
                                    "description": "Delay after landing when using the slime move control.",
                                    "type": "array",
                                    "minItems": 2,
                                    "maxItems": 2,
                                    "default": [
                                        0.0,
                                        0.0
                                    ],
                                    "items": {
                                        "type": "number",
                                        "default": 0.0
                                    }
                                },
                                "max_turn": {
                                    "description": "The maximum number in degrees the mob can turn per tick.",
                                    "type": "number",
                                    "default": 30.0
                                }
                            }
                        },
                        "minecraft:movement.skip": {
                            "title": "COMPONENTS",
                            "description": "This move control causes the mob to hop as it moves.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "max_turn": {
                                    "description": "The maximum number in degrees the mob can turn per tick.",
                                    "type": "number",
                                    "default": 30.0
                                }
                            }
                        },
                        "minecraft:movement.sway": {
                            "title": "COMPONENTS",
                            "description": "This move control causes the mob to sway side to side giving the impression it is swimming.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "max_turn": {
                                    "description": "The maximum number in degrees the mob can turn per tick.",
                                    "type": "number",
                                    "default": 30.0
                                },
                                "sway_amplitude": {
                                    "description": "Strength of the sway movement.",
                                    "type": "number",
                                    "default": 0.05
                                },
                                "sway_frequency": {
                                    "description": "Multiplier for the frequency of the sway movement.",
                                    "type": "number",
                                    "default": 0.5
                                }
                            }
                        },
                        "minecraft:nameable": {
                            "title": "COMPONENTS",
                            "description": "Allows this entity to be named (e.g. using a name tag).",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "allow_name_tag_renaming": {
                                    "description": "If true, this entity can be renamed with name tags",
                                    "type": "boolean",
                                    "default": true
                                },
                                "always_show": {
                                    "description": "If true, the name will always be shown",
                                    "type": "boolean",
                                    "default": false
                                },
                                "default_trigger": {
                                    "description": "Trigger to run when the entity gets named",
                                    "type": "string"
                                },
                                "name_actions": {
                                    "description": "Describes the special names for this entity and the events to call when the entity acquires those names",
                                    "type": "object",
                                    "default": {},
                                    "properties": {
                                        "name_filter": {
                                            "description": "List of special names that will cause the events defined in 'on_named' to fire",
                                            "type": [
                                                "array",
                                                "string"
                                            ],
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "on_named": {
                                            "description": "Event to be called when this entity acquires the name specified in 'name_filter'",
                                            "$ref": "#/definitions/events"
                                        }
                                    }
                                }
                            }
                        },
                        "minecraft:navigation.climb": {
                            "title": "COMPONENTS",
                            "description": "Allows this entity to generate paths that include vertical walls like the vanilla Spiders do.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "avoid_damage_blocks": {
                                    "description": "Tells the pathfinder to avoid blocks that cause damage when finding a path",
                                    "type": "boolean",
                                    "default": false
                                },
                                "avoid_portals": {
                                    "description": "Tells the pathfinder to avoid portals (like nether portals) when finding a path",
                                    "type": "boolean",
                                    "default": false
                                },
                                "avoid_sun": {
                                    "description": "Whether or not the pathfinder should avoid tiles that are exposed to the sun when creating paths",
                                    "type": "boolean",
                                    "default": false
                                },
                                "avoid_water": {
                                    "description": "Tells the pathfinder to avoid water when creating a path",
                                    "type": "boolean",
                                    "default": false
                                },
                                "blocks_to_avoid": {
                                    "description": "Tells the pathfinder which blocks to avoid when creating a path",
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "can_breach": {
                                    "description": "Tells the pathfinder whether or not it can jump out of water (like a dolphin)",
                                    "type": "boolean",
                                    "default": false
                                },
                                "can_break_doors": {
                                    "description": "Tells the pathfinder that it can path through a closed door and break it",
                                    "type": "boolean",
                                    "default": false
                                },
                                "can_jump": {
                                    "description": "Tells the pathfinder whether or not it can jump up blocks",
                                    "type": "boolean",
                                    "default": true
                                },
                                "can_open_doors": {
                                    "description": "Tells the pathfinder that it can path through a closed door assuming the AI will open the door",
                                    "type": "boolean",
                                    "default": false
                                },
                                "can_open_iron_doors": {
                                    "description": "Tells the pathfinder that it can path through a closed iron door assuming the AI will open the door",
                                    "type": "boolean",
                                    "default": false
                                },
                                "can_pass_doors": {
                                    "description": "Whether a path can be created through a door",
                                    "type": "boolean",
                                    "default": true
                                },
                                "can_path_from_air": {
                                    "description": "Tells the pathfinder that it can start pathing when in the air",
                                    "type": "boolean",
                                    "default": false
                                },
                                "can_path_over_lava": {
                                    "description": "Tells the pathfinder whether or not it can travel on the surface of the lava",
                                    "type": "boolean",
                                    "default": false
                                },
                                "can_path_over_water": {
                                    "description": "Tells the pathfinder whether or not it can travel on the surface of the water",
                                    "type": "boolean",
                                    "default": false
                                },
                                "can_sink": {
                                    "description": "Tells the pathfinder whether or not it will be pulled down by gravity while in water",
                                    "type": "boolean",
                                    "default": true
                                },
                                "can_swim": {
                                    "description": "Tells the pathfinder whether or not it can path anywhere through water and plays swimming animation along that path",
                                    "type": "boolean",
                                    "default": false
                                },
                                "can_walk": {
                                    "description": "Tells the pathfinder whether or not it can walk on the ground outside water",
                                    "type": "boolean",
                                    "default": true
                                },
                                "can_walk_in_lava": {
                                    "description": "Tells the pathfinder whether or not it can travel in lava like walking on ground",
                                    "type": "boolean",
                                    "default": false
                                },
                                "is_amphibious": {
                                    "description": "Tells the pathfinder whether or not it can walk on the ground underwater",
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        },
                        "minecraft:navigation.float": {
                            "title": "COMPONENTS",
                            "description": "Allows this entity to generate paths by flying around the air like the regular Ghast.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "avoid_damage_blocks": {
                                    "description": "Tells the pathfinder to avoid blocks that cause damage when finding a path",
                                    "type": "boolean",
                                    "default": false
                                },
                                "avoid_portals": {
                                    "description": "Tells the pathfinder to avoid portals (like nether portals) when finding a path",
                                    "type": "boolean",
                                    "default": false
                                },
                                "avoid_sun": {
                                    "description": "Whether or not the pathfinder should avoid tiles that are exposed to the sun when creating paths",
                                    "type": "boolean",
                                    "default": false
                                },
                                "avoid_water": {
                                    "description": "Tells the pathfinder to avoid water when creating a path",
                                    "type": "boolean",
                                    "default": false
                                },
                                "blocks_to_avoid": {
                                    "description": "Tells the pathfinder which blocks to avoid when creating a path",
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "can_breach": {
                                    "description": "Tells the pathfinder whether or not it can jump out of water (like a dolphin)",
                                    "type": "boolean",
                                    "default": false
                                },
                                "can_break_doors": {
                                    "description": "Tells the pathfinder that it can path through a closed door and break it",
                                    "type": "boolean",
                                    "default": false
                                },
                                "can_jump": {
                                    "description": "Tells the pathfinder whether or not it can jump up blocks",
                                    "type": "boolean",
                                    "default": true
                                },
                                "can_open_doors": {
                                    "description": "Tells the pathfinder that it can path through a closed door assuming the AI will open the door",
                                    "type": "boolean",
                                    "default": false
                                },
                                "can_open_iron_doors": {
                                    "description": "Tells the pathfinder that it can path through a closed iron door assuming the AI will open the door",
                                    "type": "boolean",
                                    "default": false
                                },
                                "can_pass_doors": {
                                    "description": "Whether a path can be created through a door",
                                    "type": "boolean",
                                    "default": true
                                },
                                "can_path_from_air": {
                                    "description": "Tells the pathfinder that it can start pathing when in the air",
                                    "type": "boolean",
                                    "default": false
                                },
                                "can_path_over_lava": {
                                    "description": "Tells the pathfinder whether or not it can travel on the surface of the lava",
                                    "type": "boolean",
                                    "default": false
                                },
                                "can_path_over_water": {
                                    "description": "Tells the pathfinder whether or not it can travel on the surface of the water",
                                    "type": "boolean",
                                    "default": false
                                },
                                "can_sink": {
                                    "description": "Tells the pathfinder whether or not it will be pulled down by gravity while in water",
                                    "type": "boolean",
                                    "default": true
                                },
                                "can_swim": {
                                    "description": "Tells the pathfinder whether or not it can path anywhere through water and plays swimming animation along that path",
                                    "type": "boolean",
                                    "default": false
                                },
                                "can_walk": {
                                    "description": "Tells the pathfinder whether or not it can walk on the ground outside water",
                                    "type": "boolean",
                                    "default": true
                                },
                                "can_walk_in_lava": {
                                    "description": "Tells the pathfinder whether or not it can travel in lava like walking on ground",
                                    "type": "boolean",
                                    "default": false
                                },
                                "is_amphibious": {
                                    "description": "Tells the pathfinder whether or not it can walk on the ground underwater",
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        },
                        "minecraft:navigation.fly": {
                            "title": "COMPONENTS",
                            "description": "Allows this entity to generate paths in the air like the vanilla Parrots do.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "avoid_damage_blocks": {
                                    "description": "Tells the pathfinder to avoid blocks that cause damage when finding a path",
                                    "type": "boolean",
                                    "default": false
                                },
                                "avoid_portals": {
                                    "description": "Tells the pathfinder to avoid portals (like nether portals) when finding a path",
                                    "type": "boolean",
                                    "default": false
                                },
                                "avoid_sun": {
                                    "description": "Whether or not the pathfinder should avoid tiles that are exposed to the sun when creating paths",
                                    "type": "boolean",
                                    "default": false
                                },
                                "avoid_water": {
                                    "description": "Tells the pathfinder to avoid water when creating a path",
                                    "type": "boolean",
                                    "default": false
                                },
                                "blocks_to_avoid": {
                                    "description": "Tells the pathfinder which blocks to avoid when creating a path",
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "can_breach": {
                                    "description": "Tells the pathfinder whether or not it can jump out of water (like a dolphin)",
                                    "type": "boolean",
                                    "default": false
                                },
                                "can_break_doors": {
                                    "description": "Tells the pathfinder that it can path through a closed door and break it",
                                    "type": "boolean",
                                    "default": false
                                },
                                "can_jump": {
                                    "description": "Tells the pathfinder whether or not it can jump up blocks",
                                    "type": "boolean",
                                    "default": true
                                },
                                "can_open_doors": {
                                    "description": "Tells the pathfinder that it can path through a closed door assuming the AI will open the door",
                                    "type": "boolean",
                                    "default": false
                                },
                                "can_open_iron_doors": {
                                    "description": "Tells the pathfinder that it can path through a closed iron door assuming the AI will open the door",
                                    "type": "boolean",
                                    "default": false
                                },
                                "can_pass_doors": {
                                    "description": "Whether a path can be created through a door",
                                    "type": "boolean",
                                    "default": true
                                },
                                "can_path_from_air": {
                                    "description": "Tells the pathfinder that it can start pathing when in the air",
                                    "type": "boolean",
                                    "default": false
                                },
                                "can_path_over_lava": {
                                    "description": "Tells the pathfinder whether or not it can travel on the surface of the lava",
                                    "type": "boolean",
                                    "default": false
                                },
                                "can_path_over_water": {
                                    "description": "Tells the pathfinder whether or not it can travel on the surface of the water",
                                    "type": "boolean",
                                    "default": false
                                },
                                "can_sink": {
                                    "description": "Tells the pathfinder whether or not it will be pulled down by gravity while in water",
                                    "type": "boolean",
                                    "default": true
                                },
                                "can_swim": {
                                    "description": "Tells the pathfinder whether or not it can path anywhere through water and plays swimming animation along that path",
                                    "type": "boolean",
                                    "default": false
                                },
                                "can_walk": {
                                    "description": "Tells the pathfinder whether or not it can walk on the ground outside water",
                                    "type": "boolean",
                                    "default": true
                                },
                                "can_walk_in_lava": {
                                    "description": "Tells the pathfinder whether or not it can travel in lava like walking on ground",
                                    "type": "boolean",
                                    "default": false
                                },
                                "is_amphibious": {
                                    "description": "Tells the pathfinder whether or not it can walk on the ground underwater",
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        },
                        "minecraft:navigation.generic": {
                            "title": "COMPONENTS",
                            "description": "Allows this entity to generate paths by walking, swimming, flying and/or climbing around and jumping up and down a block.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "avoid_damage_blocks": {
                                    "description": "Tells the pathfinder to avoid blocks that cause damage when finding a path",
                                    "type": "boolean",
                                    "default": false
                                },
                                "avoid_portals": {
                                    "description": "Tells the pathfinder to avoid portals (like nether portals) when finding a path",
                                    "type": "boolean",
                                    "default": false
                                },
                                "avoid_sun": {
                                    "description": "Whether or not the pathfinder should avoid tiles that are exposed to the sun when creating paths",
                                    "type": "boolean",
                                    "default": false
                                },
                                "avoid_water": {
                                    "description": "Tells the pathfinder to avoid water when creating a path",
                                    "type": "boolean",
                                    "default": false
                                },
                                "blocks_to_avoid": {
                                    "description": "Tells the pathfinder which blocks to avoid when creating a path",
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "can_breach": {
                                    "description": "Tells the pathfinder whether or not it can jump out of water (like a dolphin)",
                                    "type": "boolean",
                                    "default": false
                                },
                                "can_break_doors": {
                                    "description": "Tells the pathfinder that it can path through a closed door and break it",
                                    "type": "boolean",
                                    "default": false
                                },
                                "can_jump": {
                                    "description": "Tells the pathfinder whether or not it can jump up blocks",
                                    "type": "boolean",
                                    "default": true
                                },
                                "can_open_doors": {
                                    "description": "Tells the pathfinder that it can path through a closed door assuming the AI will open the door",
                                    "type": "boolean",
                                    "default": false
                                },
                                "can_open_iron_doors": {
                                    "description": "Tells the pathfinder that it can path through a closed iron door assuming the AI will open the door",
                                    "type": "boolean",
                                    "default": false
                                },
                                "can_pass_doors": {
                                    "description": "Whether a path can be created through a door",
                                    "type": "boolean",
                                    "default": true
                                },
                                "can_path_from_air": {
                                    "description": "Tells the pathfinder that it can start pathing when in the air",
                                    "type": "boolean",
                                    "default": false
                                },
                                "can_path_over_lava": {
                                    "description": "Tells the pathfinder whether or not it can travel on the surface of the lava",
                                    "type": "boolean",
                                    "default": false
                                },
                                "can_path_over_water": {
                                    "description": "Tells the pathfinder whether or not it can travel on the surface of the water",
                                    "type": "boolean",
                                    "default": false
                                },
                                "can_sink": {
                                    "description": "Tells the pathfinder whether or not it will be pulled down by gravity while in water",
                                    "type": "boolean",
                                    "default": true
                                },
                                "can_swim": {
                                    "description": "Tells the pathfinder whether or not it can path anywhere through water and plays swimming animation along that path",
                                    "type": "boolean",
                                    "default": false
                                },
                                "can_walk": {
                                    "description": "Tells the pathfinder whether or not it can walk on the ground outside water",
                                    "type": "boolean",
                                    "default": true
                                },
                                "can_walk_in_lava": {
                                    "description": "Tells the pathfinder whether or not it can travel in lava like walking on ground",
                                    "type": "boolean",
                                    "default": false
                                },
                                "is_amphibious": {
                                    "description": "Tells the pathfinder whether or not it can walk on the ground underwater",
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        },
                        "minecraft:navigation.hover": {
                            "title": "COMPONENTS",
                            "description": "Allows this entity to generate paths in the air like the vanilla Bees do. Keeps them from falling out of the skies and doing predictive movement.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "avoid_damage_blocks": {
                                    "description": "Tells the pathfinder to avoid blocks that cause damage when finding a path",
                                    "type": "boolean",
                                    "default": false
                                },
                                "avoid_portals": {
                                    "description": "Tells the pathfinder to avoid portals (like nether portals) when finding a path",
                                    "type": "boolean",
                                    "default": false
                                },
                                "avoid_sun": {
                                    "description": "Whether or not the pathfinder should avoid tiles that are exposed to the sun when creating paths",
                                    "type": "boolean",
                                    "default": false
                                },
                                "avoid_water": {
                                    "description": "Tells the pathfinder to avoid water when creating a path",
                                    "type": "boolean",
                                    "default": false
                                },
                                "blocks_to_avoid": {
                                    "description": "Tells the pathfinder which blocks to avoid when creating a path",
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "can_breach": {
                                    "description": "Tells the pathfinder whether or not it can jump out of water (like a dolphin)",
                                    "type": "boolean",
                                    "default": false
                                },
                                "can_break_doors": {
                                    "description": "Tells the pathfinder that it can path through a closed door and break it",
                                    "type": "boolean",
                                    "default": false
                                },
                                "can_jump": {
                                    "description": "Tells the pathfinder whether or not it can jump up blocks",
                                    "type": "boolean",
                                    "default": true
                                },
                                "can_open_doors": {
                                    "description": "Tells the pathfinder that it can path through a closed door assuming the AI will open the door",
                                    "type": "boolean",
                                    "default": false
                                },
                                "can_open_iron_doors": {
                                    "description": "Tells the pathfinder that it can path through a closed iron door assuming the AI will open the door",
                                    "type": "boolean",
                                    "default": false
                                },
                                "can_pass_doors": {
                                    "description": "Whether a path can be created through a door",
                                    "type": "boolean",
                                    "default": true
                                },
                                "can_path_from_air": {
                                    "description": "Tells the pathfinder that it can start pathing when in the air",
                                    "type": "boolean",
                                    "default": false
                                },
                                "can_path_over_lava": {
                                    "description": "Tells the pathfinder whether or not it can travel on the surface of the lava",
                                    "type": "boolean",
                                    "default": false
                                },
                                "can_path_over_water": {
                                    "description": "Tells the pathfinder whether or not it can travel on the surface of the water",
                                    "type": "boolean",
                                    "default": false
                                },
                                "can_sink": {
                                    "description": "Tells the pathfinder whether or not it will be pulled down by gravity while in water",
                                    "type": "boolean",
                                    "default": true
                                },
                                "can_swim": {
                                    "description": "Tells the pathfinder whether or not it can path anywhere through water and plays swimming animation along that path",
                                    "type": "boolean",
                                    "default": false
                                },
                                "can_walk": {
                                    "description": "Tells the pathfinder whether or not it can walk on the ground outside water",
                                    "type": "boolean",
                                    "default": true
                                },
                                "can_walk_in_lava": {
                                    "description": "Tells the pathfinder whether or not it can travel in lava like walking on ground",
                                    "type": "boolean",
                                    "default": false
                                },
                                "is_amphibious": {
                                    "description": "Tells the pathfinder whether or not it can walk on the ground underwater",
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        },
                        "minecraft:navigation.swim": {
                            "title": "COMPONENTS",
                            "description": "Allows this entity to generate paths that include water.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "avoid_damage_blocks": {
                                    "description": "Tells the pathfinder to avoid blocks that cause damage when finding a path",
                                    "type": "boolean",
                                    "default": false
                                },
                                "avoid_portals": {
                                    "description": "Tells the pathfinder to avoid portals (like nether portals) when finding a path",
                                    "type": "boolean",
                                    "default": false
                                },
                                "avoid_sun": {
                                    "description": "Whether or not the pathfinder should avoid tiles that are exposed to the sun when creating paths",
                                    "type": "boolean",
                                    "default": false
                                },
                                "avoid_water": {
                                    "description": "Tells the pathfinder to avoid water when creating a path",
                                    "type": "boolean",
                                    "default": false
                                },
                                "blocks_to_avoid": {
                                    "description": "Tells the pathfinder which blocks to avoid when creating a path",
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "can_breach": {
                                    "description": "Tells the pathfinder whether or not it can jump out of water (like a dolphin)",
                                    "type": "boolean",
                                    "default": false
                                },
                                "can_break_doors": {
                                    "description": "Tells the pathfinder that it can path through a closed door and break it",
                                    "type": "boolean",
                                    "default": false
                                },
                                "can_jump": {
                                    "description": "Tells the pathfinder whether or not it can jump up blocks",
                                    "type": "boolean",
                                    "default": true
                                },
                                "can_open_doors": {
                                    "description": "Tells the pathfinder that it can path through a closed door assuming the AI will open the door",
                                    "type": "boolean",
                                    "default": false
                                },
                                "can_open_iron_doors": {
                                    "description": "Tells the pathfinder that it can path through a closed iron door assuming the AI will open the door",
                                    "type": "boolean",
                                    "default": false
                                },
                                "can_pass_doors": {
                                    "description": "Whether a path can be created through a door",
                                    "type": "boolean",
                                    "default": true
                                },
                                "can_path_from_air": {
                                    "description": "Tells the pathfinder that it can start pathing when in the air",
                                    "type": "boolean",
                                    "default": false
                                },
                                "can_path_over_lava": {
                                    "description": "Tells the pathfinder whether or not it can travel on the surface of the lava",
                                    "type": "boolean",
                                    "default": false
                                },
                                "can_path_over_water": {
                                    "description": "Tells the pathfinder whether or not it can travel on the surface of the water",
                                    "type": "boolean",
                                    "default": false
                                },
                                "can_sink": {
                                    "description": "Tells the pathfinder whether or not it will be pulled down by gravity while in water",
                                    "type": "boolean",
                                    "default": true
                                },
                                "can_swim": {
                                    "description": "Tells the pathfinder whether or not it can path anywhere through water and plays swimming animation along that path",
                                    "type": "boolean",
                                    "default": false
                                },
                                "can_walk": {
                                    "description": "Tells the pathfinder whether or not it can walk on the ground outside water",
                                    "type": "boolean",
                                    "default": true
                                },
                                "can_walk_in_lava": {
                                    "description": "Tells the pathfinder whether or not it can travel in lava like walking on ground",
                                    "type": "boolean",
                                    "default": false
                                },
                                "is_amphibious": {
                                    "description": "Tells the pathfinder whether or not it can walk on the ground underwater",
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        },
                        "minecraft:navigation.walk": {
                            "title": "COMPONENTS",
                            "description": "Allows this entity to generate paths by walking around and jumping up and down a block like regular mobs.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "avoid_damage_blocks": {
                                    "description": "Tells the pathfinder to avoid blocks that cause damage when finding a path",
                                    "type": "boolean",
                                    "default": false
                                },
                                "avoid_portals": {
                                    "description": "Tells the pathfinder to avoid portals (like nether portals) when finding a path",
                                    "type": "boolean",
                                    "default": false
                                },
                                "avoid_sun": {
                                    "description": "Whether or not the pathfinder should avoid tiles that are exposed to the sun when creating paths",
                                    "type": "boolean",
                                    "default": false
                                },
                                "avoid_water": {
                                    "description": "Tells the pathfinder to avoid water when creating a path",
                                    "type": "boolean",
                                    "default": false
                                },
                                "blocks_to_avoid": {
                                    "description": "Tells the pathfinder which blocks to avoid when creating a path",
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "can_breach": {
                                    "description": "Tells the pathfinder whether or not it can jump out of water (like a dolphin)",
                                    "type": "boolean",
                                    "default": false
                                },
                                "can_break_doors": {
                                    "description": "Tells the pathfinder that it can path through a closed door and break it",
                                    "type": "boolean",
                                    "default": false
                                },
                                "can_jump": {
                                    "description": "Tells the pathfinder whether or not it can jump up blocks",
                                    "type": "boolean",
                                    "default": true
                                },
                                "can_open_doors": {
                                    "description": "Tells the pathfinder that it can path through a closed door assuming the AI will open the door",
                                    "type": "boolean",
                                    "default": false
                                },
                                "can_open_iron_doors": {
                                    "description": "Tells the pathfinder that it can path through a closed iron door assuming the AI will open the door",
                                    "type": "boolean",
                                    "default": false
                                },
                                "can_pass_doors": {
                                    "description": "Whether a path can be created through a door",
                                    "type": "boolean",
                                    "default": true
                                },
                                "can_path_from_air": {
                                    "description": "Tells the pathfinder that it can start pathing when in the air",
                                    "type": "boolean",
                                    "default": false
                                },
                                "can_path_over_lava": {
                                    "description": "Tells the pathfinder whether or not it can travel on the surface of the lava",
                                    "type": "boolean",
                                    "default": false
                                },
                                "can_path_over_water": {
                                    "description": "Tells the pathfinder whether or not it can travel on the surface of the water",
                                    "type": "boolean",
                                    "default": false
                                },
                                "can_sink": {
                                    "description": "Tells the pathfinder whether or not it will be pulled down by gravity while in water",
                                    "type": "boolean",
                                    "default": true
                                },
                                "can_swim": {
                                    "description": "Tells the pathfinder whether or not it can path anywhere through water and plays swimming animation along that path",
                                    "type": "boolean",
                                    "default": false
                                },
                                "can_walk": {
                                    "description": "Tells the pathfinder whether or not it can walk on the ground outside water",
                                    "type": "boolean",
                                    "default": true
                                },
                                "can_walk_in_lava": {
                                    "description": "Tells the pathfinder whether or not it can travel in lava like walking on ground",
                                    "type": "boolean",
                                    "default": false
                                },
                                "is_amphibious": {
                                    "description": "Tells the pathfinder whether or not it can walk on the ground underwater",
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        },
                        "minecraft:out_of_control": {
                            "title": "COMPONENTS",
                            "description": "Defines the entity's 'out of control' state.",
                            "type": "object",
                            "default": {}
                        },
                        "minecraft:peek": {
                            "title": "COMPONENTS",
                            "description": "Defines the entity's 'peek' behavior, defining the events that should be called during it.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "on_close": {
                                    "description": "Event to call when the entity is done peeking.",
                                    "$ref": "#/definitions/events"
                                },
                                "on_open": {
                                    "description": "Event to call when the entity starts peeking.",
                                    "$ref": "#/definitions/events"
                                },
                                "on_target_open": {
                                    "description": "Event to call when the entity's target entity starts peeking.",
                                    "$ref": "#/definitions/events"
                                }
                            }
                        },
                        "minecraft:persistent": {
                            "title": "COMPONENTS",
                            "description": "Defines whether an entity should be persistent in the game world.",
                            "type": "object",
                            "default": {}
                        },
                        "minecraft:physics": {
                            "title": "COMPONENTS",
                            "description": "Defines physics properties of an actor, including if it is affected by gravity or if it collides with objects.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "has_collision": {
                                    "description": "Whether or not the object collides with things.",
                                    "type": "boolean",
                                    "default": true
                                },
                                "has_gravity": {
                                    "description": "Whether or not the entity is affected by gravity.",
                                    "type": "boolean",
                                    "default": true
                                }
                            }
                        },
                        "minecraft:preferred_path": {
                            "title": "COMPONENTS",
                            "description": "Specifies costing information for mobs that prefer to walk on preferred paths.0",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "default_block_cost": {
                                    "description": "Cost for non-preferred blocks",
                                    "type": "number",
                                    "default": 0
                                },
                                "jump_cost": {
                                    "description": "Added cost for jumping up a node",
                                    "type": "integer",
                                    "default": 0
                                },
                                "max_fall_blocks": {
                                    "description": "Distance mob can fall without taking damage",
                                    "type": "integer",
                                    "default": 3
                                },
                                "preferred_path_blocks": {
                                    "description": "A list of blocks with their associated cost",
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "minecraft:projectile": {
                            "title": "COMPONENTS",
                            "description": "Allows the entity to be a thrown entity.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "angle_offset": {
                                    "description": "Determines the angle at which the projectile is thrown",
                                    "type": "number",
                                    "default": 0
                                },
                                "catch_fire": {
                                    "description": "If true, the entity hit will be set on fire",
                                    "type": "boolean",
                                    "default": false
                                },
                                "crit_particle_on_hurt": {
                                    "description": "If true, the projectile will produce additional particles when a critical hit happens",
                                    "type": "boolean",
                                    "default": false
                                },
                                "destroy_on_hurt": {
                                    "description": "If true, this entity will be destroyed when hit",
                                    "type": "boolean",
                                    "default": false
                                },
                                "filter": {
                                    "description": "Entity Definitions defined here can't be hurt by the projectile",
                                    "type": "string"
                                },
                                "fire_affected_by_griefing": {
                                    "description": "If true, whether the projectile causes fire is affected by the mob griefing game rule",
                                    "type": "boolean",
                                    "default": false
                                },
                                "gravity": {
                                    "description": "The gravity applied to this entity when thrown. The higher the value, the faster the entity falls",
                                    "type": "number",
                                    "default": 0.05
                                },
                                "hit_sound": {
                                    "description": "The sound that plays when the projectile hits something",
                                    "type": "string"
                                },
                                "homing": {
                                    "description": "If true, the projectile homes in to the nearest entity",
                                    "type": "boolean",
                                    "default": false
                                },
                                "inertia": {
                                    "description": "The fraction of the projectile's speed maintained every frame while traveling in air",
                                    "type": "number",
                                    "default": 0.99
                                },
                                "is_dangerous": {
                                    "description": "If true, the projectile will be treated as dangerous to the players",
                                    "type": "boolean",
                                    "default": false
                                },
                                "knockback": {
                                    "description": "If true, the projectile will knock back the entity it hits",
                                    "type": "boolean",
                                    "default": true
                                },
                                "lightning": {
                                    "description": "If true, the entity hit will be struck by lightning",
                                    "type": "boolean",
                                    "default": false
                                },
                                "liquid_inertia": {
                                    "description": "The fraction of the projectile's speed maintained every frame while traveling in water",
                                    "type": "number",
                                    "default": 0.6
                                },
                                "multiple_targets": {
                                    "description": "If true, the projectile can hit multiple entities per flight",
                                    "type": "boolean",
                                    "default": true
                                },
                                "offset": {
                                    "description": "The offset from the entity's anchor where the projectile will spawn",
                                    "type": "array",
                                    "minItems": 3,
                                    "maxItems": 3,
                                    "items": {
                                        "type": "number",
                                        "default": 0.0
                                    }
                                },
                                "on_fire_time": {
                                    "description": "Time in seconds that the entity hit will be on fire for",
                                    "type": "number",
                                    "default": 5
                                },
                                "particle": {
                                    "description": "Particle to use upon collision",
                                    "type": "string",
                                    "default": "ironcrack"
                                },
                                "potion_effect": {
                                    "description": "Defines the effect the arrow will apply to the entity it hits",
                                    "type": "integer",
                                    "default": -1
                                },
                                "power": {
                                    "description": "Determines the velocity of the projectile",
                                    "type": "number",
                                    "default": 1.3
                                },
                                "reflect_on_hurt": {
                                    "description": "If true, this entity will be reflected back when hit",
                                    "type": "boolean",
                                    "default": false
                                },
                                "semi_random_diff_damage": {
                                    "description": "If true, damage will be randomized based on damage and speed",
                                    "type": "boolean",
                                    "default": false
                                },
                                "shoot_sound": {
                                    "description": "The sound that plays when the projectile is shot",
                                    "type": "string"
                                },
                                "shoot_target": {
                                    "description": "If true, the projectile will be shot towards the target of the entity firing it",
                                    "type": "boolean",
                                    "default": true
                                },
                                "should_bounce": {
                                    "description": "If true, the projectile will bounce upon hit",
                                    "type": "boolean",
                                    "default": false
                                },
                                "splash_potion": {
                                    "description": "If true, the projectile will be treated like a splash potion",
                                    "type": "boolean",
                                    "default": false
                                },
                                "splash_range": {
                                    "description": "Radius in blocks of the 'splash' effect",
                                    "type": "number",
                                    "default": 4
                                },
                                "uncertainty_base": {
                                    "description": "The base accuracy. Accuracy is determined by the formula uncertaintyBase - difficultyLevel * uncertaintyMultiplier",
                                    "type": "number",
                                    "default": 0
                                },
                                "uncertainty_multiplier": {
                                    "description": "Determines how much difficulty affects accuracy. Accuracy is determined by the formula uncertaintyBase - difficultyLevel * uncertaintyMultiplier",
                                    "type": "number",
                                    "default": 0
                                }
                            }
                        },
                        "minecraft:pushable": {
                            "title": "COMPONENTS",
                            "description": "Defines what can push an entity between other entities and pistons.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "is_pushable": {
                                    "description": "Whether the entity can be pushed by other entities.",
                                    "type": "boolean",
                                    "default": true
                                },
                                "is_pushable_by_piston": {
                                    "description": "Whether the entity can be pushed by pistons safely.",
                                    "type": "boolean",
                                    "default": true
                                }
                            }
                        },
                        "minecraft:raid_trigger": {
                            "title": "COMPONENTS",
                            "description": "Attempts to trigger a raid at the entity's location.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "triggered_event": {
                                    "description": "Event to run we attempt to trigger a raid on the village.",
                                    "$ref": "#/definitions/events"
                                }
                            }
                        },
                        "minecraft:rail_movement": {
                            "title": "COMPONENTS",
                            "description": "Defines the entity's movement on the rails. An entity with this component is only allowed to move on the rail.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "max_speed": {
                                    "description": "Maximum speed that this entity will move at when on the rail.",
                                    "type": "number",
                                    "default": 0.4
                                }
                            }
                        },
                        "minecraft:rail_sensor": {
                            "title": "COMPONENTS",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "check_block_types": {
                                    "description": "If true, on tick this entity will trigger its on_deactivate behavior",
                                    "type": "boolean",
                                    "default": false
                                },
                                "eject_on_activate": {
                                    "description": "If true, this entity will eject all of its riders when it passes over an activated rail",
                                    "type": "boolean",
                                    "default": true
                                },
                                "eject_on_deactivate": {
                                    "description": "If true, this entity will eject all of its riders when it passes over a deactivated rail",
                                    "type": "boolean",
                                    "default": false
                                },
                                "on_activate": {
                                    "description": "Event to call when the rail is activated",
                                    "$ref": "#/definitions/events"
                                },
                                "on_deactivate": {
                                    "description": "Event to call when the rail is deactivated",
                                    "$ref": "#/definitions/events"
                                },
                                "tick_command_block_on_activate": {
                                    "description": "If true, command blocks will start ticking when passing over an activated rail",
                                    "type": "boolean",
                                    "default": true
                                },
                                "tick_command_block_on_deactivate": {
                                    "description": "If false, command blocks will stop ticking when passing over a deactivated rail",
                                    "type": "boolean",
                                    "default": true
                                }
                            }
                        },
                        "minecraft:ravager_blocked": {
                            "title": "COMPONENTS",
                            "description": "Defines the ravager's response to their melee attack being blocked.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "knockback_strength": {
                                    "description": "The strength with which blocking entities should be knocked back",
                                    "type": "number",
                                    "default": 3.0
                                },
                                "reaction_choices": {
                                    "description": "A list of weighted responses to the melee attack being blocked",
                                    "type": "array",
                                    "default": []
                                }
                            }
                        },
                        "minecraft:rideable": {
                            "title": "COMPONENTS",
                            "description": "Determines whether this entity can be ridden. Allows specifying the different seat positions and quantity.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "controlling_seat": {
                                    "description": "The seat that designates the driver of the entity. This is only observed by the horse/boat styles of riding; minecarts/entities with \"minecraft:controlled_by_player\" give control to any player in any seat.",
                                    "type": "integer",
                                    "default": 0
                                },
                                "crouching_skip_interact": {
                                    "description": "If true, this entity can't be interacted with if the entity interacting with it is crouching",
                                    "type": "boolean",
                                    "default": true
                                },
                                "family_types": {
                                    "description": "List of entities that can ride this entity",
                                    "type": "array",
                                    "default": [],
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "interact_text": {
                                    "description": "The text to display when the player can interact with the entity when playing with Touch-screen controls",
                                    "type": "string"
                                },
                                "priority": {
                                    "description": "This field may exist in old data but isn't used by minecraft:rideable.",
                                    "type": "integer",
                                    "default": 0
                                },
                                "pull_in_entities": {
                                    "description": "If true, this entity will pull in entities that are in the correct family_types into any available seats",
                                    "type": "boolean",
                                    "default": false
                                },
                                "rider_can_interact": {
                                    "description": "If true, this entity will be picked when looked at by the rider",
                                    "type": "boolean",
                                    "default": false
                                },
                                "seat_count": {
                                    "description": "The number of entities that can ride this entity at the same time",
                                    "type": "integer",
                                    "default": 1
                                },
                                "seats": {
                                    "description": "The list of positions and number of riders for each position for entities riding this entity",
                                    "type": ["array","object"],
                                    "default": [],
                                    "items": {
                                        "$ref": "#/properties/minecraft:entity/properties/components/properties/minecraft:rideable/properties/seats"
                                    },
                                    "properties": {
                                        "lock_rider_rotation": {
                                            "description": "Angle in degrees that a rider is allowed to rotate while riding this entity. Omit this property for no limit",
                                            "type": "number",
                                            "default": 181
                                        },
                                        "max_rider_count": {
                                            "description": "Defines the maximum number of riders that can be riding this entity for this seat to be valid",
                                            "type": "integer",
                                            "default": 1
                                        },
                                        "min_rider_count": {
                                            "description": "Defines the minimum number of riders that need to be riding this entity before this seat can be used",
                                            "type": "integer",
                                            "default": 0
                                        },
                                        "position": {
                                            "description": "Position of this seat relative to this entity's position",
                                            "type": "array",
                                            "minItems": 3,
                                            "maxItems": 3,
                                            "default": [
                                                0,
                                                0,
                                                0
                                            ],
                                            "items": {
                                                "type": "number"
                                            }
                                        },
                                        "rotate_rider_by": {
                                            "description": "Offset to rotate riders by",
                                            "type": [
                                                "string",
                                                "number"
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "minecraft:scale_by_age": {
                            "title": "COMPONENTS",
                            "description": "Defines the entity's size interpolation based on the entity's age.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "end_scale": {
                                    "description": "Ending scale of the entity when it's fully grown.",
                                    "type": "number",
                                    "default": 1
                                },
                                "start_scale": {
                                    "description": "Initial scale of the newborn entity.",
                                    "type": "number",
                                    "default": 1
                                }
                            }
                        },
                        "minecraft:scheduler": {
                            "title": "COMPONENTS",
                            "description": "Fires off scheduled mob events at time of day events.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "scheduled_events": {
                                    "description": "The list of triggers that fire when the conditions match the given filter criteria. If any filter criteria overlap the first defined event will be picked.",
                                    "type": "array",
                                    "default": [],
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "minecraft:shareables": {
                            "title": "COMPONENTS",
                            "description": "Defines a list of items the mob wants to share or pick up. Each item must have the following parameters:",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "all_items": {
                                    "description": "A bucket for all other items in the game. Note this category is always least priority items.",
                                    "type": "boolean",
                                    "default": false
                                },
                                "all_items_max_amount": {
                                    "description": "Maximum number of this item the mob will hold.",
                                    "type": "integer",
                                    "default": -1
                                },
                                "all_items_surplus_amount": {
                                    "description": "Number of this item considered extra that the entity wants to share.",
                                    "type": "integer",
                                    "default": -1
                                },
                                "all_items_want_amount": {
                                    "description": "Number of this item this entity wants to share.",
                                    "type": "integer",
                                    "default": -1
                                },
                                "items": {
                                    "description": "List of items that the entity wants to share.",
                                    "type": "array",
                                    "default": [],
                                    "items": {
                                        "type": "object",
                                        "default": {},
                                        "properties": {
                                            "admire": {
                                                "description": "Mob will admire the item after picking up by looking at it. For this to happen the mob needs to have an Admire component and an Admire goal.",
                                                "type": "string"
                                            },
                                            "barter": {
                                                "description": "Mob will barter for the item after picking it up. For this to work the mob needs to have a Barter component and a Barter goal.",
                                                "type": "string"
                                            },
                                            "consume_item": {
                                                "description": "Determines whether the mob will consume the item or not.",
                                                "type": "string"
                                            },
                                            "craft_into": {
                                                "description": "Defines the item this entity wants to craft with the item defined by \"item\". Should be an item name.",
                                                "items": true
                                            },
                                            "item": {
                                                "description": "The name of the item. Aux value can be specified, for instance 'minecraft:skull:1'.",
                                                "type": "string"
                                            },
                                            "max_amount": {
                                                "description": "Maximum number of this item the mob will hold.",
                                                "type": "integer",
                                                "minimum": 1,
                                                "maximum": 64
                                            },
                                            "pickup_limit": {
                                                "description": "Maximum number of this item the mob will pick up during a single goal tick.",
                                                "type": "integer"
                                            },
                                            "priority": {
                                                "description": "Prioritizes which items the entity prefers. 0 is the highest priority.",
                                                "type": "integer",
                                                "default": 0
                                            },
                                            "stored_in_inventory": {
                                                "description": "Determines whether the mob will try to put the item in its inventory if it has the inventory component and if it can't be equipped.",
                                                "type": "boolean",
                                                "default": true
                                            },
                                            "surplus_amount": {
                                                "description": "Number of this item considered extra that the entity wants to share.",
                                                "type": "number"
                                            },
                                            "want_amount": {
                                                "description": "Number of this item this entity wants to have.",
                                                "type": "integer"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "minecraft:shooter": {
                            "title": "COMPONENTS",
                            "description": "Defines the entity's ranged attack behavior.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "aux_val": {
                                    "description": "ID of the Potion effect to be applied on hit",
                                    "type": "integer",
                                    "default": -1
                                },
                                "def": {
                                    "description": "Actor definition to use as projectile for the ranged attack. The actor definition must have the projectile component to be able to be shot as a projectile",
                                    "type": "string"
                                }
                            }
                        },
                        "minecraft:sittable": {
                            "title": "COMPONENTS",
                            "description": "Defines the entity's 'sit' state.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "sit_event": {
                                    "description": "Event to run when the entity enters the 'sit' state",
                                    "$ref": "#/definitions/events"
                                },
                                "stand_event": {
                                    "description": "Event to run when the entity exits the 'sit' state",
                                    "$ref": "#/definitions/events"
                                }
                            }
                        },
                        "minecraft:spawn_entity": {
                            "title": "COMPONENTS",
                            "description": "Adds a timer after which this entity will spawn another entity or item (similar to vanilla's chicken's egg-laying behavior).",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "filters": {
                                    "description": "If present, the specified entity will only spawn if the filter evaluates to true.",
                                    "$ref": "#/definitions/filter"
                                },
                                "max_wait_time": {
                                    "description": "Maximum amount of time to randomly wait in seconds before another entity is spawned.",
                                    "type": "integer",
                                    "default": 600
                                },
                                "min_wait_time": {
                                    "description": "Minimum amount of time to randomly wait in seconds before another entity is spawned.",
                                    "type": "integer",
                                    "default": 300
                                },
                                "num_to_spawn": {
                                    "description": "The number of entities of this type to spawn each time that this triggers.",
                                    "type": "integer",
                                    "default": 1
                                },
                                "should_leash": {
                                    "description": "If true, this the spawned entity will be leashed to the parent.",
                                    "type": "boolean",
                                    "default": false
                                },
                                "single_use": {
                                    "description": "If true, this component will only ever spawn the specified entity once.",
                                    "type": "boolean",
                                    "default": false
                                },
                                "spawn_entity": {
                                    "description": "Identifier of the entity to spawn, leave empty to spawn the item defined by \"spawn_item\" instead.",
                                    "type": "string"
                                },
                                "spawn_event": {
                                    "description": "Event to call when the entity is spawned.",
                                    "$ref": "#/definitions/events",
                                    "default": "minecraft:entity_born"
                                },
                                "spawn_item": {
                                    "description": "Item identifier of the item to spawn.",
                                    "type": "string",
                                    "default": "egg"
                                },
                                "spawn_method": {
                                    "description": "Method to use to spawn the entity.",
                                    "type": "string",
                                    "default": "born"
                                },
                                "spawn_sound": {
                                    "description": "Identifier of the sound effect to play when the entity is spawned.",
                                    "type": "string",
                                    "default": "plop"
                                }
                            }
                        },
                        "minecraft:tameable": {
                            "title": "COMPONENTS",
                            "description": "Defines the rules for a mob to be tamed by the player.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "probability": {
                                    "description": "The chance of taming the entity with each item use between 0.0 and 1.0, where 1.0 is 100%",
                                    "type": "number",
                                    "default": 1
                                },
                                "tame_event": {
                                    "description": "Event to run when this entity becomes tamed",
                                    "$ref": "#/definitions/events"
                                },
                                "tame_items": {
                                    "description": "The list of items that can be used to tame this entity",
                                    "type": "array",
                                    "default": [],
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "minecraft:tamemount": {
                            "title": "COMPONENTS",
                            "description": "Allows the Entity to be tamed by mounting it.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "attempt_temper_mod": {
                                    "description": "The amount the entity's temper will increase when mounted.",
                                    "type": "integer",
                                    "default": 5
                                },
                                "autoRejectItems": {
                                    "description": "The list of items that, if carried while interacting with the entity, will anger it.",
                                    "type": "object",
                                    "default": {},
                                    "properties": {
                                        "item": {
                                            "description": "Name of the item this entity dislikes and will cause it to get angry if used while untamed.",
                                            "type": "string"
                                        }
                                    }
                                },
                                "feed_items": {
                                    "description": "The list of items that can be used to increase the entity's temper and speed up the taming process.",
                                    "type": "object",
                                    "default": {},
                                    "properties": {
                                        "item": {
                                            "description": "Name of the item this entity likes and can be used to increase this entity's temper.",
                                            "type": "string"
                                        },
                                        "temper_mod": {
                                            "description": "The amount of temper this entity gains when fed this item.",
                                            "type": "integer",
                                            "default": 0
                                        }
                                    }
                                },
                                "feed_text": {
                                    "description": "The text that shows in the feeding interact button.",
                                    "type": "string"
                                },
                                "max_temper": {
                                    "description": "The maximum value for the entity's random starting temper.",
                                    "type": "integer",
                                    "default": 100
                                },
                                "min_temper": {
                                    "description": "The minimum value for the entity's random starting temper.",
                                    "type": "integer",
                                    "default": 0
                                },
                                "ride_text": {
                                    "description": "The text that shows in the riding interact button.",
                                    "type": "string"
                                },
                                "tame_event": {
                                    "description": "Event that triggers when the entity becomes tamed.",
                                    "$ref": "#/definitions/events"
                                }
                            }
                        },
                        "minecraft:target_nearby_sensor": {
                            "title": "COMPONENTS",
                            "description": "Defines the entity's range within which it can see or sense other entities to target them.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "inside_range": {
                                    "description": "Maximum distance in blocks that another entity will be considered in the 'inside' range",
                                    "type": "number",
                                    "default": 1
                                },
                                "must_see": {
                                    "description": "Whether the other entity needs to be visible to trigger 'inside' events",
                                    "type": "boolean",
                                    "default": false
                                },
                                "on_inside_range": {
                                    "description": "Event to call when an entity gets in the inside range. Can specify 'event' for the name of the event and 'target' for the target of the event",
                                    "$ref": "#/definitions/events"
                                },
                                "on_outside_range": {
                                    "description": "Event to call when an entity gets in the outside range. Can specify 'event' for the name of the event and 'target' for the target of the event",
                                    "$ref": "#/definitions/events"
                                },
                                "on_vision_lost_inside_range": {
                                    "description": "Event to call when an entity exits visual range. Can specify 'event' for the name of the event and 'target' for the target of the event",
                                    "$ref": "#/definitions/events"
                                },
                                "outside_range": {
                                    "description": "Maximum distance in blocks that another entity will be considered in the 'outside' range",
                                    "type": "number",
                                    "default": 5
                                }
                            }
                        },
                        "minecraft:teleport": {
                            "title": "COMPONENTS",
                            "description": "Defines an entity's teleporting behavior.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "dark_teleport_chance": {
                                    "description": "Modifies the chance that the entity will teleport if the entity is in darkness",
                                    "type": "number",
                                    "default": 0.01
                                },
                                "light_teleport_chance": {
                                    "description": "Modifies the chance that the entity will teleport if the entity is in daylight",
                                    "type": "number",
                                    "default": 0.01
                                },
                                "max_random_teleport_time": {
                                    "description": "Maximum amount of time in seconds between random teleports",
                                    "type": "number",
                                    "default": 20
                                },
                                "min_random_teleport_time": {
                                    "description": "Minimum amount of time in seconds between random teleports",
                                    "type": "number",
                                    "default": 0
                                },
                                "random_teleport_cube": {
                                    "description": "Entity will teleport to a random position within the area defined by this cube",
                                    "type": "array",
                                    "minItems": 3,
                                    "maxItems": 3,
                                    "default": [
                                        32,
                                        16,
                                        32
                                    ],
                                    "items": {
                                        "type": "integer"
                                    }
                                },
                                "random_teleports": {
                                    "description": "If true, the entity will teleport randomly",
                                    "type": "boolean",
                                    "default": true
                                },
                                "target_distance": {
                                    "description": "Maximum distance the entity will teleport when chasing a target",
                                    "type": "number",
                                    "default": 16
                                },
                                "target_teleport_chance": {
                                    "description": "The chance that the entity will teleport between 0.0 and 1.0. 1.0 means 100%",
                                    "type": "number",
                                    "default": 1
                                }
                            }
                        },
                        "minecraft:tick_world": {
                            "title": "COMPONENTS",
                            "description": "Defines if the entity ticks the world and the radius around it to tick.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "distance_to_players": {
                                    "description": "The distance at which the closest player has to be before this entity despawns. This option will be ignored if never_despawn is true. Min: 128 blocks.",
                                    "type": "number",
                                    "default": 128
                                },
                                "never_despawn": {
                                    "description": "If true, this entity will not despawn even if players are far away. If false, distance_to_players will be used to determine when to despawn.",
                                    "type": "boolean",
                                    "default": true
                                },
                                "radius": {
                                    "description": "The area around the entity to tick. Default: 2. Allowed range: 2-6.",
                                    "type": "integer",
                                    "default": 2,
                                    "minimum": 2,
                                    "maximum": 6
                                }
                            }
                        },
                        "minecraft:timer": {
                            "title": "COMPONENTS",
                            "description": "Adds a timer after which an event will fire.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "looping": {
                                    "description": "If true, the timer will restart every time after it fires.",
                                    "type": "boolean",
                                    "default": true
                                },
                                "randomInterval": {
                                    "description": "If true, the amount of time on the timer will be random between the min and max values specified in time.",
                                    "type": "boolean",
                                    "default": true
                                },
                                "random_time_choices": {
                                    "description": "This is a list of objects, representing one value in seconds that can be picked before firing the event and an optional weight. Incompatible with time.",
                                    "type": "array",
                                    "default": []
                                },
                                "time": {
                                    "description": "Amount of time in seconds for the timer. Can be specified as a number or a pair of numbers (min and max). Incompatible with random_time_choices.",
                                    "type": [
                                        "array",
                                        "number"
                                    ],
                                    "minItems": 2,
                                    "maxItems": 2,
                                    "default": [
                                        0.0,
                                        0.0
                                    ],
                                    "items": {
                                        "type": "number",
                                        "default": 0.0
                                    }
                                },
                                "time_down_event": {
                                    "description": "Event to fire when the time on the timer runs out.",
                                    "$ref": "#/definitions/events"
                                }
                            }
                        },
                        "minecraft:trade_table": {
                            "title": "COMPONENTS",
                            "description": "Defines this entity's ability to trade with players.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "convert_trades_economy": {
                                    "description": "Determines when the mob transforms, if the trades should be converted when the new mob has a economy_trade_table. When the trades are converted, the mob will generate a new trade list with their new trade table, but then it will try to convert any of the same trades over to have the same enchantments and user data. For example, if the original has a Emerald to Enchanted Iron Sword (Sharpness 1), and the new trade also has an Emerald for Enchanted Iron Sword, then the enchantment will be Sharpness 1.",
                                    "type": "boolean",
                                    "default": false
                                },
                                "display_name": {
                                    "description": "Name to be displayed while trading with this entity.",
                                    "type": "string"
                                },
                                "new_screen": {
                                    "description": "Used to determine if trading with entity opens the new trade screen.",
                                    "type": "boolean",
                                    "default": false
                                },
                                "persist_trades": {
                                    "description": "Determines if the trades should persist when the mob transforms. This makes it so that the next time the mob is transformed to something with a trade_table or economy_trade_table, then it keeps their trades.",
                                    "type": "boolean",
                                    "default": false
                                },
                                "table": {
                                    "description": "File path relative to the behavior pack root for this entity's trades.",
                                    "type": "string"
                                }
                            }
                        },
                        "minecraft:trail": {
                            "title": "COMPONENTS",
                            "description": "Causes an entity to leave a trail of blocks as it moves about the world.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "block_type": {
                                    "description": "The type of block you wish to be spawned by the entity as it move about the world. Solid blocks may not be spawned at an offset of (0,0,0).",
                                    "type": "string",
                                    "default": "air"
                                },
                                "spawn_filter": {
                                    "description": "One or more conditions that must be met in order to cause the chosen block type to spawn.",
                                    "$ref": "#/definitions/filter"
                                },
                                "spawn_offset": {
                                    "description": "The distance from the entities current position to spawn the block. Capped at up to 16 blocks away. The X value is left/right(-/+), the Z value is backward/forward(-/+), the Y value is below/above(-/+).",
                                    "type": "array",
                                    "minItems": 3,
                                    "maxItems": 3,
                                    "default": [
                                        0,
                                        0,
                                        0
                                    ],
                                    "items": {
                                        "type": "integer"
                                    }
                                }
                            }
                        },
                        "minecraft:transformation": {
                            "title": "COMPONENTS",
                            "description": "Defines an entity's transformation from the current definition into another",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "add": {
                                    "description": "List of components to add to the entity after the transformation",
                                    "type": "array",
                                    "default": [],
                                    "items": {
                                        "type": "object",
                                        "default": {},
                                        "properties": {
                                            "component_groups": {
                                                "description": "Names of component groups to add",
                                                "type": "array",
                                                "default": [],
                                                "items": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                },
                                "begin_transform_sound": {
                                    "description": "Sound to play when the transformation starts",
                                    "type": "string"
                                },
                                "delay": {
                                    "description": "Defines the properties of the delay for the transformation",
                                    "type": "object",
                                    "default": {},
                                    "properties": {
                                        "block_assist_chance": {
                                            "description": "Chance that the entity will look for nearby blocks that can speed up the transformation. Value must be between 0.0 and 1.0",
                                            "type": "number",
                                            "minium": 0.0,
                                            "maxium": 1.0,
                                            "default": 0.0
                                        },
                                        "block_chance": {
                                            "description": "Chance that, once a block is found, will help speed up the transformation",
                                            "type": "number",
                                            "default": 0
                                        },
                                        "block_max": {
                                            "description": "Maximum number of blocks the entity will look for to aid in the transformation. If not defined or set to 0, it will be set to the block radius",
                                            "type": "integer",
                                            "default": 0
                                        },
                                        "block_radius": {
                                            "description": "Distance in Blocks that the entity will search for blocks that can help the transformation",
                                            "type": "integer",
                                            "default": 0
                                        },
                                        "block_types": {
                                            "description": "List of blocks that can help the transformation of this entity",
                                            "type": "array",
                                            "default": [],
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "value": {
                                            "description": "Time in seconds before the entity transforms",
                                            "type": "number",
                                            "default": 0
                                        }
                                    }
                                },
                                "drop_equipment": {
                                    "description": "Cause the entity to drop all equipment upon transformation",
                                    "type": "boolean",
                                    "default": false
                                },
                                "drop_inventory": {
                                    "description": "Cause the entity to drop all items in inventory upon transformation",
                                    "type": "boolean",
                                    "default": false
                                },
                                "into": {
                                    "description": "Entity Definition that this entity will transform into",
                                    "type": "string"
                                },
                                "keep_level": {
                                    "description": "If this entity has trades and has leveled up, it should maintain that level after transformation.",
                                    "type": "boolean",
                                    "default": false
                                },
                                "keep_owner": {
                                    "description": "If this entity is owned by another entity, it should remain owned after transformation.",
                                    "type": "boolean",
                                    "default": false
                                },
                                "preserve_equipment": {
                                    "description": "Cause the entity to keep equipment after going through transformation",
                                    "type": "boolean",
                                    "default": false
                                },
                                "transformation_sound": {
                                    "description": "Sound to play when the entity is done transforming",
                                    "type": "string"
                                }
                            }
                        },
                        "minecraft:trusting": {
                            "title": "COMPONENTS",
                            "description": "Defines the rules for a mob to trust players.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "probability": {
                                    "description": "The chance of the entity trusting with each item use between 0.0 and 1.0, where 1.0 is 100%.",
                                    "type": "number",
                                    "default": 1.00
                                },
                                "trust_event": {
                                    "description": "Event to run when this entity becomes trusting.",
                                    "$ref": "#/definitions/events"
                                },
                                "trust_items": {
                                    "description": "The list of items that can be used to get the entity to trust players.",
                                    "type": "array",
                                    "default": [],
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "minecraft:water_movement": {
                            "title": "COMPONENTS",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "drag_factor": {
                                    "description": "Drag factor to determine movement speed when in water.",
                                    "type": "number",
                                    "default": 0.8
                                }
                            }
                        },
                        "minecraft:ambient_sound_interval": {
                            "title": "PROPETIES",
                            "description": "Sets the entity's delay between playing its ambient sound.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "event_name": {
                                    "description": "Level sound event to be played as the ambient sound.",
                                    "type": "string",
                                    "default": "ambient"
                                },
                                "range": {
                                    "description": "Maximum time in seconds to randomly add to the ambient sound delay time.",
                                    "type": "number",
                                    "default": 16.000000
                                },
                                "value": {
                                    "description": "Minimum time in seconds before the entity plays its ambient sound again.",
                                    "type": "number",
                                    "default": 8.000000
                                }
                            }
                        },
                        "minecraft:can_climb": {
                            "title": "PROPETIES",
                            "description": "Allows this entity to climb up ladders.",
                            "type": "object",
                            "default": {}
                        },
                        "minecraft:can_fly": {
                            "title": "PROPETIES",
                            "description": "Marks the entity as being able to fly, the pathfinder won't be restricted to paths where a solid block is required underneath it.",
                            "type": "object",
                            "default": {}
                        },
                        "minecraft:can_power_jump": {
                            "title": "PROPETIES",
                            "description": "Allows the entity to power jump like the horse does in vanilla.",
                            "type": "object",
                            "default": {}
                        },
                        "minecraft:collision_box": {
                            "title": "PROPETIES",
                            "description": "Sets the width and height of the Entity's collision box.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "height": {
                                    "description": "Height of the collision box in blocks. A negative value will be assumed to be 0.",
                                    "type": "number",
                                    "default": 1.0,
                                    "minimum": 0
                                },
                                "width": {
                                    "description": "Width and Depth of the collision box in blocks. A negative value will be assumed to be 0.",
                                    "type": "number",
                                    "default": 1.0,
                                    "minimum": 0
                                }
                            }
                        },
                        "minecraft:color": {
                            "title": "PROPETIES",
                            "description": "Defines the entity's color. Only works on vanilla entities that have predefined color values (sheep, llama, shulker).",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "value": {
                                    "description": "The Palette Color value of the entity.",
                                    "type": "integer",
                                    "default": 0
                                }
                            }
                        },
                        "minecraft:color2": {
                            "title": "PROPETIES",
                            "description": "Defines the entity's second texture color. Only works on vanilla entities that have a second predefined color values (tropical fish).",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "value": {
                                    "description": "The second Palette Color value of the entity.",
                                    "type": "integer",
                                    "default": 0
                                }
                            }
                        },
                        "minecraft:default_look_angle": {
                            "title": "PROPETIES",
                            "description": "Sets this entity's default head rotation angle.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "value": {
                                    "description": "Angle in degrees.",
                                    "type": "number",
                                    "default": 0.0
                                }
                            }
                        },
                        "minecraft:equipment": {
                            "title": "PROPETIES",
                            "description": "Sets the Equipment table to use for this Entity.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "slot_drop_chance": {
                                    "description": "A list of slots with the chance to drop an equipped item from that slot.",
                                    "type": "array",
                                    "default": [],
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "table": {
                                    "description": "The file path to the equipment table, relative to the behavior pack's root.",
                                    "type": "string"
                                }
                            }
                        },
                        "minecraft:fire_immune": {
                            "title": "PROPETIES",
                            "description": "Sets that this entity doesn't take damage from fire.",
                            "type": "object",
                            "default": {}
                        },
                        "minecraft:floats_in_liquid": {
                            "title": "PROPETIES",
                            "description": "Sets that this entity can float in liquid blocks.",
                            "type": "object",
                            "default": {}
                        },
                        "minecraft:flying_speed": {
                            "title": "PROPETIES",
                            "description": "Speed in Blocks that this entity flies at.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "value": {
                                    "description": "Flying speed in blocks per tick.",
                                    "type": "number",
                                    "default": 0.02
                                }
                            }
                        },
                        "minecraft:friction_modifier": {
                            "title": "PROPETIES",
                            "description": "Defines how much friction affects this entity.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "value": {
                                    "description": "The higher the number, the more the friction affects this entity. A value of 1.0 means regular friction, while 2.0 means twice as much.",
                                    "type": "number",
                                    "default": 1.0
                                }
                            }
                        },
                        "minecraft:ground_offset": {
                            "title": "PROPETIES",
                            "description": "Sets the offset from the ground that the entity is actually at.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "value": {
                                    "description": "The value of the entity's offset from the terrain, in blocks.",
                                    "type": "number",
                                    "default": 0.0
                                }
                            }
                        },
                        "minecraft:input_ground_controlled": {
                            "title": "PROPETIES",
                            "description": "When configured as a rideable entity, the entity will be controlled using WASD controls.",
                            "type": "object",
                            "default": {}
                        },
                        "minecraft:is_baby": {
                            "title": "PROPETIES",
                            "description": "Sets that this entity is a baby.",
                            "type": "object",
                            "default": {}
                        },
                        "minecraft:is_charged": {
                            "title": "PROPETIES",
                            "description": "Sets that this entity is charged.",
                            "type": "object",
                            "default": {}
                        },
                        "minecraft:is_chested": {
                            "title": "PROPETIES",
                            "description": "Sets that this entity is currently carrying a chest.",
                            "type": "object",
                            "default": {}
                        },
                        "minecraft:is_dyeable": {
                            "title": "PROPETIES",
                            "description": "Allows dyes to be used on this entity to change its color.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "interact_text": {
                                    "description": "The text that will display when interacting with this entity with a dye when playing with Touch-screen controls.",
                                    "type": "string"
                                }
                            }
                        },
                        "minecraft:is_hidden_when_invisible": {
                            "title": "PROPETIES",
                            "description": "Sets that this entity can hide from hostile mobs while invisible.",
                            "type": "object",
                            "default": {}
                        },
                        "minecraft:is_ignited": {
                            "title": "PROPETIES",
                            "description": "Sets that this entity is currently on fire.",
                            "type": "object",
                            "default": {}
                        },
                        "minecraft:is_illager_captain": {
                            "title": "PROPETIES",
                            "description": "Sets that this entity is an illager captain.",
                            "type": "object",
                            "default": {}
                        },
                        "minecraft:is_saddled": {
                            "title": "PROPETIES",
                            "description": "Sets that this entity is currently saddled.",
                            "type": "object",
                            "default": {}
                        },
                        "minecraft:is_shaking": {
                            "title": "PROPETIES",
                            "description": "Sets that this entity is currently shaking.",
                            "type": "object",
                            "default": {}
                        },
                        "minecraft:is_sheared": {
                            "title": "PROPETIES",
                            "description": "Sets that this entity is currently sheared.",
                            "type": "object",
                            "default": {}
                        },
                        "minecraft:is_stackable": {
                            "title": "PROPETIES",
                            "description": "Sets that this entity can be stacked.",
                            "type": "object",
                            "default": {}
                        },
                        "minecraft:is_stunned": {
                            "title": "PROPETIES",
                            "description": "Sets that this entity is currently stunned.",
                            "type": "object",
                            "default": {}
                        },
                        "minecraft:is_tamed": {
                            "title": "PROPETIES",
                            "description": "Sets that this entity is currently tamed.",
                            "type": "object",
                            "default": {}
                        },
                        "minecraft:item_controllable": {
                            "title": "PROPETIES",
                            "description": "Defines what items can be used to control this entity while ridden.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "control_items": {
                                    "description": "List of items that can be used to control this entity.",
                                    "type": "array",
                                    "default": [],
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "minecraft:loot": {
                            "title": "PROPETIES",
                            "description": "Sets the loot table for what items this entity drops upon death.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "talbe": {
                                    "description": "The path to the loot table, relative to the Behavior Pack's root.",
                                    "type": "string"
                                }
                            }
                        },
                        "minecraft:mark_variant": {
                            "title": "PROPETIES",
                            "description": "Additional variant value. Can be used to further differentiate variants.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "value": {
                                    "description": "The ID of the variant. By convention, 0 is the ID of the base entity.",
                                    "type": "integer",
                                    "default": 0
                                }
                            }
                        },
                        "minecraft:push_through": {
                            "title": "PROPETIES",
                            "description": "Sets the distance through which the entity can push through.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "value": {
                                    "description": "The value of the entity's push-through, in blocks.",
                                    "type": "number",
                                    "default": 0.0
                                }
                            }
                        },
                        "minecraft:scale": {
                            "title": "PROPETIES",
                            "description": "Sets the entity's visual size.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "value": {
                                    "description": "The value of the scale. 1.0 means the entity will appear at the scale they are defined in their model. Higher numbers make the entity bigger.",
                                    "type": "number",
                                    "default": 1.0
                                }
                            }
                        },
                        "minecraft:skin_id": {
                            "title": "PROPETIES",
                            "description": "Skin ID value. Can be used to differentiate skins, such as base skins for villagers.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "value": {
                                    "description": "The ID of the skin. By convention, 0 is the ID of the base skin.",
                                    "type": "integer",
                                    "default": 0
                                }
                            }
                        },
                        "minecraft:sound_volume": {
                            "title": "PROPETIES",
                            "description": "Sets the entity's base volume for sound effects.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "value": {
                                    "description": "The value of the volume the entity uses for sound effects.",
                                    "type": "number",
                                    "default": 1.0
                                }
                            }
                        },
                        "minecraft:type_family": {
                            "title": "PROPETIES",
                            "description": "Defines the families this entity belongs to.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "family": {
                                    "description": "List of family names.",
                                    "type": "array",
                                    "default": [],
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "minecraft:variant": {
                            "title": "PROPETIES",
                            "description": "Used to differentiate the component group of a variant of an entity from others. (e.g. ocelot, villager)",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "value": {
                                    "description": "The ID of the variant. By convention, 0 is the ID of the base entity.",
                                    "type": "integer",
                                    "default": 0
                                }
                            }
                        },
                        "minecraft:walk_animation_speed": {
                            "title": "PROPETIES",
                            "description": "Sets the speed multiplier for this entity's walk animation speed.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "value": {
                                    "description": "The higher the number, the faster the animation for walking plays. A value of 1.0 means normal speed, while 2.0 means twice as fast.",
                                    "type": "number",
                                    "default": 1.0
                                }
                            }
                        },
                        "minecraft:wants_jockey": {
                            "title": "PROPETIES",
                            "description": "Sets that this entity wants to become a jockey.",
                            "type": "object",
                            "default": {}
                        },
                        "minecraft:on_death": {
                            "title": "TRIGGER",
                            "description": "Only usable by the Ender Dragon. Adds a trigger to call on this entity's death.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "event": {
                                    "description": "The event to run when the conditions for this trigger are met.",
                                    "type": "string"
                                },
                                "filters": {
                                    "description": "The list of conditions for this trigger to execute.",
                                    "$ref": "#/definitions/filter"
                                },
                                "target": {
                                    "description": "The target of the event.",
                                    "type": "string",
                                    "default": "self"
                                }
                            }
                        },
                        "minecraft:on_friendly_anger": {
                            "title": "TRIGGER",
                            "description": "Adds a trigger that will run when a nearby entity of the same type as this entity becomes Angry.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "event": {
                                    "description": "The event to run when the conditions for this trigger are met.",
                                    "type": "string"
                                },
                                "filters": {
                                    "description": "The list of conditions for this trigger to execute.",
                                    "$ref": "#/definitions/filter"
                                },
                                "target": {
                                    "description": "The target of the event.",
                                    "type": "string",
                                    "default": "self"
                                }
                            }
                        },
                        "minecraft:on_hurt": {
                            "title": "TRIGGER",
                            "description": "Adds a trigger to call when this entity takes damage.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "event": {
                                    "description": "The event to run when the conditions for this trigger are met.",
                                    "type": "string"
                                },
                                "filters": {
                                    "description": "The list of conditions for this trigger to execute.",
                                    "$ref": "#/definitions/filter"
                                },
                                "target": {
                                    "description": "The target of the event.",
                                    "type": "string",
                                    "default": "self"
                                }
                            }
                        },
                        "minecraft:on_hurt_by_player": {
                            "title": "TRIGGER",
                            "description": "Adds a trigger to call when this entity is attacked by the player.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "event": {
                                    "description": "The event to run when the conditions for this trigger are met.",
                                    "type": "string"
                                },
                                "filters": {
                                    "description": "The list of conditions for this trigger to execute.",
                                    "$ref": "#/definitions/filter"
                                },
                                "target": {
                                    "description": "The target of the event.",
                                    "type": "string",
                                    "default": "self"
                                }
                            }
                        },
                        "minecraft:on_ignite": {
                            "title": "TRIGGER",
                            "description": "Adds a trigger to call when this entity is set on fire.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "event": {
                                    "description": "The event to run when the conditions for this trigger are met.",
                                    "type": "string"
                                },
                                "filters": {
                                    "description": "The list of conditions for this trigger to execute.",
                                    "$ref": "#/definitions/filter"
                                },
                                "target": {
                                    "description": "The target of the event.",
                                    "type": "string",
                                    "default": "self"
                                }
                            }
                        },
                        "minecraft:on_start_landing": {
                            "title": "TRIGGER",
                            "description": "Only usable by the Ender Dragon. Adds a trigger to call when this entity lands.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "event": {
                                    "description": "The event to run when the conditions for this trigger are met.",
                                    "type": "string"
                                },
                                "filters": {
                                    "description": "The list of conditions for this trigger to execute.",
                                    "$ref": "#/definitions/filter"
                                },
                                "target": {
                                    "description": "The target of the event.",
                                    "type": "string",
                                    "default": "self"
                                }
                            }
                        },
                        "minecraft:on_start_takeoff": {
                            "title": "TRIGGER",
                            "description": "Only usable by the Ender Dragon. Adds a trigger to call when this entity starts flying.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "event": {
                                    "description": "The event to run when the conditions for this trigger are met.",
                                    "type": "string"
                                },
                                "filters": {
                                    "description": "The list of conditions for this trigger to execute.",
                                    "$ref": "#/definitions/filter"
                                },
                                "target": {
                                    "description": "The target of the event.",
                                    "type": "string",
                                    "default": "self"
                                }
                            }
                        },
                        "minecraft:on_target_acquired": {
                            "title": "TRIGGER",
                            "description": "Adds a trigger to call when this entity finds a target.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "event": {
                                    "description": "The event to run when the conditions for this trigger are met.",
                                    "type": "string"
                                },
                                "filters": {
                                    "description": "The list of conditions for this trigger to execute.",
                                    "$ref": "#/definitions/filter"
                                },
                                "target": {
                                    "description": "The target of the event.",
                                    "type": "string",
                                    "default": "self"
                                }
                            }
                        },
                        "minecraft:on_target_escape": {
                            "title": "TRIGGER",
                            "description": "Adds a trigger to call when this entity loses the target it currently has.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "event": {
                                    "description": "The event to run when the conditions for this trigger are met.",
                                    "type": "string"
                                },
                                "filters": {
                                    "description": "The list of conditions for this trigger to execute.",
                                    "$ref": "#/definitions/filter"
                                },
                                "target": {
                                    "description": "The target of the event.",
                                    "type": "string",
                                    "default": "self"
                                }
                            }
                        },
                        "minecraft:on_wake_with_owner": {
                            "title": "TRIGGER",
                            "description": "Adds a trigger to call when this pet's owner awakes after sleeping with the pet.",
                            "type": "object",
                            "default": {},
                            "properties": {
                                "event": {
                                    "description": "The event to run when the conditions for this trigger are met.",
                                    "type": "string"
                                },
                                "filters": {
                                    "description": "The list of conditions for this trigger to execute.",
                                    "$ref": "#/definitions/filter"
                                },
                                "target": {
                                    "description": "The target of the event.",
                                    "type": "string",
                                    "default": "self"
                                }
                            }
                        }
                    }
                },
                "component_groups": {
                    "description": "Compoennts",
                    "additionalProperties": {
                        "$ref": "#/properties/minecraft:entity/properties/components"
                    }
                },
                "events": {}
            }
        }
    }
}