{
    "id": "https://raw.githubusercontent.com/legopitstop/JSON-Schemas/main/schemas/bedrock/behavior/loot_table.json",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "definitions": {
        "LootTableNumberProvider": {
            "$id": "#/definitions/LootTableNumberProvider",
            "description": "Number provider",
            "anyOf": [
                {
                    "type": "number"
                },
                {
                    "type": "object",
                    "default": {},
                    "properties": {
                        "type": {
                            "description": "The number provider type.",
                            "enum": [
                                "minecraft:constant",
                                "minecraft:uniform",
                                "minecraft:binomial",
                                "minecraft:score"
                            ]
                        },
                        "value": {
                            "description": "type=constant The exact value",
                            "type": "number"
                        },
                        "min": {
                            "description": "type=uniform Number provider. The minimum value.",
                            "$ref": "#/definitions/LootTableNumberProvider"
                        },
                        "max": {
                            "description": "type=uniform Number provider. The maximum value.",
                            "$ref": "#/definitions/LootTableNumberProvider"
                        },
                        "n": {
                            "description": "type=binomial Number provider. The amount of trials.",
                            "$ref": "#/definitions/LootTableNumberProvider"
                        },
                        "p": {
                            "description": "type=binomial Number provider. The probability of success on an individual trial.",
                            "$ref": "#/definitions/LootTableNumberProvider"
                        },
                        "target": {
                            "description": "type=score Scoreboard name provider. One of `this`, `killer`, `direct_killer`, `player_killer`.",
                            "anyOf": [
                                {
                                    "type": "string",
                                    "enum": [
                                        "this",
                                        "killer",
                                        "direct_killer",
                                        "player_killer"
                                    ]
                                },
                                {
                                    "type": "object",
                                    "default": {},
                                    "properties": {
                                        "type": {
                                            "description": "Resource location. Either `fixed` or `context`",
                                            "enum": [
                                                "fixed",
                                                "context"
                                            ]
                                        },
                                        "name": {
                                            "description": "type=fixed A UUID or playername.",
                                            "type": "string"
                                        },
                                        "target": {
                                            "description": "type=context Scoreboard name provider. One of this, killer, direct_killer, player_killer.",
                                            "enum": [
                                                "this",
                                                "killer",
                                                "direct_killer",
                                                "player_killer"
                                            ]
                                        }
                                    }
                                }
                            ]
                        },
                        "score": {
                            "description": "type=score The scoreboard objective.",
                            "type": "string"
                        },
                        "scale": {
                            "description": "type=score Optional. Scale to multiply the score before returning it.",
                            "type": "number"
                        }
                    }
                }
            ]
        },
        "CommonItemTags": {
            "$id": "#/definitions/CommonItemTags",
            "type": "object",
            "default": {},
            "properties": {
                "count": {
                    "description": "Amount of the item.",
                    "anyOf": [
                        {
                            "type": "integer",
                            "minimum": 0,
                            "maximum": 64
                        },
                        {
                            "type": "object",
                            "properties": {
                                "min": {
                                    "description": "The minimum value.",
                                    "type": "integer",
                                    "minimum": 0,
                                    "maximum": 64
                                },
                                "max": {
                                    "description": "The maximum value.",
                                    "type": "integer",
                                    "minimum": 0,
                                    "maximum": 64
                                }
                            }
                        }
                    ]
                },
                "durability": {
                    "description": "The durability of the item.",
                    "anyOf": [
                        {
                            "type": "integer"
                        },
                        {
                            "type": "object",
                            "default": {},
                            "properties": {
                                "min": {
                                    "description": "The minimum value.",
                                    "type": "integer"
                                },
                                "max": {
                                    "description": "The maximum value.",
                                    "type": "integer"
                                }
                            }
                        }
                    ]
                },
                "enchantments": {
                    "description": "List of enchantments.",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "default": {},
                        "properties": {
                            "enchantment": {
                                "description": "An enchantment ID.",
                                "type": "string"
                            },
                            "levels": {
                                "description": "The level of the enchantment.",
                                "anyOf": [
                                    {
                                        "type": "integer"
                                    },
                                    {
                                        "type": "object",
                                        "default": {},
                                        "properties": {
                                            "min": {
                                                "description": "The minimum value.",
                                                "type": "integer"
                                            },
                                            "max": {
                                                "description": "The maximum value.",
                                                "type": "integer"
                                            }
                                        }
                                    }
                                ]
                            }
                        }
                    }
                },
                "stored_enchantments": {
                    "description": "List of stored enchantments.",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "default": {},
                        "properties": {
                            "enchantment": {
                                "description": "An enchantment ID.",
                                "type": "string"
                            },
                            "levels": {
                                "description": "The level of the enchantment.",
                                "anyOf": [
                                    {
                                        "type": "integer"
                                    },
                                    {
                                        "type": "object",
                                        "default": {},
                                        "properties": {
                                            "min": {
                                                "description": "The minimum value.",
                                                "type": "integer"
                                            },
                                            "max": {
                                                "description": "The maximum value.",
                                                "type": "integer"
                                            }
                                        }
                                    }
                                ]
                            }
                        }
                    }
                },
                "item": {
                    "description": "An item ID.",
                    "type": "string"
                },
                "nbt": {
                    "description": "An NBT string",
                    "type": "string"
                },
                "potion": {
                    "description": "A brewed potion ID.",
                    "type": "string"
                },
                "tag": {
                    "description": "An item data pack tag.",
                    "type": "string"
                }
            }
        }
    },
    "properties": {
        "functions": {
            "title": "LOOT_TABLE",
            "description": "Applies functions to all item stacks produced by this table. Functions are applied in order, so for example `looting_enchant` must be after `set_count` to work correctly.",
            "type": "array",
            "items": {
                "type": "object",
                "default": {},
                "properties": {
                    "function": {
                        "description": "Namespaced ID of the function to apply.",
                        "enum": [
                            "apply_bonus",
                            "copy_name",
                            "copy_nbt",
                            "copy_state",
                            "enchant_randomly",
                            "enchant_with_levels",
                            "exploration_map",
                            "explosion_decay",
                            "furnace_smelt",
                            "fill_player_head",
                            "limit_count",
                            "looting_enchant",
                            "set_attributes",
                            "set_banner_pattern‌",
                            "set_contents",
                            "set_count",
                            "set_damage",
                            "set_enchantments‌",
                            "set_loot_table",
                            "set_lore",
                            "set_name",
                            "set_nbt",
                            "set_stew_effect"
                        ]
                    },
                    "enchantment": {
                        "description": "Enchantment ID used for level calculation.",
                        "$ref": "https://raw.githubusercontent.com/legopitstop/JSON-Schemas/main/minecraft/enchantments.json#/definitions/MinecraftEnchantmentExample"
                    },
                    "formula": {
                        "description": "Can be binomial_with_bonus_count for a binomial distribution (with n=level + extra, p=probability), uniform_bonus_count for uniform distribution (from 0 to level * bonusMultiplier), or ore_drops for a special function used for ore drops in the vanilla game (Count * (max(0; random(0..Level + 2) - 1)+1)).",
                        "enum": [
                            "binomial_with_bonus_count",
                            "uniform_bonus_count",
                            "ore_drops"
                        ]
                    },
                    "parameters": {
                        "description": "Values required for the formula.",
                        "type": "object",
                        "default": {},
                        "properties": {
                            "extra": {
                                "description": "For formula 'binomial_with_bonus_count', the extra value.",
                                "type": "number"
                            },
                            "probability": {
                                "description": "For formula 'binomial_with_bonus_count', the probability.",
                                "type": "number"
                            },
                            "bonusMultiplier": {
                                "description": "For formula 'uniform_bonus_count', the bonus multiplier.",
                                "type": "number"
                            }
                        }
                    },
                    "source": {
                        "description": "Needs to be set to `block_entity` for `copy_name`. Specifies the source. Set to block_entity for the block entity of the destroyed block, this to use the entity that died or the player that gained the advancement, opened the container or broke the block, killer for the killer, or killer_player for a killer that is a player.",
                        "anyOf": [
                            {
                                "type": "string",
                                "enum": [
                                    "block_entity",
                                    "this",
                                    "killer",
                                    "killer_player"
                                ]
                            },
                            {
                                "type": "object",
                                "default": {},
                                "properties": {
                                    "type": {
                                        "description": "Nbt provider type. One of `context`, `storage`",
                                        "enum": [
                                            "minecraft:context",
                                            "minecraft:storage"
                                        ]
                                    },
                                    "target": {
                                        "description": "type=context Same as source above."
                                    },
                                    "source": {
                                        "description": "type=storage A resource location specifying the storage ID."
                                    }
                                }
                            }
                        ]
                    },
                    "ops": {
                        "description": "A list of copy operations.",
                        "type": "array",
                        "items": {
                            "type": "object",
                            "default": {},
                            "properties": {
                                "source": {
                                    "description": "The nbt path to copy from.",
                                    "type": "string"
                                },
                                "target": {
                                    "description": " The nbt path to copy to, starting from the item's `tag` tag.",
                                    "type": "string"
                                },
                                "op": {
                                    "description": "Can be `replace` to replace any existing contents of the target, `append` to append to a list, or `merge` to merge into a compound tag.",
                                    "enum": [
                                        "replace",
                                        "append",
                                        "merge"
                                    ]
                                }
                            }
                        }
                    },
                    "block": {
                        "description": "A block ID. Function fails if the block doesn't match",
                        "type": "string"
                    },
                    "properties": {
                        "description": "A list of property names to copy.",
                        "type": "array",
                        "items": {
                            "description": "A block state name to copy.",
                            "type": "string"
                        }
                    },
                    "enchantments": {
                        "anyOf": [
                            {
                                "type": "array",
                                "description": "List of enchantment IDs to choose from. If omitted, all enchantments applicable to the item are possible.",
                                "items": {
                                    "$ref": "https://raw.githubusercontent.com/legopitstop/JSON-Schemas/main/minecraft/enchantments.json#/definitions/MinecraftEnchantmentExample"
                                }
                            },
                            {
                                "type": "object",
                                "default": {},
                                "properties": {
                                    "minecraft:aqua_affinity": {
                                        "description": "Number provider specifying the enchantment level.",
                                        "$ref": "#/definitions/LootTableNumberProvider"
                                    },
                                    "minecraft:bane_of_arthropods": {
                                        "description": "Number provider specifying the enchantment level.",
                                        "$ref": "#/definitions/LootTableNumberProvider"
                                    },
                                    "minecraft:binding_curse": {
                                        "description": "Number provider specifying the enchantment level.",
                                        "$ref": "#/definitions/LootTableNumberProvider"
                                    },
                                    "minecraft:blast_protection": {
                                        "description": "Number provider specifying the enchantment level.",
                                        "$ref": "#/definitions/LootTableNumberProvider"
                                    },
                                    "minecraft:channeling": {
                                        "description": "Number provider specifying the enchantment level.",
                                        "$ref": "#/definitions/LootTableNumberProvider"
                                    },
                                    "minecraft:depth_strider": {
                                        "description": "Number provider specifying the enchantment level.",
                                        "$ref": "#/definitions/LootTableNumberProvider"
                                    },
                                    "minecraft:efficiency": {
                                        "description": "Number provider specifying the enchantment level.",
                                        "$ref": "#/definitions/LootTableNumberProvider"
                                    },
                                    "minecraft:feather_falling": {
                                        "description": "Number provider specifying the enchantment level.",
                                        "$ref": "#/definitions/LootTableNumberProvider"
                                    },
                                    "minecraft:fire_aspect": {
                                        "description": "Number provider specifying the enchantment level.",
                                        "$ref": "#/definitions/LootTableNumberProvider"
                                    },
                                    "minecraft:fire_protection": {
                                        "description": "Number provider specifying the enchantment level.",
                                        "$ref": "#/definitions/LootTableNumberProvider"
                                    },
                                    "minecraft:flame": {
                                        "description": "Number provider specifying the enchantment level.",
                                        "$ref": "#/definitions/LootTableNumberProvider"
                                    },
                                    "minecraft:fortune": {
                                        "description": "Number provider specifying the enchantment level.",
                                        "$ref": "#/definitions/LootTableNumberProvider"
                                    },
                                    "minecraft:frost_walker": {
                                        "description": "Number provider specifying the enchantment level.",
                                        "$ref": "#/definitions/LootTableNumberProvider"
                                    },
                                    "minecraft:impaling": {
                                        "description": "Number provider specifying the enchantment level.",
                                        "$ref": "#/definitions/LootTableNumberProvider"
                                    },
                                    "minecraft:infinity": {
                                        "description": "Number provider specifying the enchantment level.",
                                        "$ref": "#/definitions/LootTableNumberProvider"
                                    },
                                    "minecraft:knockback": {
                                        "description": "Number provider specifying the enchantment level.",
                                        "$ref": "#/definitions/LootTableNumberProvider"
                                    },
                                    "minecraft:looting": {
                                        "description": "Number provider specifying the enchantment level.",
                                        "$ref": "#/definitions/LootTableNumberProvider"
                                    },
                                    "minecraft:loyalty": {
                                        "description": "Number provider specifying the enchantment level.",
                                        "$ref": "#/definitions/LootTableNumberProvider"
                                    },
                                    "minecraft:luck_of_the_sea": {
                                        "description": "Number provider specifying the enchantment level.",
                                        "$ref": "#/definitions/LootTableNumberProvider"
                                    },
                                    "minecraft:lure": {
                                        "description": "Number provider specifying the enchantment level.",
                                        "$ref": "#/definitions/LootTableNumberProvider"
                                    },
                                    "minecraft:mending": {
                                        "description": "Number provider specifying the enchantment level.",
                                        "$ref": "#/definitions/LootTableNumberProvider"
                                    },
                                    "minecraft:multishot": {
                                        "description": "Number provider specifying the enchantment level.",
                                        "$ref": "#/definitions/LootTableNumberProvider"
                                    },
                                    "minecraft:piercing": {
                                        "description": "Number provider specifying the enchantment level.",
                                        "$ref": "#/definitions/LootTableNumberProvider"
                                    },
                                    "minecraft:power": {
                                        "description": "Number provider specifying the enchantment level.",
                                        "$ref": "#/definitions/LootTableNumberProvider"
                                    },
                                    "minecraft:projectile_protection": {
                                        "description": "Number provider specifying the enchantment level.",
                                        "$ref": "#/definitions/LootTableNumberProvider"
                                    },
                                    "minecraft:protection": {
                                        "description": "Number provider specifying the enchantment level.",
                                        "$ref": "#/definitions/LootTableNumberProvider"
                                    },
                                    "minecraft:punch": {
                                        "description": "Number provider specifying the enchantment level.",
                                        "$ref": "#/definitions/LootTableNumberProvider"
                                    },
                                    "minecraft:quick_charge": {
                                        "description": "Number provider specifying the enchantment level.",
                                        "$ref": "#/definitions/LootTableNumberProvider"
                                    },
                                    "minecraft:respiration": {
                                        "description": "Number provider specifying the enchantment level.",
                                        "$ref": "#/definitions/LootTableNumberProvider"
                                    },
                                    "minecraft:riptide": {
                                        "description": "Number provider specifying the enchantment level.",
                                        "$ref": "#/definitions/LootTableNumberProvider"
                                    },
                                    "minecraft:sharpness": {
                                        "description": "Number provider specifying the enchantment level.",
                                        "$ref": "#/definitions/LootTableNumberProvider"
                                    },
                                    "minecraft:silk_touch": {
                                        "description": "Number provider specifying the enchantment level.",
                                        "$ref": "#/definitions/LootTableNumberProvider"
                                    },
                                    "minecraft:smite": {
                                        "description": "Number provider specifying the enchantment level.",
                                        "$ref": "#/definitions/LootTableNumberProvider"
                                    },
                                    "minecraft:soul_speed": {
                                        "description": "Number provider specifying the enchantment level.",
                                        "$ref": "#/definitions/LootTableNumberProvider"
                                    },
                                    "minecraft:sweeping": {
                                        "description": "Number provider specifying the enchantment level.",
                                        "$ref": "#/definitions/LootTableNumberProvider"
                                    },
                                    "minecraft:thorns": {
                                        "description": "Number provider specifying the enchantment level.",
                                        "$ref": "#/definitions/LootTableNumberProvider"
                                    },
                                    "minecraft:unbreaking": {
                                        "description": "Number provider specifying the enchantment level.",
                                        "$ref": "#/definitions/LootTableNumberProvider"
                                    },
                                    "minecraft:vanishing_curse": {
                                        "description": "Number provider specifying the enchantment level.",
                                        "$ref": "#/definitions/LootTableNumberProvider"
                                    }
                                }
                            }
                        ]
                    },
                    "treasure": {
                        "description": "Determines whether treasure enchantments are allowed on",
                        "type": "boolean"
                    },
                    "levels": {
                        "description": "Number provider. Specifies the exact enchantment level to use.",
                        "$ref": "#/definitions/LootTableNumberProvider"
                    },
                    "destination": {
                        "description": "The type of generated structure to locate. Accepts any of the StructureTypes used by the /locate command (case insensitive)",
                        "type": "string"
                    },
                    "decoration": {
                        "description": "The icon used to mark the destination on the map. Accepts any of the map icon text IDs (case insensitive). If `mansion` or `monument` is used, the color of the lines on the item texture changes to match the corresponding explorer map.",
                        "enum": [
                            "player",
                            "frame",
                            "blue_marker",
                            "target_x",
                            "target_point",
                            "player_off_map",
                            "player_off_limits",
                            "mansion",
                            "monument",
                            "banner_white",
                            "banner_orange",
                            "banner_magenta",
                            "banner_light_blue",
                            "banner_yellow",
                            "banner_lime",
                            "banner_pink",
                            "banner_gray",
                            "banner_light_gray",
                            "banner_cyan",
                            "banner_purple",
                            "banner_blue",
                            "banner_brown",
                            "banner_green",
                            "banner_red",
                            "banner_black",
                            "red_x"
                        ]
                    },
                    "zoom": {
                        "description": "The zoom level of the resulting map. Defaults to 2.",
                        "default": 2,
                        "type": "integer"
                    },
                    "search_radius": {
                        "description": "The size, in chunks, of the area to search for structures. The area checked is square, not circular. Radius 0 causes only the current chunk to be searched, radius 1 causes the current chunk and eight adjacent chunks to be searched, and so on. Defaults to 50.",
                        "type": "integer",
                        "default": 50
                    },
                    "skip_existing_chunks": {
                        "description": "",
                        "type": "boolean",
                        "default": true
                    },
                    "entity": {
                        "description": "Specifies an entity to be used for the player head. Set to this to use the entity that died or the player that gained the advancement, opened the container or broke the block, killer for the killer, or killer_player for a killer that is a player.",
                        "enum": [
                            "this",
                            "killer",
                            "killer_player"
                        ]
                    },
                    "limit": {
                        "description": "Number provider. Specifies the number of additional items per level of looting. Note the number may be fractional, rounded after multiplying by the looting level.",
                        "$ref": "#/definitions/LootTableNumberProvider"
                    },
                    "count": {
                        "description": "Specifies the number of additional items per level of looting. Note the number may be fractional, rounded after multiplying by the looting level. Specifies the stack size to set.",
                        "$ref": "#/definitions/LootTableNumberProvider"
                    },
                    "modifiers": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "default": {},
                            "properties": {
                                "name": {
                                    "description": "Name of the modifier.",
                                    "type": "string"
                                },
                                "attribute": {
                                    "description": "The name of the attribute this modifier is to act upon.",
                                    "type": "string"
                                },
                                "operation": {
                                    "description": "Must be either \"addition\", \"multiply_base\" or \"multiply_total\".",
                                    "enum": [
                                        "addition",
                                        "multiply_base",
                                        "multiply_total"
                                    ]
                                },
                                "amount": {
                                    "description": "Number provider. Specifies the amount of the modifier.",
                                    "$ref": "#/definitions/LootTableNumberProvider"
                                },
                                "id": {
                                    "description": "Optional : UUID of the modifier following. If none specified, a new UUID is generated.",
                                    "type": "string"
                                },
                                "slot": {
                                    "description": "Slots the item must be in for the modifier to take effect, this value can be one of the following : \"mainhand\", \"offhand\", \"feet\", \"legs\", \"chest\", or \"head\".",
                                    "anyOf": [
                                        {
                                            "type": "string",
                                            "enum": [
                                                "mainhand",
                                                "offhand",
                                                "feet",
                                                "legs",
                                                "chest",
                                                "head"
                                            ]
                                        },
                                        {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "enum": [
                                                    "mainhand",
                                                    "offhand",
                                                    "feet",
                                                    "legs",
                                                    "chest",
                                                    "head"
                                                ]
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "patterns": {
                        "description": "List of patterns.",
                        "type": "array",
                        "items": {
                            "type": "object",
                            "default": {},
                            "properties": {
                                "pattern": {
                                    "description": "The pattern type. For example `square_bottom_left`.",
                                    "enum": [
                                        "base",
                                        "square_bottom_left",
                                        "square_bottom_right",
                                        "square_top_left",
                                        "square_top_right",
                                        "stripe_bottom",
                                        "stripe_top",
                                        "stripe_left",
                                        "stripe_right",
                                        "stripe_center",
                                        "stripe_middle",
                                        "stripe_downright",
                                        "stripe_downleft",
                                        "small_stripes",
                                        "cross",
                                        "straight_cross",
                                        "triangle_bottom",
                                        "triangle_top",
                                        "triangles_bottom",
                                        "triangles_top",
                                        "diagonal_left",
                                        "diagonal_up_right",
                                        "diagonal_up_left",
                                        "diagonal_right",
                                        "circle",
                                        "rhombus",
                                        "half_vertical",
                                        "half_horizontal",
                                        "half_vertical_right",
                                        "half_horizontal_bottom",
                                        "border",
                                        "curly_border",
                                        "gradient",
                                        "gradient_up",
                                        "bricks",
                                        "globe",
                                        "creeper",
                                        "skull",
                                        "flower",
                                        "mojang",
                                        "piglin"
                                    ]
                                },
                                "color": {
                                    "description": "The color for this pattern. One of `white`, `orange`, `magenta`, `light_blue`, `yellow`, `lime`, `pink`, `gray`, `light_gray`, `cyan`, `purple`, `blue`, `brown`, `green`, `red`, `black`.",
                                    "$ref": "https://raw.githubusercontent.com/legopitstop/JSON-Schemas/main/minecraft/common_colors.json#/definitions/MinecraftCommonColorEnum"
                                }
                            }
                        }
                    },
                    "append": {
                        "description": "Optional. If true, new patterns will be appended to existing ones.",
                        "type": "boolean"
                    },
                    "entries": {
                        "description": "The entries to use as contents.",
                        "type": "array"
                    },
                    "add": {
                        "description": "Optional. If `true`, change will be relative to current count/damage.",
                        "type": "boolean"
                    },
                    "damage": {
                        "description": "Number provider. Specifies the damage fraction to set (1.0 is undamaged, 0.0 is zero durability left).",
                        "$ref": "#/definitions/LootTableNumberProvider"
                    },
                    "name": {
                        "anyOf": [
                            {
                                "description": "function=set_loot_table Specifies the resource location of the loot table to be used.",
                                "type": "string"
                            },
                            {
                                "description": "function=set_name A JSON text component name, allowing color, translations, etc.",
                                "$ref": "https://raw.githubusercontent.com/legopitstop/JSON-Schemas/main/minecraft/raw_text_format.json"
                            }
                        ]
                    },
                    "seed": {
                        "description": "Optional. Specifies the loot table seed. If absent or set to 0, a random seed will be used.",
                        "type": "integer",
                        "default": 0
                    },
                    "lore": {
                        "description": "List of JSON text components. Each list entry represents one line of the lore.",
                        "type": "array",
                        "items": {
                            "type": "object",
                            "default": {},
                            "$ref": "https://raw.githubusercontent.com/legopitstop/JSON-Schemas/main/minecraft/raw_text_format.json"
                        }
                    },
                    "tag": {
                        "description": "Tag string to add, similar to those used by commands. Note that the first bracket is required and quotation marks need to be escaped using a backslash (\\)",
                        "type": "string"
                    },
                    "set_stew_effect": {
                        "description": "Sets the status effects for suspicious stew.",
                        "type": "object",
                        "default": {},
                        "properties": {
                            "effects": {
                                "description": "The effects to apply.",
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "default": {},
                                    "properties": {
                                        "type": {
                                            "description": "The effect ID.",
                                            "type": "string"
                                        },
                                        "duration": {
                                            "description": " Number provider. The duration of the effect.",
                                            "$ref": "#/definitions/LootTableNumberProvider"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "conditions": {
                        "description": "Determines conditions for this function to be applied. If multiple conditions are specified, all must pass.",
                        "type": "array",
                        "items": {
                            "type": "object",
                            "default": {},
                            "properties": {
                                "condition": {
                                    "description": "Namespaced ID of condition.",
                                    "enum": [
                                        "alternative",
                                        "block_state_property",
                                        "damage_source_properties",
                                        "entity_properties",
                                        "entity_scores",
                                        "inverted",
                                        "killed_by_player",
                                        "location_check",
                                        "match_tool",
                                        "random_chance",
                                        "random_chance_with_looting",
                                        "reference",
                                        "survives_explosion",
                                        "table_bonus",
                                        "time_check",
                                        "weather_check",
                                        "value_check"
                                    ]
                                },
                                "terms": {
                                    "description": "A list of conditions to join using 'or'.",
                                    "$ref": "#/properties/functions/items/properties/conditions/items/properties"
                                },
                                "block": {
                                    "description": "A block ID. The test fails if the block doesn't match.",
                                    "type": "string"
                                },
                                "properties": {
                                    "description": "(Optional) A map of block property names to values. All values are strings. The test fails if the block doesn't match.",
                                    "type": "object",
                                    "default": {}
                                },
                                "predicate": {
                                    "description": "Predicate applied to the damage source.",
                                    "type": "object",
                                    "default": {},
                                    "properties": {
                                        "bypasses_armor": {
                                            "description": "Checks if the damage bypassed the armor of the player (suffocation damage predominantly).",
                                            "type": "boolean"
                                        },
                                        "bypasses_invulnerability": {
                                            "description": "Checks if the damage bypassed the invulnerability status of the player (void or /kill damage).",
                                            "type": "boolean"
                                        },
                                        "bypasses_magic": {
                                            "description": "Checks if the damage was caused by starvation.",
                                            "type": "boolean"
                                        },
                                        "is_explosion": {
                                            "description": "Checks if the damage originated from an explosion.",
                                            "type": "boolean"
                                        },
                                        "is_fire": {
                                            "description": "Checks if the damage originated from fire.",
                                            "type": "boolean"
                                        },
                                        "is_magic": {
                                            "description": "Checks if the damage originated from magic.",
                                            "type": "boolean"
                                        },
                                        "is_projectile": {
                                            "description": "Checks if the damage originated from a projectile.",
                                            "type": "boolean"
                                        },
                                        "is_lightning": {
                                            "description": "Checks if the damage originated from lightning.",
                                            "type": "boolean"
                                        },
                                        "direct_entity": {
                                            "description": "The entity that was the direct cause of the damage.",
                                            "type": "object",
                                            "default": {},
                                            "properties": {
                                                "distance": {
                                                    "type": "object",
                                                    "default": {},
                                                    "properties": {
                                                        "absolute": {
                                                            "type": "object",
                                                            "default": {},
                                                            "properties": {
                                                                "max": {
                                                                    "description": "The maximum value.",
                                                                    "type": "integer"
                                                                },
                                                                "min": {
                                                                    "description": "The minimum value.",
                                                                    "type": "integer"
                                                                }
                                                            }
                                                        },
                                                        "horizontal": {
                                                            "type": "object",
                                                            "default": {},
                                                            "properties": {
                                                                "max": {
                                                                    "description": "The maximum value.",
                                                                    "type": "integer"
                                                                },
                                                                "min": {
                                                                    "description": "The minimum value.",
                                                                    "type": "integer"
                                                                }
                                                            }
                                                        },
                                                        "x": {
                                                            "type": "object",
                                                            "default": {},
                                                            "properties": {
                                                                "max": {
                                                                    "description": "The maximum value.",
                                                                    "type": "integer"
                                                                },
                                                                "min": {
                                                                    "description": "The minimum value.",
                                                                    "type": "integer"
                                                                }
                                                            }
                                                        },
                                                        "y": {
                                                            "type": "object",
                                                            "default": {},
                                                            "properties": {
                                                                "max": {
                                                                    "description": "The maximum value.",
                                                                    "type": "integer"
                                                                },
                                                                "min": {
                                                                    "description": "The minimum value.",
                                                                    "type": "integer"
                                                                }
                                                            }
                                                        },
                                                        "z": {
                                                            "type": "object",
                                                            "default": {},
                                                            "properties": {
                                                                "max": {
                                                                    "description": "The maximum value.",
                                                                    "type": "integer"
                                                                },
                                                                "min": {
                                                                    "description": "The minimum value.",
                                                                    "type": "integer"
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "effects": {
                                                    "type": "object",
                                                    "default": {},
                                                    "properties": {
                                                        "*": {
                                                            "type": "object",
                                                            "default": {},
                                                            "properties": {
                                                                "ambient": {
                                                                    "description": "Whether the effect is from a beacon.",
                                                                    "type": "boolean"
                                                                },
                                                                "amplifier": {
                                                                    "description": "The effect amplifier.",
                                                                    "anyOf": [
                                                                        {
                                                                            "type": "integer"
                                                                        },
                                                                        {
                                                                            "type": "object",
                                                                            "default": {},
                                                                            "properties": {
                                                                                "min": {
                                                                                    "description": "The minimum value.",
                                                                                    "type": "integer"
                                                                                },
                                                                                "max": {
                                                                                    "description": "The maximum value.",
                                                                                    "type": "integer"
                                                                                }
                                                                            }
                                                                        }
                                                                    ]
                                                                },
                                                                "duration": {
                                                                    "description": "The effect duration in ticks.",
                                                                    "anyOf": [
                                                                        {
                                                                            "type": "integer"
                                                                        },
                                                                        {
                                                                            "type": "object",
                                                                            "default": {},
                                                                            "properties": {
                                                                                "min": {
                                                                                    "description": "The minimum value.",
                                                                                    "type": "integer"
                                                                                },
                                                                                "max": {
                                                                                    "description": "The maximum value.",
                                                                                    "type": "integer"
                                                                                }
                                                                            }
                                                                        }
                                                                    ]
                                                                },
                                                                "visible": {
                                                                    "description": "Whether the effect has visible particles.",
                                                                    "type": "boolean"
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "equipment": {
                                                    "type": "object",
                                                    "default": {},
                                                    "properties": {
                                                        "mainhand": {
                                                            "$ref": "#/definitions/CommonItemTags"
                                                        },
                                                        "offhand": {
                                                            "$ref": "#/definitions/CommonItemTags"
                                                        },
                                                        "head": {
                                                            "$ref": "#/definitions/CommonItemTags"
                                                        },
                                                        "chest": {
                                                            "$ref": "#/definitions/CommonItemTags"
                                                        },
                                                        "legs": {
                                                            "$ref": "#/definitions/CommonItemTags"
                                                        },
                                                        "feet": {
                                                            "$ref": "#/definitions/CommonItemTags"
                                                        }
                                                    }
                                                },
                                                "flags": {
                                                    "type": "object",
                                                    "default": {},
                                                    "properties": {
                                                        "is_on_fire": {
                                                            "description": "Test whether the entity is or is not on fire.",
                                                            "type": "boolean"
                                                        },
                                                        "is_sneaking": {
                                                            "description": "Test whether the entity is or is not sneaking.",
                                                            "type": "boolean"
                                                        },
                                                        "is_sprinting": {
                                                            "description": "Test whether the entity is or is not sprinting.",
                                                            "type": "boolean"
                                                        },
                                                        "is_swimming": {
                                                            "description": "Test whether the entity is or is not swimming.",
                                                            "type": "boolean"
                                                        },
                                                        "is_baby": {
                                                            "description": "Test whether the entity is or is not a baby variant.",
                                                            "type": "boolean"
                                                        }
                                                    }
                                                },
                                                "location": {
                                                    "type": "object",
                                                    "default": {},
                                                    "properties": {
                                                        "biome": {
                                                            "type": "string",
                                                            "$ref": "https://raw.githubusercontent.com/legopitstop/JSON-Schemas/main/minecraft/biomes.json#/definitions/MinecraftBiomeEnum"
                                                        },
                                                        "block": {
                                                            "type": "string",
                                                            "properties": {
                                                                "block": {
                                                                    "description": "The block ID.",
                                                                    "type": "string"
                                                                },
                                                                "tag": {
                                                                    "description": "The block Tag.",
                                                                    "type": "string"
                                                                },
                                                                "nbt": {
                                                                    "description": "The block NBT.",
                                                                    "type": "string"
                                                                },
                                                                "state": {
                                                                    "description": "A map of block property names to values. Test will fail if the block doesn't match.",
                                                                    "additionalProperties": {
                                                                        "anyOf": [
                                                                            {
                                                                                "type": [
                                                                                    "string",
                                                                                    "number",
                                                                                    "boolean"
                                                                                ]
                                                                            },
                                                                            {
                                                                                "type": "object",
                                                                                "default": {},
                                                                                "properties": {
                                                                                    "min": {
                                                                                        "description": "A minimum value.",
                                                                                        "type": "integer"
                                                                                    },
                                                                                    "max": {
                                                                                        "description": "A maximum value.",
                                                                                        "type": "integer"
                                                                                    }
                                                                                }
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "dimension": {
                                                            "description": "The dimension the entity is currently in.",
                                                            "type": "string"
                                                        },
                                                        "feature": {
                                                            "description": "Name of a structure.",
                                                            "type": "string",
                                                            "$ref": "https://raw.githubusercontent.com/legopitstop/JSON-Schemas/main/minecraft/structure_features.json#/definitions/MinecraftStructureEnum"
                                                        },
                                                        "fluid": {
                                                            "type": "object",
                                                            "default": {},
                                                            "properties": {
                                                                "fluid": {
                                                                    "description": "The fluid ID.",
                                                                    "type": "string"
                                                                },
                                                                "tag": {
                                                                    "description": "The fluid Tag.",
                                                                    "type": "string"
                                                                },
                                                                "state": {
                                                                    "description": "A map of fluid property names to values. Test will fail if the fluid doesn't match.",
                                                                    "additionalProperties": {
                                                                        "anyOf": [
                                                                            {
                                                                                "type": [
                                                                                    "string",
                                                                                    "number",
                                                                                    "boolean"
                                                                                ]
                                                                            },
                                                                            {
                                                                                "type": "object",
                                                                                "default": {},
                                                                                "properties": {
                                                                                    "min": {
                                                                                        "description": "A minimum value.",
                                                                                        "type": "integer"
                                                                                    },
                                                                                    "max": {
                                                                                        "description": "A maximum value.",
                                                                                        "type": "integer"
                                                                                    }
                                                                                }
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "light": {
                                                            "description": "The light at the location.",
                                                            "type": "object",
                                                            "default": {},
                                                            "properties": {
                                                                "light": {
                                                                    "description": "The light Level of visible light. Calculated using: (max(sky-darkening,block)).",
                                                                    "anyOf": [
                                                                        {
                                                                            "type": "integer"
                                                                        },
                                                                        {
                                                                            "type": "object",
                                                                            "default": {},
                                                                            "properties": {
                                                                                "min": {
                                                                                    "description": "A minimum value.",
                                                                                    "type": "integer"
                                                                                },
                                                                                "max": {
                                                                                    "description": "A maximum value.",
                                                                                    "type": "integer"
                                                                                }
                                                                            }
                                                                        }
                                                                    ]
                                                                }
                                                            }
                                                        },
                                                        "position": {
                                                            "type": "object",
                                                            "default": {},
                                                            "properties": {
                                                                "x": {
                                                                    "description": "The x position.",
                                                                    "anyOf": [
                                                                        {
                                                                            "type": "integer"
                                                                        },
                                                                        {
                                                                            "type": "object",
                                                                            "default": {},
                                                                            "properties": {
                                                                                "min": {
                                                                                    "description": "A minimum value.",
                                                                                    "type": "integer"
                                                                                },
                                                                                "max": {
                                                                                    "description": "A maximum value.",
                                                                                    "type": "integer"
                                                                                }
                                                                            }
                                                                        }
                                                                    ]
                                                                },
                                                                "y": {
                                                                    "description": "The y position.",
                                                                    "anyOf": [
                                                                        {
                                                                            "type": "integer"
                                                                        },
                                                                        {
                                                                            "type": "object",
                                                                            "default": {},
                                                                            "properties": {
                                                                                "min": {
                                                                                    "description": "A minimum value.",
                                                                                    "type": "integer"
                                                                                },
                                                                                "max": {
                                                                                    "description": "A maximum value.",
                                                                                    "type": "integer"
                                                                                }
                                                                            }
                                                                        }
                                                                    ]
                                                                },
                                                                "z": {
                                                                    "description": "The z position.",
                                                                    "anyOf": [
                                                                        {
                                                                            "type": "integer"
                                                                        },
                                                                        {
                                                                            "type": "object",
                                                                            "default": {},
                                                                            "properties": {
                                                                                "min": {
                                                                                    "description": "A minimum value.",
                                                                                    "type": "integer"
                                                                                },
                                                                                "max": {
                                                                                    "description": "A maximum value.",
                                                                                    "type": "integer"
                                                                                }
                                                                            }
                                                                        }
                                                                    ]
                                                                }
                                                            }
                                                        },
                                                        "smokey": {
                                                            "description": "True if the block is closely above a campfire or soul campfire.",
                                                            "type": "boolean"
                                                        }
                                                    }
                                                },
                                                "nbt": {
                                                    "description": "An NBT string.",
                                                    "type": "string"
                                                },
                                                "player": {
                                                    "description": "Player properties to be checked. Fails when entity is not a player.",
                                                    "type": "object",
                                                    "default": {},
                                                    "properties": {
                                                        "advancements": {
                                                            "type": "object",
                                                            "default": {},
                                                            "additionalProperties": {
                                                                "description": "An advancement ID.",
                                                                "anyOf": [
                                                                    {
                                                                        "type": "boolean"
                                                                    },
                                                                    {
                                                                        "type": "object",
                                                                        "default": {},
                                                                        "additionalProperties": {
                                                                            "description": "A criteria ID of the advancement.",
                                                                            "type": "boolean"
                                                                        }
                                                                    }
                                                                ]
                                                            }
                                                        },
                                                        "gamemode": {
                                                            "description": "The game mode of the player. Must be survival, adventure, creative or spectator.",
                                                            "enum": [
                                                                "survival",
                                                                "adventure",
                                                                "creative",
                                                                "spectator"
                                                            ]
                                                        },
                                                        "level": {
                                                            "description": "The experience level of the player.",
                                                            "anyOf": [
                                                                {
                                                                    "type": "integer"
                                                                },
                                                                {
                                                                    "type": "object",
                                                                    "default": {},
                                                                    "properties": {
                                                                        "min": {
                                                                            "description": "The minimum value.",
                                                                            "type": "integer"
                                                                        },
                                                                        "max": {
                                                                            "description": "The maximum value.",
                                                                            "type": "integer"
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "recipes": {
                                                            "description": "A map of recipes to check.",
                                                            "additionalProperties": {
                                                                "description": "A recipe ID. True if the recipe is known to the player.",
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "stats": {
                                                            "description": "List of statistics to match.",
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "default": {},
                                                                "properties": {
                                                                    "type": {
                                                                        "description": "The statistic base",
                                                                        "enum": [
                                                                            "minecraft:custom",
                                                                            "minecraft:crafted",
                                                                            "minecraft:used",
                                                                            "minecraft:broken",
                                                                            "minecraft:mined",
                                                                            "minecraft:killed",
                                                                            "minecraft:picked_up",
                                                                            "minecraft:dropped",
                                                                            "minecraft:killed_by"
                                                                        ]
                                                                    },
                                                                    "stat": {
                                                                        "description": "The statistic ID. Mostly mimics the criteria used for defining scoreboard objectives.",
                                                                        "type": "string"
                                                                    },
                                                                    "value": {
                                                                        "description": "The value of the statistic.",
                                                                        "anyOf": [
                                                                            {
                                                                                "type": "integer"
                                                                            },
                                                                            {
                                                                                "type": "object",
                                                                                "default": {},
                                                                                "properties": {
                                                                                    "min": {
                                                                                        "description": "The minimum value.",
                                                                                        "type": "integer"
                                                                                    },
                                                                                    "max": {
                                                                                        "description": "The maximum value.",
                                                                                        "type": "integer"
                                                                                    }
                                                                                }
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "team": {
                                                    "description": "The team the entity belongs to.",
                                                    "type": "string"
                                                },
                                                "type": {
                                                    "description": "An entity ID.",
                                                    "type": "string"
                                                },
                                                "targeted_entity": {
                                                    "description": "The entity which this entity is targeting for attacks.",
                                                    "$ref": "#/properties/functions/items/properties/conditions/items/properties/predicate/properties/direct_entity"
                                                },
                                                "vehicle": {
                                                    "description": "The vehicle that the entity is riding on.",
                                                    "$ref": "#/properties/functions/items/properties/conditions/items/properties/predicate/properties/direct_entity"
                                                }
                                            }
                                        },
                                        "source_entity": {
                                            "description": "Checks the entity that was the source of the damage (for example: The skeleton that shot the arrow).",
                                            "$ref": "#/properties/functions/items/properties/conditions/items/properties/predicate/properties/direct_entity"
                                        }
                                    }
                                },
                                "entity": {
                                    "description": "Specifies the entity to check for the condition. Set to this to use the entity that died or the player that gained the advancement, opened the container or broke the block, killer for the killer, or killer_player for a killer that is a player.",
                                    "enum": ["this","killer","killer_player"]
                                },
                                "scores": {
                                    "description": "Scores to check. All specified scores must pass for the condition to pass.",
                                    "additionalProperties": {
                                        "description": "Key name is the objective while the value is the exact score value required for the condition to pass.",
                                        "$ref": "#/definitions/LootTableNumberProvider"
                                    }
                                },
                                "term": {
                                    "description": "The condition to be negated.",
                                    "$ref": "#/properties/functions/items/properties/conditions/items"
                                },
                                "inverse": {
                                    "description": "If true, the condition passes if killer_player is not available.",
                                    "type": "boolean"
                                },
                                "offsetx": {
                                    "description": "optional offsets to location",
                                    "type": "integer"
                                },
                                "offsety": {
                                    "description": "optional offsets to location",
                                    "type": "integer"
                                },
                                "offsetz": {
                                    "description": "optional offsets to location",
                                    "type": "integer"
                                },
                                "chance": {
                                    "description": "Success rate as a number 0.0–1.0.",
                                    "type": "number",
                                    "minimum": 0,
                                    "maximum": 1
                                },
                                "looting_multiplier": {
                                    "description": "Looting adjustment to the base success rate. Formula is chance + (looting_level * looting_multiplier)",
                                    "type": "number"
                                },
                                "name": {
                                    "description": "The namespaced ID of the condition (predicate) referred to. A cyclic reference causes a parsing failure.",
                                    "type": "string"
                                },
                                "enchantment": {
                                    "description": "Id of enchantment.",
                                    "$ref": "https://raw.githubusercontent.com/legopitstop/JSON-Schemas/main/minecraft/enchantments.json#/definitions/MinecraftEnchantmentExample"
                                },
                                "chances": {
                                    "description": "List of probabilities for enchantment level, indexed from 0.",
                                    "type": "array"
                                },
                                "value": {
                                    "description": "The time value in ticks.",
                                    "$ref": "#/definitions/LootTableNumberProvider"
                                },
                                "period": {
                                    "description": "If present, time gets modulo-divided by this value (for example, if set to 24000, value operates on a time period of daytime ticks just like /time query daytime).",
                                    "type": "integer"
                                },
                                "raining": {
                                    "description": "If true, the condition evaluates to true only if it's raining.",
                                    "type": "boolean"
                                },
                                "thundering": {
                                    "description": "If true, the condition evaluates to true only if it's thundering.",
                                    "type": "boolean"
                                },
                                "range": {
                                    "description": "The range to check the value.",
                                    "$ref": "#/definitions/LootTableNumberProvider"
                                }
                            }
                        }
                    }
                }
            }
        },
        "pools": {
            "title": "LOOT_TABLE",
            "description": "A list of all pools for this loot table. Each pool used generates items from its list of items based on the number of rolls. Pools are applied in",
            "type": "array",
            "items": {
                "type": "object",
                "default": {},
                "properties": {
                    "conditions": {
                        "$ref": "#/properties/functions/items/properties/conditions"
                    },
                    "functions": {
                        "$ref": "#/properties/functions"
                    },
                    "rolls": {
                        "description": "Number Provider. Specifies the number of rolls on the pool.",
                        "$ref": "#/definitions/LootTableNumberProvider"
                    },
                    "bonus_rolls": {
                        "description": "Number Provider. Specifies the number of bonus rolls on the pool per point of luck. Rounded down after multiplying.",
                        "$ref": "#/definitions/LootTableNumberProvider"
                    },
                    "entries": {
                        "description": "A list of all things that can be produced by this pool. One entry is chosen per roll as a weighted random selection from all entries without failing conditions.",
                        "anyOf": [
                            {
                                "type": "object",
                                "properties": {
                                    "conditions": {
                                        "$ref": "#/properties/functions/items/properties/conditions"
                                    },
                                    "functions": {
                                        "$ref": "#/properties/functions"
                                    },
                                    "type": {
                                        "description": "Namespaced ID type of entry. Can be `item` for item entries, `tag` for item tags, `loot_table` to produce items from another loot table, `group` for child entries, `alternatives` to select one sub-entry from a list, `sequence` to select sub-entries until one entry cannot be granted, `dynamic` to generate block specific drops, or `empty` for an entry that generates nothing.",
                                        "enum": [
                                            "item",
                                            "tag",
                                            "loot_table",
                                            "group",
                                            "alternatives",
                                            "sequence",
                                            "dynamic",
                                            "empty"
                                        ]
                                    },
                                    "name": {
                                        "description": "For type 'item', ID name of the item to be produced, e.g. diamond. The default, if not changed by functions, is a stack of 1 of the default instance of the item.\nFor type 'tag' item tag to be used, e.g. arrows.\nFor type 'loot_table', loot table to be used, e.g. gameplay/fishing/junk.\nFor type 'dynamic', can be contents for block entity contents or self for banners and player skulls.",
                                        "type": "string"
                                    },
                                    "children": {
                                        "description": "For type 'group' a list of entries that are used to generate loot. Can be used for convenience, e.g. if one condition applies for multiple entries.\nFor type 'alternatives' a list of entries of which the first, and only the first, successful entry gets generated.\nFor type 'sequence' a list of entries that are used until the first entry fails. After an entry fails, no more entries of this list are generated",
                                        "$ref": "#/properties/pools"
                                    },
                                    "expand": {
                                        "description": "For type 'tag', if set to true, it chooses one item of the tag, each with the same weight and quality. If false, it generates one of each of the items in the tag. Required when type is 'tag'.",
                                        "type": "boolean"
                                    },
                                    "weight": {
                                        "description": "Determines how often this entry is chosen out of all the entries in the pool. Entries with higher weights are used more often (chance is this entry's weight⁄total of all considered entries' weights).",
                                        "type": "integer"
                                    },
                                    "quality": {
                                        "description": "Modifies the entry's weight based on the killing/opening/fishing player's luck attribute. Formula is floor( weight + (quality * generic.luck)).",
                                        "type": "integer"
                                    }
                                }
                            },
                            {
                                "type": "array",
                                "items": {
                                    "properties": {
                                        "conditions": {
                                            "$ref": "#/properties/functions/items/properties/conditions"
                                        },
                                        "functions": {
                                            "$ref": "#/properties/functions"
                                        },
                                        "type": {
                                            "description": "Namespaced ID type of entry. Can be `item` for item entries, `tag` for item tags, `loot_table` to produce items from another loot table, `group` for child entries, `alternatives` to select one sub-entry from a list, `sequence` to select sub-entries until one entry cannot be granted, `dynamic` to generate block specific drops, or `empty` for an entry that generates nothing.",
                                            "enum": [
                                                "item",
                                                "tag",
                                                "loot_table",
                                                "group",
                                                "alternatives",
                                                "sequence",
                                                "dynamic",
                                                "empty"
                                            ]
                                        },
                                        "name": {
                                            "description": "For type 'item', ID name of the item to be produced, e.g. diamond. The default, if not changed by functions, is a stack of 1 of the default instance of the item.\nFor type 'tag' item tag to be used, e.g. arrows.\nFor type 'loot_table', loot table to be used, e.g. gameplay/fishing/junk.\nFor type 'dynamic', can be contents for block entity contents or self for banners and player skulls.",
                                            "type": "string"
                                        },
                                        "children": {
                                            "description": "For type 'group' a list of entries that are used to generate loot. Can be used for convenience, e.g. if one condition applies for multiple entries.\nFor type 'alternatives' a list of entries of which the first, and only the first, successful entry gets generated.\nFor type 'sequence' a list of entries that are used until the first entry fails. After an entry fails, no more entries of this list are generated",
                                            "$ref": "#/properties/pools"
                                        },
                                        "expand": {
                                            "description": "For type 'tag', if set to true, it chooses one item of the tag, each with the same weight and quality. If false, it generates one of each of the items in the tag. Required when type is 'tag'.",
                                            "type": "boolean"
                                        },
                                        "weight": {
                                            "description": "Determines how often this entry is chosen out of all the entries in the pool. Entries with higher weights are used more often (chance is this entry's weight⁄total of all considered entries' weights).",
                                            "type": "integer"
                                        },
                                        "quality": {
                                            "description": "Modifies the entry's weight based on the killing/opening/fishing player's luck attribute. Formula is floor( weight + (quality * generic.luck)).",
                                            "type": "integer"
                                        }
                                    }
                                }
                            }
                        ]
                    }
                }
            }
        }
    },
    "default": {}
}