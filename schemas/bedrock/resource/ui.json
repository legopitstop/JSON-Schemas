{
    "id": "https://raw.githubusercontent.com/legopitstop/JSON-Schemas/main/schemas/bedrock/resource/ui.json",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "description": "\nSee https://wiki.bedrock.dev/json-ui/json-ui-intro.html#top",
    "definitions": {
        "BindingPropertyNames": {
            "enum": [
                "#visible",
                "#enabled",
                "#toggle_state",
                "#text",
                "#texture",
                "#zip_folder",
                "#texture_file_system",
                "#clip_ratio",
                "#grayscale",
                "#alpha",
                "#propagateAlpha",
                "#focus_identifier",
                "#focus_change_up",
                "#focus_change_down",
                "#focus_change_left",
                "#focus_change_right",
                "#focus_enabled",
                "#default_focus_precedence",
                "#modal",
                "#maximum_grid_items",
                "#collection_length",
                "#button_navigation",
                "#item_id_aux",
                "#color",
                "#progress_bar_visible",
                "#progress_bar_total_amount",
                "#progress_bar_current_amount"
            ]
        },
        "HardcodedVariables": {
            "examples": [
                "$trial",
                "$is_publish",
                "$is_pregame",
                "$is_xbox_live_enabled",
                "$desktop_screen",
                "$pocket_screen",
                "$win10_edition",
                "$pocket_edition",
                "$education_edition",
                "$education_edition_china",
                "$console_edition",
                "$osx_edition",
                "$nx_edition",
                "$fire_tv",
                "$gear_vr",
                "$supports_cross_platform_play_toggle",
                "$ignore_profile_switch_account_button",
                "$ignore_profile_sso_toggle",
                "$is_settopbox",
                "$is_reality_mode",
                "$storage_location_switch_enabled",
                "$thirdpartyconsole",
                "$is_ps4",
                "$psvr",
                "$supports_hand_controllers",
                "$is_ios or $ios",
                "$is_android",
                "$is_win10_arm",
                "$display_copyright_info",
                "$is_windows_10_mobile",
                "$device_must_be_removed_for_xbl_signin",
                "$build_platform_UWP",
                "$requires_xbl_signin_to_play",
                "$supports_user_configured_safezone",
                "$can_splitscreen"
            ]
        },
        "HardcodedHyperlinks": {
            "enum": [
                "https://aka.ms/MCBanned",
                "https://education.minecraft.net/eula",
                "https://aka.ms/meeterms",
                "https://aka.ms/privacy",
                "https://itunes.apple.com/us/app/minecraft/id479516143?mt=8",
                "https://aka.ms/MCMultiplayerHelp",
                "https://aka.ms/mcedulogs",
                "https://aka.ms/minecraftfb",
                "https://aka.ms/minecraftfbbeta",
                "https://aka.ms/minecraftedusupport",
                "https://www.minecraft.net/attribution/?hideChrome",
                "https://aka.ms/switchattribution",
                "https://www.minecraft.net/licensed-content/?hideChrome",
                "https://aka.ms/switchcontent",
                "https://social.xbox.com/changegamertag",
                "https://account.xbox.com/Settings"
            ]
        },
        "HardcodedButtonIDs": {
            "examples": [
                "button.menu_exit",
                "button.menu_cancel",
                "button.menu_inventory_cancel",
                "button.menu_ok",
                "button.menu_select",
                "button.controller_select",
                "button.menu_secondary_select",
                "button.controller_secondary_select",
                "button.controller_secondary_select_left",
                "button.controller_secondary_select_right",
                "button.controller_start",
                "button.menu_up",
                "button.menu_down",
                "button.menu_left",
                "button.menu_right",
                "button.menu_tab_left",
                "button.menu_tab_right",
                "button.menu_alternate_tab_left",
                "button.menu_alternate_tab_right",
                "button.menu_autocomplete",
                "button.menu_autocomplete_back",
                "button.controller_autocomplete",
                "button.controller_autocomplete_back",
                "button.menu_textedit_up",
                "button.menu_textedit_down",
                "button.controller_textedit_up",
                "button.controller_textedit_down",
                "button.menu_auto_place",
                "button.menu_inventory_drop",
                "button.menu_inventory_drop_all",
                "button.menu_clear",
                "button.chat",
                "button.mobeffects",
                "key.emote",
                "button.slot1",
                "button.slot2",
                "button.slot3",
                "button.slot4",
                "button.slot5",
                "button.slot6",
                "button.inventory_right",
                "button.inventory_left",
                "button.scoreboard",
                "button.hide_gui",
                "button.hide_tooltips",
                "button.hide_paperdoll",
                "button.slot0",
                "button.slot1",
                "button.slot2",
                "button.slot3",
                "button.slot4",
                "button.slot5",
                "button.slot6",
                "button.slot7",
                "button.slot8",
                "button.slot9",
                "button.menu_vr_realign",
                "any"
            ]
        },
        "SpecificScreenButtonIDs": {
            "examples": [
                "button.open_content_log_history",
                "button.clear_content_log_files",
                "button.clear_msa_token_button",
                "button.terms_and_conditions_popup",
                "button.credits",
                "button.unlink_msa",
                "button.attribute_popup",
                "button.licensed_content",
                "button.font_license",
                "button.tos_hyperlink",
                "button.privpol_hyperlink",
                "button.tos_popup",
                "button.privpol_popup",
                "button.binding_button",
                "button.reset_binding",
                "button.reset_keyboard_bindings",
                "button.view_account_errors",
                "button.prev_page",
                "button.next_page",
                "button.book_exit",
                "button.send",
                "button.chat_autocomplete",
                "button.chat_autocomplete_back",
                "button.chat_previous_message",
                "button.chat_next_message",
                "button.chat_menu_cancel",
                "command_block.input_minimize",
                "button.chat_autocomplete",
                "button.chat_autocomplete_back",
                "button.comment_options_close",
                "button.comment_feed_options_close",
                "button.close_comments",
                "button.comment_next_button",
                "button.comment_prev_button",
                "button.show_skip",
                "button.respawn_button",
                "button.main_menu_button",
                "button.rebind_mode",
                "button.dressing_room",
                "button.emote_selected",
                "button.select_emote_slot_0",
                "button.select_emote_slot_1",
                "button.select_emote_slot_2",
                "button.select_emote_slot_3",
                "button.select_emote_slot_4",
                "button.select_emote_slot_5",
                "button.iterate_selection_left",
                "button.iterate_selection_right",
                "button.feed_image",
                "button.newpost",
                "button.add_screenshot",
                "button.feed_comment",
                "button.feed_prev_button",
                "button.feed_next_button",
                "button.feed_new_post_close",
                "button.feed_options_close",
                "button.close_feed",
                "button.to_profile_or_skins_screen",
                "button.player_profile_card",
                "button.menu_continue",
                "button.menu_server_store",
                "button.screenshot",
                "button.menu_how_to_play",
                "button.menu_feedback",
                "button.menu_permission",
                "button.menu_invite_players",
                "button.menu_quit",
                "button.menu_feed",
                "button.pause_focus_filler",
                "button.wake_up_button",
                "button.add_friend",
                "button.add_member",
                "button.send_invites",
                "button.manage_feed_prev_button",
                "button.manage_feed_next_button",
                "button.manage_feed_ignore",
                "button.manage_feed_delete",
                "button.close_manage_feed",
                "button.anvil_take_all_place_all",
                "button.anvil_coalesce_stack",
                "button.cartography_result_take_all_place_all",
                "button.enchant",
                "button.grindstone_take_all_place_all",
                "button.grindstone_coalesce_stack",
                "button.loom_result_take_all_place_all",
                "button.pattern_select",
                "button.menu_skins",
                "button.to_profile_screen",
                "button.menu_courses",
                "button.menu_tutorial",
                "button.featured_world",
                "button.switch_accounts",
                "button.launch_editions",
                "button.edu_feedback",
                "button.edu_resources",
                "button.menu_buy_game",
                "button.menu_invite_notification",
                "button.search",
                "button.hotbar_inventory_button",
                "button.select_offer",
                "button.action_button",
                "button.create_realm",
                "button.switch_accounts",
                "button.hotbar_select",
                "button.hotbar_ok",
                "button.slot_pressed",
                "button.hotbar_inventory_left",
                "button.hotbar_inventory_right",
                "button.hide_gui_all",
                "button.hide_tooltips_hud",
                "button.hide_paperdoll_hud",
                "button.slot_1",
                "button.slot_2",
                "button.slot_3",
                "button.slot_4",
                "button.slot_5",
                "button.slot_6",
                "button.slot_7",
                "button.slot_8",
                "button.slot_9",
                "button.slot_0",
                "button.chat",
                "button.menu_continue",
                "user_confirm_dialog.escape",
                "user_confirm_dialog.left_button",
                "user_confirm_dialog.middle_button",
                "user_confirm_dialog.rightcancel_button",
                "button.view_skin",
                "button.delete_action",
                "button.exit_student",
                "button.play_video",
                "button.menu_store_error",
                "button.left_panel_tab_increment",
                "button.left_panel_tab_decrement",
                "button.right_panel_tab_increment",
                "button.right_panel_tab_decrement",
                "button.layout_increment",
                "button.layout_decrement",
                "button.is_hovered",
                "button.container_take_all_place_all",
                "button.container_take_half_place_one",
                "button.container_auto_place",
                "button.coalesce_stack",
                "button.shape_drawing",
                "button.destroy_selection",
                "button.clear_selected_recipe",
                "button.clear_hotbar_or_remove_one",
                "button.clear_hotbar_or_drop",
                "button.container_reset_held",
                "button.container_auto_place",
                "button.container_slot_hovered",
                "button.button_hovered",
                "button.shift_pane_focus",
                "button.focus_left",
                "button.focus_right",
                "button.filter_toggle_hovered",
                "button.drop_one",
                "button.cursor_drop_one",
                "button.drop_all",
                "button.cursor_drop_all",
                "button.search_bar_clear",
                "button.search_bar_selected",
                "button.search_bar_deselected",
                "button.menu_leave_screen",
                "button.turn_doll",
                "button.select_skin",
                "button.skin_hovered",
                "button.skin_unhovered",
                "button.leave",
                "button.leave_on_device"
            ]
        },
        "HardcodedCollectionNames": {
            "examples": [
                "book_pages",
                "pick_collection",
                "owned_list",
                "unowned_list",
                "auto_complete",
                "font_colors",
                "host_main_collection",
                "players_collection",
                "host_teleport_collection",
                "host_time_collection",
                "host_weather_collection",
                "realms_collection",
                "coin_purchase_grid",
                "comment_collection",
                "content_log_message",
                "world_list",
                "realm_list",
                "templates_collection",
                "feed_collection",
                "boss_bars",
                "chat_text_grid",
                "hotbar_items",
                "scoreboard_players",
                "scoreboard_scores",
                "left_helper_collection",
                "right_helper_collection",
                "online_platform_friends",
                "online_linked_account_friends",
                "online_xbox_live_friends",
                "offline_platform_friends",
                "offline_linked_account_friends",
                "offline_xbox_live_friends",
                "manage_feed_collection",
                "pack_errors",
                "mob_effects_collection",
                "players_collection",
                "factory_collection",
                "ratings_star_collection",
                "players_collection",
                "permissions_collection",
                "color_collection",
                "skin_pack_in_grid_item",
                "persona_featured_skin_pack_collection",
                "body_size_collection",
                "arm_size_collection",
                "category_featured_collection",
                "main_featured_collection",
                "profile_featured_collection",
                "custom_section_collection",
                "featured_collection",
                "foobar_collection",
                "emote_collection",
                "friends_network_worlds",
                "cross_platform_friends_network_worlds",
                "lan_network_worlds",
                "personal_realms",
                "friends_realms",
                "servers_network_worlds",
                "third_party_server_network_worlds",
                "server_screenshot_collection",
                "server_games_collection",
                "local_worlds",
                "legacy_worlds",
                "beta_retail_local_worlds",
                "personal_realms",
                "loading_personal_realms",
                "friends_realms",
                "loading_friends_realms",
                "photos",
                "required_resourcepacks",
                "optional_resourcepacks",
                "pending_invites_collection",
                "additional_realms_subscriptions_collection",
                "realms_branch_collection",
                "realms_backup_collection",
                "members_collection",
                "invited_friends_collection",
                "uninvited_friends_collection",
                "blocked_players_collection",
                "screenshotpicker_collection",
                "custom_form",
                "form_buttons",
                "custom_dropdown",
                "keyboard_standard_collection",
                "keyboard_full_collection",
                "gamepad_collection",
                "languages",
                "realms_plus_subscriptions_collection",
                "additional_realms_subscriptions_collection",
                "#selected_pack_items_global",
                "#available_pack_items_global",
                "#realms_pack_items_global",
                "#unowned_pack_items_global",
                "#invalid_pack_items_global",
                "#selected_pack_items_level",
                "#available_pack_items_level",
                "#realms_pack_items_level",
                "#unowned_pack_items_level",
                "#invalid_pack_items_level",
                "#selected_pack_items_addon",
                "#available_pack_items_addon",
                "#realms_pack_items_addon",
                "#unowned_pack_items_addon",
                "#invalid_pack_items_addon",
                "experimental_toggles",
                "world_panel",
                "world_template_panel",
                "resource_panel",
                "behavior_panel",
                "skin_panel",
                "cache_panel",
                "dependent_packs_panel",
                "dependency_panel",
                "save_size_grid",
                "save_offset_grid",
                "load_offset_grid",
                "export_size_grid",
                "export_offset_grid",
                "ugc_items",
                "world_templates",
                "realms_plus_templates",
                "custom_world_templates",
                "#suggested_offers_collection",
                "anvil_input_items",
                "anvil_material_items",
                "anvil_result_items",
                "beacon_payment_items",
                "speed",
                "haste",
                "resist",
                "jump",
                "strength",
                "regen",
                "extra",
                "confirm",
                "cancel",
                "brewing_fuel_item",
                "brewing_input_item",
                "brewing_result_items",
                "cartography_input_items",
                "cartography_additional_items",
                "cartography_result_items",
                "enchanting_input_items",
                "enchanting_lapis_items",
                "#enchant_buttons",
                "furnace_ingredient_items",
                "furnace_fuel_items",
                "furnace_output_items",
                "grindstone_input_items",
                "grindstone_additional_items",
                "grindstone_result_items",
                "horse_equip_items",
                "armor_items",
                "offhand_items",
                "crafting_input_items",
                "crafting_output_items",
                "recipe_book",
                "loom_input_items",
                "loom_dye_items",
                "loom_material_items",
                "loom_result_items",
                "patterns",
                "smithing_table_input_items",
                "smithing_table_material_items",
                "smithing_table_result_items",
                "stonecutter_input_items",
                "stonecutter_result_items",
                "stones",
                "trade2_ingredient1_item",
                "trade2_ingredient2_item",
                "trade2_result_item",
                "trade_item_1",
                "trade_item_2",
                "sell_item",
                "trades",
                "trade_tiers"
            ]
        },
        "HardcodedBindingNames": {
            "examples": [
                "#error_title_text",
                "#error_number_label",
                "#error_number",
                "#correlation_id_label",
                "#correlation_id",
                "#play_button_enabled",
                "#play_button_disabled",
                "#save_button_enabled",
                "#save_button_disabled",
                "#adhoc_title",
                "#sign_in_visible",
                "#sign_in_ios_visible",
                "#sign_in_button_visible",
                "#sign_in_ios_buttons_visible",
                "#authentication_message",
                "#confirm_button_enabled",
                "#edu_store_visible",
                "#edu_store_purchase_info",
                "#asking_to_buy_visible",
                "#confirming_purchase_visible",
                "#demo_choice_visible",
                "#eula_visible",
                "#popup_text",
                "#popup_message_student_text",
                "#popup_message_student_visible",
                "#generic_popup_link_visible",
                "#trial_purchase_link_visible",
                "#show_popup_dismiss_button",
                "#screenshot_path",
                "#is_photo_page",
                "#is_text_page",
                "#pick_grid_dimensions",
                "#page_number",
                "#title_text_box_item_name",
                "#author_editable",
                "#author_text_box_item_name",
                "#editable",
                "#viewing",
                "#signing",
                "#picking",
                "#exporting",
                "#page_visible",
                "#pick_item_visible",
                "#close_button_visible",
                "#edit_controls_active",
                "#finalize_button_enabled",
                "#image_texture",
                "#banner_visible",
                "#offer_title",
                "#keyart_path",
                "#keyart_texture_file_system",
                "#keyboard_being_use",
                "#keyboard_button_focus_override_up",
                "#keyboard_button_focus_override_down",
                "#keyboard_button_visible",
                "#send_button_visible",
                "#send_button_accessibility_text",
                "#chat_visible",
                "#message_text_box_content",
                "#text_edit_box_focus_override_up",
                "#text_edit_box_focus_override_down",
                "#auto_complete_item",
                "#auto_complete_text",
                "#get_grid_size",
                "#chat_title_text",
                "#chat_typeface_visible",
                "#realms_grid_dimension",
                "#world_button_focus_identifier",
                "#ten_player_button_visible",
                "#two_player_button_visible",
                "#realms_world_player_count",
                "#realms_game_online",
                "#realms_game_unavailable",
                "#realms_game_offline",
                "#bonus_coins",
                "#coins_without_bonus",
                "#coin_offer_texture_name",
                "#coin_offer_texture_file_system",
                "#bonus_coins_visible",
                "#price_text",
                "#coins_required_for_purchase",
                "#show_missing_coins",
                "#coin_offer_size",
                "#has_coin_offers",
                "#coin_loading_visible",
                "#maximized_input_visible",
                "#block_type_icon_texture",
                "#close_button_visible_binding_name",
                "#command_impulse_mode",
                "#command_chain_mode",
                "#command_repeat_mode",
                "#block_type_dropdown_toggle_label",
                "#block_type_dropdown_label_color_binding",
                "#block_type_dropdown_enabled",
                "#command_conditional_mode",
                "#command_unconditional_mode",
                "#condition_dropdown_toggle_label",
                "#condition_dropdown_enabled",
                "#command_always_on_mode",
                "#command_needs_redstone_mode",
                "#redstone_dropdown_enabled",
                "#command_hover_note",
                "#execute_on_first_tick_enabled",
                "#command_tick_delay",
                "#command_text_edit",
                "#command_output_text",
                "#previous_block_type_text",
                "#previous_block_type_text_color",
                "#previous_condition_mode_text",
                "#previous_redstone_mode_text",
                "#minimize_button_visible_binding_name",
                "#report_to_club_button_visible_feeditem",
                "#report_to_enforcement_button_visible_feeditem",
                "#delete_button_visible_feeditem",
                "#report_to_club_button_visible_comment",
                "#report_to_enforcement_button_visible_comment",
                "#delete_button_visible_comment",
                "#comment_buttons_visible",
                "#feed_comment_page_collection_length",
                "#comment_content",
                "#is_author_linked_account",
                "#content",
                "#text_visible",
                "#likes_and_comments",
                "#screenshot_texture",
                "#screenshot_texture_source",
                "#textpost_content",
                "#textpost_visible",
                "#comment_text_box",
                "#comment_platform_tag",
                "#comment_gamertag",
                "#likes_and_time_since_comment_post",
                "#author_gamertag",
                "#time_since_feed_post",
                "#author_platform_tag",
                "#author_gamertag",
                "#unlink_warning_text",
                "#unlink_consequences_acknowledged",
                "#confirm_0",
                "#confirm_0_enabled",
                "#confirm_1",
                "#confirm_1_enabled",
                "#confirm_2",
                "#confirm_2_enabled",
                "#confirm_3",
                "#confirm_3_enabled",
                "#content_log_text",
                "#messages_size",
                "#realm_button_text",
                "#realm_trial_available",
                "#cost_text",
                "#cost_text_green",
                "#cost_text_red",
                "#supports_netherite",
                "#extra_image_selection",
                "#empty_bottle_image_visible",
                "#empty_fuel_image_visible",
                "#brewing_bubbles_ratio",
                "#brewing_fuel_ratio",
                "#brewing_arrow_ratio",
                "#is_none_mode",
                "#is_clone_mode",
                "#is_rename_mode",
                "#is_basic_map_mode",
                "#is_locator_map_mode",
                "#is_extend_mode",
                "#is_locked_mode",
                "#output_description",
                "#selectable_dust_is_visible",
                "#unselectable_dust_is_visible",
                "#runes",
                "#cost",
                "#unselectable_button_visibility",
                "#selectable_button_visibility",
                "#show_selected_button_highlight",
                "#active_enchant",
                "#inactive_enchant",
                "#input_item_id",
                "#output_item_id",
                "#enchant_hint",
                "#player_level_color",
                "#player_level_info",
                "#enchant_error",
                "#furnace_arrow_ratio",
                "#furnace_flame_ratio",
                "#output_name",
                "#entity_id",
                "#equip_grid_dimensions",
                "#inv_grid_dimensions",
                "#sadle_slot_centered",
                "#has_saddle_slot",
                "#has_armor_slot",
                "#has_only_armor_slot",
                "#has_only_carpet_slot",
                "#has_armor_and_saddle_slot",
                "#has_carpet_and_saddle_slot",
                "#is_chested",
                "#renderer_tab_toggle",
                "#chest_tab_toggle",
                "#pattern_cell_background_texture",
                "#container_cell_background_texture",
                "#empty_image_visible",
                "#banner_patterns",
                "#banner_colors",
                "#pattern_selector_total_items",
                "#result_patterns",
                "#result_colors",
                "#is_right_tab_loom",
                "#is_left_tab_patterns",
                "#stone_cell_background_texture",
                "#container_cell_background_texture",
                "#item_stack_count",
                "#stone_selector_total_items",
                "#has_input_item",
                "#is_right_tab_stonecutter",
                "#is_left_tab_stones",
                "#name_label",
                "#trade_cell_background_texture",
                "#trade_item_count",
                "#single_slash_visible",
                "#double_slash_visible",
                "#second_trade_item_count",
                "#trade_price_different",
                "#trade_cross_out_visible",
                "#padding_around_sell_item",
                "#trade_possible",
                "#trade_toggle_state",
                "#trade_toggle_enabled",
                "#trade_tier_total",
                "#tier_name",
                "#is_tier_unlocked",
                "#is_left_tab_trade",
                "#show_level",
                "#tier_visible",
                "#trade_selector_total",
                "#has_second_buy_item",
                "#exp_bar_visible",
                "#exp_progress",
                "#exp_possible_progress",
                "#trade_details_button_1_visible",
                "#trade_details_button_2_visible",
                "#enchantment_details_button_visible",
                "#item_valid",
                "#title_text",
                "#body_text",
                "#hover_text",
                "#cross_out_icon",
                "#is_left_tab_inventory",
                "#selected_hover_text",
                "#tts_dialog_body",
                "#button_enabled",
                "#using_touch",
                "#close_button_visible"
            ]
        }
    },
    "properties": {
        "namespace": {
            "title": "resrouce.ui",
            "description": "Namespaces are identifiers for the UI files. They are used to access elements in some files across all other files. When adding a new namespace, it must have a unique name.",
            "type": "string"
        }
    },
    "additionalProperties": {
        "title": "resrouce.ui",
        "description": "When referencing elements from different namespaces, it must have the following format: [element_name]@[namespace_reference].[element_name_reference]",
        "properties": {
            "type": {
                "description": "`label` - for creating text objects\n`image` - for rendering images from a filepath provided\n`button` - for creating interactive and clickable elements\n`panel` - an empty container where you can store all other elements that may overlap to each other\n`stack_panel` - an empty container where you can store all other elements in a stack that doesn't overlap to each other\n`grid` - uses another element as a template, and then renders it repeatedly in multiple rows and columns\n`factory` - renders an element based off of another element, is capable of calling hardcoded values and variables\n`custom` - is paired with another property renderer which renders hardcoded JSON UI elements\n`screen` - elements that are called by the game directly, usually root panel elements",
                "enumDescription": [
                    "image_cycler",
                    "label_cycler",
                    "slider_box",
                    "carousel_label",
                    "selection_wheel",
                    "collection_panel",
                    "screen",
                    "image",
                    "panel",
                    "stack_panel",
                    "input_panel",
                    "grid",
                    "label",
                    "button",
                    "toggle",
                    "slider",
                    "edit_box",
                    "scroll_view",
                    "scroll_track",
                    "scrollbar_box",
                    "dropdown",
                    "factory",
                    "custom"

                ],
                "enum": [
                    "image_cycler",
                    "label_cycler",
                    "slider_box",
                    "carousel_label",
                    "selection_wheel",
                    "collection_panel",
                    "screen",
                    "image",
                    "panel",
                    "stack_panel",
                    "input_panel",
                    "grid",
                    "label",
                    "button",
                    "toggle",
                    "slider",
                    "edit_box",
                    "scroll_view",
                    "scroll_track",
                    "scrollbar_box",
                    "dropdown",
                    "factory",
                    "custom"
                ]
            },
            "visable": {
                "title": "CONTROL",
                "description": "If the UI element should be visible",
                "type": "boolean",
                "default": true
            },
            "enabled": {
                "title": "CONTROL",
                "description": "If true and if the UI element or any of its children have the locked state then they will be in the locked",
                "type": ["boolean", "string"],
                "default": true
            },
            "layer": {
                "title": "CONTROL",
                "description": "Z-Index/Layer (like zindex in CSS) relative to parent element. Higher layers will render above",
                "type": ["integer", "string"],
                "default": 0
            },
            "alpha": {
                "title": "CONTROL",
                "description": "Alpha/transparency of the element. It will only affect the UI element. Its children will be unaffected. If you want the alpha to apply for both the parent and children also use propagate_alpha",
                "type": ["number", "string"],
                "minium": 0.0,
                "maxium": 1.0,
                "default": 0.0
            },
            "propagate_alpha": {
                "title": "CONTROL",
                "description": "If alpha should not only apply to the parent if possible but also all its children",
                "type": "boolean",
                "default": false
            },
            "clips_children": {
                "title": "CONTROL",
                "description": "Cuts off visually and interactively everything beyond the bounderies of the UI element",
                "type": "boolean",
                "default": false
            },
            "allow_clipping": {
                "title": "CONTROL",
                "description": "If clips_children works in the UI element. Otherwise, it won't have any effect",
                "type": "boolean",
                "default": true
            },
            "clip_offset": {
                "title": "CONTROL",
                "description": "Offset from the start of the clipping",
                "type": "array",
                "minItems": 2,
                "maxItems": 2,
                "items": {
                    "type": "integer"
                },
                "default": [
                    0,
                    0
                ]
            },
            "clip_state_change_event": {
                "title": "CONTROL",
                "type": "string"
            },
            "enable_scissor_test": {
                "title": "CONTROL",
                "description": "https://www.khronos.org/opengl/wiki/Scissor_Test",
                "type": "boolean",
                "default": true
            },
            "property_bag": {
                "title": "CONTROL",
                "description": "Property bag contains properties/variables that are more related with the data than the actually structure and look of the UI element",
                "type": ["object", "string"],
                "default": {},
                "properties": {}
            },
            "selected": {
                "title": "CONTROL",
                "description": "If the text box is selected by default",
                "type": "boolean"
            },
            "use_child_anchors": {
                "title": "CONTROL",
                "description": "Use the anchor_from andanchor_to of the child of the UI element",
                "type": "boolean",
                "default": false
            },
            "controls": {
                "title": "CONTROL",
                "description": "For adding children to the element",
                "type": ["array", "string"],
                "default": [],
                "items": {}
            },
            "anims": {
                "title": "CONTROL",
                "description": "Array of the animation names",
                "type": ["array", "string"],
                "default": [],
                "items": {
                    "type": "string"
                }
            },
            "disable_anim_fast_forward": {
                "title": "CONTROL",
                "type": "boolean"
            },
            "animation_reset_name": {
                "title": "CONTROL",
                "type": "string"
            },
            "ignored": {
                "title": "CONTROL",
                "description": "If the UI element should be ignored",
                "type": ["boolean", "string"],
                "default": false
            },
            "variables": {
                "title": "CONTROL",
                "description": "A bunch of conditions that change the variables values",
                "type": [
                    "array",
                    "object",
                    "string"
                ],
                "default": [],
                "items": {}
            },
            "modifications": {
                "title": "CONTROL",
                "description": "Allows to modify the UI files of resource packs below (vanilla being the most bottom one)",
                "type": "array",
                "default": [],
                "items": {}
            },
            "grid_position": {
                "title": "CONTROL",
                "description": "Position that the control will take inside the grid. This also allows to modify specific grid items of a hardcoded grid",
                "type": "array",
                "minItems": 2,
                "maxItems": 2,
                "items": {}
            },
            "collection_index": {
                "title": "CONTROL",
                "description": "Index that the control takes in the collection",
                "type": "integer"
            },
            "size": {
                "title": "LAYOUT",
                "description": "Size of the UI element.\nPossible values:\n\"default\" (Default value which is \"100%\")\n0 (Number of pixels)\n\"0px\" (Number of pixels. It's the same as 0 but it's put inside a string with px at the end. It's used when you want to sum or subtract a percentage based value with a specific number of pixels. (e.g. \"75% + 12px\"))\n\"0%\" (Percentage of relative to the parent element)\n\"0%c\" (Percentage of the total width/height of the element children)\n\"0%cm\" (Percentage of the width/height of the biggest visible child of that element)\n\"0%sm\" (Percentage of the width/height of the sibling element)\n\"0%y\" (Percentage of the element height)\n\"0%x\" (Percentage of the element width)\n\"fill\" (Expands to the remaining width/height of the parent element)",
                "type": [
                    "array",
                    "string"
                ],
                "minItems": 2,
                "maxItems": 3,
                "items": {
                    "type": [
                        "number",
                        "string"
                    ]
                },
                "default": [
                    "default",
                    "default"
                ]
            },
            "max_size": {
                "title": "LAYOUT",
                "description": "Maximum size of the UI element can have",
                "type": ["array", "string"],
                "minItems": 2,
                "maxItems": 3,
                "items": {
                    "type": ["number", "string"]
                },
                "default": [
                    "default",
                    "default"
                ]
            },
            "min_size": {
                "title": "LAYOUT",
                "description": "Minimum size of the UI element can have",
                "type": ["array", "string"],
                "minItems": 2,
                "maxItems": 3,
                "items": {
                    "type": ["integer", "string"]
                },
                "default": [
                    "default",
                    "default"
                ]
            },
            "offset": {
                "title": "LAYOUT",
                "description": "Position of the UI element relative to the parent UI element. It's TopLeft based meaning the coordinates [0, 0] start at the top left of the screen.\n10- pixels\n\"10px\" - pixels\n\"50%\" - Width/height of the parent element\n\"50%x\" - Width of the element\n\"50%y\" - Height of the element",
                "type": ["array", "string"],
                "minItems": 2,
                "maxItems": 3,
                "items": {
                    "type": [
                        "number",
                        "string"
                    ]
                },
                "default": [
                    0,
                    0
                ]
            },
            "anchor_from": {
                "title": "LAYOUT",
                "description": "Anchor point in the parent element.",
                "type": "string",
                "examples": [
                    "center",
                    "top_left",
                    "top_middle",
                    "top_right",
                    "left_middle",
                    "right_middle",
                    "bottom_left",
                    "bottom_middle",
                    "bottom_right"
                ],
                "default": "center"
            },
            "anchor_to": {
                "title": "LAYOUT",
                "description": "Anchor point in the element.",
                "type": "string",
                "examples": [
                    "center",
                    "top_left",
                    "top_middle",
                    "top_right",
                    "left_middle",
                    "right_middle",
                    "bottom_left",
                    "bottom_middle",
                    "bottom_right"
                ],
                "default": "center"
            },
            "inherit_max_sibling_width": {
                "title": "LAYOUT",
                "description": "Use the maximum width of the sibling element",
                "type": "boolean",
                "default": false
            },
            "inherit_max_sibling_height": {
                "title": "LAYOUT",
                "description": "Use the maximum height of the sibling element",
                "type": "boolean",
                "default": false
            },
            "use_anchored_offset": {
                "title": "LAYOUT",
                "type": "boolean"
            },
            "contained": {
                "title": "LAYOUT",
                "type": "boolean"
            },
            "draggable": {
                "title": "LAYOUT",
                "type": "boolean",
                "default": false
            },
            "follows_cursor": {
                "title": "LAYOUT",
                "description": "Follows the cursor",
                "type": "boolean",
                "default": false
            },
            "bindings": {
                "title": "DATA BINDING",
                "description": "",
                "type": ["array", "string"],
                "default": [],
                "items": {
                    "type": "object",
                    "default": {},
                    "properties": {
                        "ignored": {
                            "description": "If binding should be ignored",
                            "type": ["boolean", "string"],
                            "default": false
                        },
                        "binding_type": {
                            "type": "string",
                            "examples": [
                                "global",
                                "view",
                                "collection",
                                "collection_details",
                                "none"
                            ]
                        },
                        "binding_name": {
                            "description": "Stores the value of the data binding name or condition with it",
                            "type": "string"
                        },
                        "binding_name_override": {
                            "description": "Name of the UI element property that will apply the stored value in binding_name",
                            "type": ["boolean","string"]
                        },
                        "binding_collection_name": {
                            "description": "Name of the collection of items to be used",
                            "type": "string"
                        },
                        "binding_collection_prefix": {
                            "type": "string"
                        },
                        "binding_condition": {
                            "description": "Condition for the data binding to happen.",
                            "type": "string",
                            "examples": [
                                "always",
                                "always_when_visible",
                                "visible",
                                "once",
                                "none",
                                "visibility_changed"
                            ]
                        },
                        "source_control_name": {
                            "description": "Name of the UI element to observe its property values",
                            "type": "string"
                        },
                        "source_property_name": {
                            "description": "Store the value of the property value of the UI element refered in source_control_name",
                            "type": "string"
                        },
                        "target_property_name": {
                            "description": "The UI element property that the stored value in source_property_name will be applied to",
                            "type": "string"
                        },
                        "resolve_sibling_scope": {
                            "type": ["boolean", "string"]
                        }
                    }
                }
            },
            "orientation": {
                "title": "STACK PANEL",
                "description": "Direction the elements stack inside stack_panel.",
                "enum": [
                    "vertical",
                    "horizontal"
                ],
                "default": "vertical"
            },
            "grid_dimensions": {
                "title": "GRID",
                "description": "Number of columns and rows the grid has",
                "type": ["array", "string"],
                "minItems": 2,
                "maxItems": 2,
                "items": {}
            },
            "maximum_grid_items": {
                "title": "GRID",
                "description": "Maximum number of items the grid will generate",
                "type": ["integer", "string"]
            },
            "grid_dimension_binding": {
                "title": "GRID",
                "description": "Binding name for grid dimensions",
                "type": "string"
            },
            "grid_rescaling_type": {
                "title": "GRID",
                "description": "Grid rescaling orientation.",
                "enum": [
                    "vertical",
                    "horizontal",
                    "none"
                ]
            },
            "grid_fill_direction": {
                "title": "GRID",
                "enum": [
                    "vertical",
                    "horizontal",
                    "none"
                ]
            },
            "grid_item_template": {
                "title": "GRID",
                "description": "An element capable of handling collections\n(e.g. \"common.container_item\", \"container_items\", \"inventory_items\" and etc.)",
                "type": "string"
            },
            "precached_grid_item_count": {
                "title": "GRID",
                "type": "integer"
            },
            "text": {
                "title": "TEXT",
                "description": "Text content",
                "type": "string"
            },
            "color": {
                "title": "TEXT",
                "description": "Text color. RGB value from 0.0 to 1.0",
                "minItems": 3,
                "maxItems": 4,
                "items": {
                    "type": "number",
                    "minium": 0.0,
                    "maxium": 1.0,
                    "default": 1.0
                },
                "default": [
                    1.0,
                    1.0,
                    1.0
                ]
            },
            "locked_color": {
                "title": "TEXT",
                "description": "Text color when a parent has enabled: false",
                "type": ["array", "string"],
                "minItems": 3,
                "maxItems": 3,
                "items": {
                    "type": "number",
                    "minium": 0.0,
                    "maxium": 1.0,
                    "default": 1.0
                },
                "default": [
                    1.0,
                    1.0,
                    1.0
                ]
            },
            "shadow": {
                "title": "TEXT",
                "description": "Text shadow",
                "type": ["boolean", "string"],
                "default": false
            },
            "hide_hyphen": {
                "title": "TEXT",
                "description": "Hide hyphen caused by word breaking",
                "type": "boolean",
                "default": false
            },
            "notify_on_ellipses": {
                "title": "TEXT",
                "description": "Array of names of the controls to notify when text gets or loses ellipses",
                "type": "array",
                "default": [],
                "items": {
                    "type": "string"
                }
            },
            "enable_profanity_filter": {
                "title": "TEXT",
                "description": "If \"bad\" words should be censored",
                "type": ["boolean", "string"],
                "default": false
            },
            "locked_alpha": {
                "title": "TEXT",
                "description": "Alpha/transparency of label when a parent has enabled: false",
                "type": ["number", "string"],
                "minium": 0.0,
                "maxium": 1.0,
                "default": 0.0
            },
            "font_size": {
                "title": "TEXT",
                "description": "Size of the text.",
                "type": "string",
                "examples": [
                    "small",
                    "normal",
                    "large",
                    "extra_large"
                ]
            },
            "font_scale_factor": {
                "title": "TEXT",
                "description": "Scale of the text",
                "type": ["number", "string"],
                "minium": 0.0,
                "maxium": 1.0,
                "default": 1.0
            },
            "localize": {
                "title": "TEXT",
                "description": "If text should be able to be translated",
                "type": "boolean",
                "default": false
            },
            "line_padding": {
                "title": "TEXT",
                "description": "Space between lines",
                "type": ["number", "string"]
            },
            "font_type": {
                "title": "TEXT",
                "description": "Font of the text.",
                "type": "string",
                "examples": [
                    "default",
                    "rune",
                    "unicode",
                    "smooth",
                    "MinecraftTen"
                ],
                "default": "default"
            },
            "backup_font_type": {
                "title": "TEXT",
                "description": "Font used if font_type didn't work",
                "type": "string",
                "examples": [
                    "default",
                    "rune",
                    "unicode",
                    "smooth",
                    "MinecraftTen"
                ],
                "default": "default"
            },
            "text_alignment": {
                "title": "TEXT",
                "description": "Text alignment direction. If it's not defined it will adjust automatically based on anchor_from and anchor_to",
                "type": "string",
                "examples": [
                    "center",
                    "top_left",
                    "top_middle",
                    "top_right",
                    "left_middle",
                    "right_middle",
                    "bottom_left",
                    "bottom_middle",
                    "bottom_right",
                    "left",
                    "right",
                    "top",
                    "bottom"
                ]
            },
            "texture": {
                "title": "SPRITE",
                "description": "Image path starting from pack root. (e.g. \"textures/ui/White\")",
                "type": "string"
            },
            "allow_debug_missing_texture": {
                "title": "SPRITE",
                "description": "Display the missing_texture if the texture is not found",
                "type": "boolean",
                "default": true
            },
            "uv": {
                "title": "SPRITE",
                "description": "Start position of the texture mapping",
                "type": ["array", "string"],
                "minItems": 2,
                "maxItems": 2,
                "items": {
                    "type": "integer"
                }
            },
            "uv_size": {
                "title": "SPRITE",
                "description": "Size of the texture mapping",
                "type": "array",
                "minItems": 2,
                "maxItems": 2,
                "items": {
                    "type": "integer"
                }
            },
            "texture_file_system": {
                "title": "SPRITE",
                "type": "string"
            },
            "nineslice_size": {
                "title": "SPRITE",
                "description": "9-slice. A method that divides an texture into 9 pieces. When resized the corners will stay in place and the rest will stretch",
                "type": "array",
                "minItems": 2,
                "maxItems": 4,
                "items": {
                    "type": "integer"
                }
            },
            "tiled": {
                "title": "SPRITE",
                "description": "If the texture will tile when the size of the UI element is bigger than the texture size.",
                "enum": [
                    "x",
                    "y",
                    true,
                    false
                ]
            },
            "tiled_scale": {
                "title": "SPRITE",
                "description": "Scale of the tile textures",
                "type": [
                    "array",
                    "boolean"
                ],
                "minItems": 2,
                "maxItems": 2,
                "items": {
                    "type": "number",
                    "minium": 0.0,
                    "maxium": 1.0,
                    "default": 0.0
                },
                "default": false
            },
            "clip_direction": {
                "title": "SPRITE",
                "description": "Start point position for the clip_ratio. If down, the image will begin to appear from the bottom.",
                "enum": [
                    "left",
                    "right",
                    "up",
                    "down",
                    "center"
                ]
            },
            "clip_ratio": {
                "title": "SPRITE",
                "description": "How much to clip. From 0.0 to 1.0",
                "type": "number",
                "minium": 0.0,
                "maxium": 1.0,
                "default": 0.0
            },
            "clip_pixelperfect": {
                "title": "SPRITE",
                "description": "If the clip should try to be the most pixel accurate possible",
                "type": "boolean"
            },
            "keep_ratio": {
                "title": "SPRITE",
                "description": "Keep ratio when resizing image",
                "type": "boolean",
                "default": true
            },
            "bilinear": {
                "title": "SPRITE",
                "description": "Use the bilinear function when resizing the image",
                "type": "boolean",
                "default": false
            },
            "fill": {
                "title": "SPRITE",
                "description": "Scratch the image to the size",
                "type": "boolean",
                "default": false
            },
            "$fit_to_width": {
                "title": "SPRITE",
                "type": "boolean"
            },
            "zip_folder": {
                "title": "SPRITE",
                "type": "string"
            },
            "grayscale": {
                "title": "SPRITE",
                "description": "Render image in black and white",
                "type": ["boolean", "string"],
                "default": false
            },
            "force_texture_reload": {
                "title": "SPRITE",
                "description": "Reload image when the texture path is changed",
                "type": "boolean"
            },
            "base_size": {
                "title": "SPRITE",
                "type": "array",
                "minItems": 2,
                "maxItems": 2,
                "items": {}
            },
            "button_mappings": {
                "title": "INPUT",
                "type": ["array", "string"],
                "items": {
                    "type": "object",
                    "default": {},
                    "properties": {
                        "ignored": {
                            "description": "If mapping should be ignored",
                            "type": ["boolean", "string"],
                            "default": false
                        },
                        "from_button_id": {
                            "description": "ID of the action that fires the event",
                            "type": "string"
                        },
                        "to_button_id": {
                            "description": "ID of the action to be executed when event is fired",
                            "type": "string"
                        },
                        "mapping_type": {
                            "enum": [
                                "global",
                                "pressed",
                                "double_pressed",
                                "focused"
                            ]
                        },
                        "scope": {
                            "type": "string",
                            "examples": [
                                "view",
                                "controller"
                            ]
                        },
                        "input_mode_condition": {
                            "enum": [
                                "not_gaze",
                                "not_gamepad",
                                "gamepad_and_not_gaze"
                            ]
                        },
                        "ignore_input_scope": {
                            "type": "boolean"
                        },
                        "consume_event": {
                            "type": "boolean"
                        },
                        "handle_select": {
                            "type": "boolean"
                        },
                        "handle_deselect": {
                            "type": "boolean"
                        },
                        "button_up_right_of_first_refusal": {
                            "type": ["boolean", "string"]
                        }
                    }
                }
            },
            "modal": {
                "title": "INPUT",
                "type": "boolean"
            },
            "inline_modal": {
                "title": "INPUT",
                "type": "boolean"
            },
            "always_listen_to_input": {
                "title": "INPUT",
                "type": "boolean"
            },
            "always_handle_pointer": {
                "title": "INPUT",
                "type": "boolean"
            },
            "always_handle_controller_direction": {
                "title": "INPUT",
                "type": "boolean"
            },
            "hover_enabled": {
                "title": "INPUT",
                "type": "boolean"
            },
            "prevent_touch_input": {
                "title": "INPUT",
                "type": "boolean"
            },
            "consume_event": {
                "title": "INPUT",
                "type": "boolean"
            },
            "consume_hover_events": {
                "title": "INPUT",
                "type": ["boolean", "string"]
            },
            "gesture_tracking_button": {
                "title": "INPUT",
                "type": "string"
            },
            "default_focus_precedence": {
                "title": "FOCUS",
                "type": ["integer", "string"]
            },
            "focus_enabled": {
                "title": "FOCUS",
                "description": "If the arrow keys or controller can focus the element",
                "type": ["boolean", "string"]
            },
            "focus_wrap_enabled": {
                "title": "FOCUS",
                "type": ["boolean", "string"]
            },
            "focus_magnet_enabled": {
                "title": "FOCUS",
                "type": ["boolean", "string"]
            },
            "focus_identifier": {
                "title": "FOCUS",
                "description": "Focus identifier for this element",
                "type": "string"
            },
            "focus_change_down": {
                "title": "FOCUS",
                "description": "Identifier (focus_identifier) of the focusable element that will recieve focus when on button.menu_down. If you want to prevent the focus to escape from the bottom use FOCUS_OVERRIDE_STOP",
                "type": "string"
            },
            "focus_change_up": {
                "title": "FOCUS",
                "description": "Identifier (focus_identifier) of the focusable element that will recieve focus when on button.menu_up. If you want to prevent the focus to escape from the top use FOCUS_OVERRIDE_STOP",
                "type": "string"
            },
            "focus_change_left": {
                "title": "FOCUS",
                "description": "Identifier (focus_identifier) of the focusable element that will recieve focus when on button.menu_left. If you want to prevent the focus to escape from the left use FOCUS_OVERRIDE_STOP",
                "type": "string"
            },
            "focus_change_right": {
                "title": "FOCUS",
                "description": "Identifier (focus_identifier) of the focusable element that will recieve focus when on button.menu_right. If you want to prevent the focus to escape from the right use FOCUS_OVERRIDE_STOP",
                "type": "string"
            },
            "focus_mapping": {
                "title": "FOCUS",
                "type": "array",
                "default": [],
                "items": {}
            },
            "focus_container": {
                "title": "FOCUS",
                "type": "boolean"
            },
            "use_last_focus": {
                "title": "FOCUS",
                "type": "boolean"
            },
            "focus_navigation_mode_left": {
                "title": "FOCUS",
                "type": "string",
                "examples": [
                    "none",
                    "stop",
                    "custom",
                    "contained"
                ]
            },
            "focus_navigation_mode_right": {
                "title": "FOCUS",
                "type": "string",
                "examples": [
                    "none",
                    "stop",
                    "custom",
                    "contained"
                ]
            },
            "focus_navigation_mode_down": {
                "title": "FOCUS",
                "type": "string",
                "examples": [
                    "none",
                    "stop",
                    "custom",
                    "contained"
                ]
            },
            "focus_navigation_mode_up": {
                "title": "FOCUS",
                "type": "string",
                "examples": [
                    "none",
                    "stop",
                    "custom",
                    "contained"
                ]
            },
            "focus_container_custom_left": {
                "title": "FOCUS",
                "type": ["array", "string"],
                "minItems": 1,
                "maxItems": 2,
                "items": {
                    "type": "object",
                    "default": {},
                    "properties": {
                        "other_focus_container_name": {
                            "description": "Name of the UI control that will receive focus when on button.menu_left, button.menu_right, button.menu_up or button.menu_down",
                            "type": "string"
                        },
                        "focus_id_inside": {
                            "description": "Identifier (focus_identifier) of the focusable child control of the other_focus_container_name that will recieve the focus",
                            "type": "string"
                        }
                    }
                }
            },
            "focus_container_custom_right": {
                "title": "FOCUS",
                "type": ["array", "string"],
                "minItems": 1,
                "maxItems": 2,
                "items": {
                    "type": "object",
                    "default": {},
                    "properties": {
                        "other_focus_container_name": {
                            "description": "Name of the UI control that will receive focus when on button.menu_left, button.menu_right, button.menu_up or button.menu_down",
                            "type": "string"
                        },
                        "focus_id_inside": {
                            "description": "Identifier (focus_identifier) of the focusable child control of the other_focus_container_name that will recieve the focus",
                            "type": "string"
                        }
                    }
                }
            },
            "focus_container_custom_down": {
                "title": "FOCUS",
                "type": ["array", "string"],
                "minItems": 1,
                "maxItems": 2,
                "items": {
                    "type": "object",
                    "default": {},
                    "properties": {
                        "other_focus_container_name": {
                            "description": "Name of the UI control that will receive focus when on button.menu_left, button.menu_right, button.menu_up or button.menu_down",
                            "type": "string"
                        },
                        "focus_id_inside": {
                            "description": "Identifier (focus_identifier) of the focusable child control of the other_focus_container_name that will recieve the focus",
                            "type": "string"
                        }
                    }
                }
            },
            "focus_container_custom_up": {
                "title": "FOCUS",
                "type": ["array", "string"],
                "minItems": 1,
                "maxItems": 2,
                "items": {
                    "type": "object",
                    "default": {},
                    "properties": {
                        "other_focus_container_name": {
                            "description": "Name of the UI control that will receive focus when on button.menu_left, button.menu_right, button.menu_up or button.menu_down",
                            "type": "string"
                        },
                        "focus_id_inside": {
                            "description": "Identifier (focus_identifier) of the focusable child control of the other_focus_container_name that will recieve the focus",
                            "type": "string"
                        }
                    }
                }
            },
            "default_control": {
                "title": "BUTTON, SLIDER BOX",
                "description": "Name of the child control that will be displayed only in the default state",
                "type": "string"
            },
            "hover_control": {
                "title": "BUTTON, SLIDER BOX",
                "description": "Name of the child control that will be displayed only in the hover state",
                "type": "string"
            },
            "pressed_control": {
                "title": "BUTTON",
                "description": "Name of the child control that will be displayed only in the pressed state",
                "type": "string"
            },
            "locked_control": {
                "title": "BUTTON, SLIDER BOX",
                "description": "Name of the child control that will be displayed only in the locked state",
                "type": "string"
            },
            "radio_toggle_group": {
                "title": "TOGGLE",
                "type": ["boolean", "string"]
            },
            "toggle_name": {
                "title": "TOGGLE",
                "description": "Identifier for the toggle group it belongs to. It can be a custom one.",
                "type": "string"
            },
            "toggle_default_state": {
                "title": "TOGGLE",
                "type": ["boolean", "string"]
            },
            "toggle_group_forced_index": {
                "title": "TOGGLE",
                "description": "Index of the toggle in its group",
                "type": ["integer", "string"]
            },
            "toggle_group_default_selected": {
                "title": "TOGGLE",
                "description": "Index of the default toggle of the its group",
                "type": ["integer", "string"]
            },
            "reset_on_focus_lost": {
                "title": "TOGGLE",
                "type": "boolean"
            },
            "toggle_on_hover": {
                "title": "TOGGLE",
                "type": "string"
            },
            "toggle_on_button": {
                "title": "TOGGLE",
                "type": "string"
            },
            "toggle_off_button": {
                "title": "TOGGLE",
                "type": "string"
            },
            "enable_directional_toggling": {
                "title": "TOGGLE",
                "type": ["boolean", "string"]
            },
            "toggle_grid_collection_name": {
                "title": "TOGGLE",
                "description": "Name of the collection the toggle belongs to",
                "type": "string"
            },
            "checked_control": {
                "title": "TOGGLE",
                "description": "Name of the child control that will be displayed only in the checked state",
                "type": "string"
            },
            "unchecked_control": {
                "title": "TOGGLE",
                "description": "Name of the child control that will be displayed only in the unchecked state",
                "type": "string"
            },
            "checked_hover_control": {
                "title": "TOGGLE",
                "description": "Name of the child control that will be displayed only in the checked hover state",
                "type": "string"
            },
            "unchecked_hover_control": {
                "title": "TOGGLE",
                "description": "Name of the child control that will be displayed only in the unchecked hover state",
                "type": "string"
            },
            "checked_locked_control": {
                "title": "TOGGLE",
                "description": "Name of the child control that will be displayed only in the checked locked state",
                "type": "string"
            },
            "unchecked_locked_control": {
                "title": "TOGGLE",
                "description": "Name of the child control that will be displayed only in the unchecked locked state",
                "type": "string"
            },
            "checked_locked_hover_control": {
                "title": "TOGGLE",
                "description": "Name of the child control that will be displayed only in the checked locked hover state",
                "type": "string"
            },
            "unchecked_locked_hover_control": {
                "title": "TOGGLE",
                "description": "Name of the child control that will be displayed only in the checked locked hover state",
                "type": "string"
            },
            "dropdown_name": {
                "title": "DROPDOWN",
                "description": "Identifier for the dropdown",
                "type": "string"
            },
            "dropdown_content_control": {
                "title": "DROPDOWN",
                "description": "Name of the child control that will behave as the root content panel",
                "type": "string"
            },
            "dropdown_area": {
                "title": "DROPDOWN",
                "description": "Name of the child control that will behave as the inside content",
                "type": "string"
            },
            "sound_name": {
                "title": "SOUND",
                "description": "Name of the sound defined in the RP/sounds/sound_definitions.json file that plays when the pressed event is fired",
                "type": "string"
            },
            "sound_volume": {
                "title": "SOUND",
                "description": "Volume of the sound",
                "type": "number",
                "minium": 0.0,
                "maxium": 1.0,
                "default": 0.0
            },
            "sound_pitch": {
                "title": "SOUND",
                "description": "Pitch of the sound",
                "type": "number",
                "minium": 0.0,
                "maxium": 1.0,
                "default": 0.0
            },
            "sounds": {
                "title": "SOUND",
                "description": "Array of the sounds to play when the pressed event is fired",
                "type": "array",
                "default": [],
                "items": {
                    "type": "object",
                    "default": {},
                    "properties": {
                        "sound_name": {
                            "description": "Name of the sound defined in the RP/sounds/sound_definitions.json file that plays when the pressed event is fired",
                            "type": "string"
                        },
                        "sound_volume": {
                            "description": "Volume of the sound",
                            "type": "number",
                            "minium": 0.0,
                            "maxium": 1.0,
                            "default": 0.0
                        },
                        "sound_pitch": {
                            "description": "Pitch of the sound",
                            "type": "number",
                            "minium": 0.0,
                            "maxium": 1.0,
                            "default": 0.0
                        },
                        "min_seconds_between_plays": {
                            "description": "Seconds of wait before the sound can be played again",
                            "type": "number",
                            "minium": 0.0,
                            "maxium": 1.0,
                            "default": 0.0
                        }
                    }
                }
            },
            "collection_name": {
                "title": "COLLECTION",
                "description": "Name of the collection to be used",
                "type": "string"
            },
            "text_box_name": {
                "title": "TEXT EDIT",
                "description": "Identifier for text box",
                "type": "string"
            },
            "text_edit_box_grid_collection_name": {
                "title": "TEXT EDIT",
                "description": "Name of the collection the edit_box belongs to",
                "type": "string"
            },
            "constrain_to_rect": {
                "title": "TEXT EDIT",
                "type": "boolean"
            },
            "enabled_newline": {
                "title": "TEXT EDIT",
                "description": "Allows multiline text",
                "type": "boolean"
            },
            "text_type": {
                "title": "TEXT EDIT",
                "description": "Type of characters that the user is allowed to type in th text field.",
                "type": "string",
                "examples": [
                    "ExtendedASCII",
                    "IdentifierChars",
                    "NumberChars"
                ]
            },
            "max_length": {
                "title": "TEXT EDIT",
                "description": "Maximum number of characters allow in the text field",
                "type": ["integer", "string"]
            },
            "text_control": {
                "title": "TEXT EDIT",
                "description": "Name of the child control that will be used for displaying the text",
                "type": "string"
            },
            "place_holder_control": {
                "title": "TEXT EDIT",
                "description": "Name of the child control that will be used for display the placeholder text",
                "type": "string"
            },
            "can_be_deselected": {
                "title": "TEXT EDIT",
                "type": "boolean"
            },
            "always_listening": {
                "title": "TEXT EDIT",
                "type": "boolean"
            },
            "virtual_keyboard_buffer_control": {
                "title": "TEXT EDIT",
                "type": "string"
            },
            "slider_track_button": {
                "title": "SLIDER",
                "description": "ID of the action for the slider track",
                "type": "string"
            },
            "slider_small_decrease_button": {
                "title": "SLIDER",
                "description": "ID of the action for the decrease slider",
                "type": "string"
            },
            "slider_small_increase_button": {
                "title": "SLIDER",
                "description": "ID of the action for the increase slider",
                "type": "string"
            },
            "slider_steps": {
                "title": "SLIDER",
                "description": "How many steps (or values) does the slider have",
                "type": ["integer", "string"]
            },
            "slider_direction": {
                "title": "SLIDER",
                "description": "Orientation of the slider movement.",
                "type": "string",
                "examples": [
                    "vertical",
                    "horizontal"
                ]
            },
            "slider_timeout": {
                "title": "SLIDER",
                "type": "number"
            },
            "slider_collection_name": {
                "title": "SLIDER",
                "description": "Name of the collection the slider belongs to",
                "type": "string"
            },
            "slider_name": {
                "title": "SLIDER",
                "description": "Identifier for the slider",
                "type": "string"
            },
            "slider_select_on_hover": {
                "title": "SLIDER",
                "description": "Focus slider when it's hovered",
                "type": ["boolean", "string"]
            },
            "slider_selected_button": {
                "title": "SLIDER",
                "description": "ID of the action for when the slider is selected",
                "type": "string"
            },
            "slider_deselected_button": {
                "title": "SLIDER",
                "description": "ID of the action for when the slider is deselected",
                "type": "string"
            },
            "slider_box_control": {
                "title": "SLIDER",
                "description": "Name of the child control that will behave as the slider thumb",
                "type": "string"
            },
            "background_control": {
                "title": "SLIDER",
                "description": "Name of the child control that will behave as the slider background",
                "type": "string"
            },
            "background_hover_control": {
                "title": "SLIDER",
                "description": "Name of the child control that will behave as the slider background on hover",
                "type": "string"
            },
            "progress_control": {
                "title": "SLIDER",
                "description": "Name of the child control that will behave as the slider background overlay for the slider progress",
                "type": "string"
            },
            "progress_hover_control": {
                "title": "SLIDER",
                "description": "Name of the child control that will behave as the slider background overlay for the slider progress on hover",
                "type": "string"
            },
            "scrollbar_track_button": {
                "title": "SCROLL VIEW",
                "description": "ID of the action for the track button",
                "type": "string"
            },
            "scrollbar_touch_button": {
                "title": "SCROLL VIEW",
                "description": "ID of the action for the touch input",
                "type": "string"
            },
            "scroll_speed": {
                "title": "SCROLL VIEW",
                "description": "Scrolling speed",
                "type": ["number", "string"]
            },
            "gesture_control_enabled": {
                "title": "SCROLL VIEW",
                "type": ["boolean", "string"]
            },
            "always_handle_scrolling": {
                "title": "SCROLL VIEW",
                "type": ["boolean", "string"]
            },
            "touch_mode": {
                "title": "SCROLL VIEW",
                "type": ["boolean", "string"]
            },
            "scrollbar_box": {
                "title": "SCROLL VIEW",
                "description": "Name of child UI element or nested UI element that will behave as the scrollbar thumb.",
                "type": "string"
            },
            "scrollbar_track": {
                "title": "SCROLL VIEW",
                "description": "Name of child UI element or nested UI element that will behave as the scrollbar track",
                "type": "string"
            },
            "scroll_view_port": {
                "title": "SCROLL VIEW",
                "description": "Name of child UI element that will behave as the view port",
                "type": "string"
            },
            "scroll_content": {
                "title": "SCROLL VIEW",
                "description": "Name of child UI element that will behave as the content root parent",
                "type": "string"
            },
            "scroll_box_and_track_panel": {
                "title": "SCROLL VIEW",
                "description": "Name of child UI element that will contain the scrollbox and track controls",
                "type": "string"
            },
            "jump_to_bottom_on_update": {
                "title": "SCROLL VIEW",
                "description": "Jump to the bottom when the scrolling panel has an update. For example, adds more children to it.",
                "type": ["boolean", "string"]
            },
            "renderer": {
                "title": "CUSTOM RENDERER",
                "enum": [
                    "bundle_renderer",
                    "dash_renderer",
                    "editor_gizmo_renderer",
                    "hover_text_renderer",
                    "3d_structure_renderer",
                    "splash_text_renderer",
                    "ui_holo_cursor",
                    "trial_time_renderer",
                    "panorama_renderer",
                    "actor_portrait_renderer",
                    "banner_pattern_renderer",
                    "live_player_renderer",
                    "web_view_renderer",
                    "hunger_renderer",
                    "bubbles_renderer",
                    "mob_effects_renderer",
                    "cursor_renderer",
                    "progress_indicator_renderer",
                    "camera_renderer",
                    "horse_jump_renderer",
                    "armor_renderer",
                    "horse_heart_renderer",
                    "heart_renderer",
                    "hotbar_cooldown_renderer",
                    "hotbar_renderer",
                    "hud_player_renderer",
                    "live_horse_renderer",
                    "holographic_postrenderer",
                    "enchanting_book_renderer",
                    "debug_screen_renderer",
                    "gradient_renderer",
                    "paper_doll_renderer",
                    "name_tag_renderer",
                    "flying_item_renderer",
                    "inventory_item_renderer",
                    "credits_renderer",
                    "vignette_renderer",
                    "progress_bar_renderer",
                    "debug_overlay_renderer",
                    "background_renderer",
                    "bohr_model_renderer"
                ]
            },
            "gradient_direction": {
                "title": "RENDERER: gradient_renderer",
                "enum": [
                    "vertical",
                    "horizontal"
                ]
            },
            "color1": {
                "title": "RENDERER: gradient_renderer",
                "type": ["array", "string"],
                "minItems": 3,
                "maxItems": 4,
                "items": {
                    "type": "number",
                    "minium": 0.0,
                    "maxium": 1.0,
                    "default": 0.0
                }
            },
            "color2": {
                "title": "RENDERER: gradient_renderer",
                "type": ["array", "string"],
                "minItems": 3,
                "maxItems": 4,
                "items": {
                    "type": "number",
                    "minium": 0.0,
                    "maxium": 1.0,
                    "default": 0.0
                }
            },
            "text_color": {
                "title": "RENDERER: name_tag_renderer",
                "type": "array",
                "minItems": 3,
                "maxItems": 4,
                "items": {
                    "type": "number",
                    "minium": 0.0,
                    "maxium": 1.0,
                    "default": 0.0
                }
            },
            "background_color": {
                "title": "RENDERER: name_tag_renderer",
                "type": "array",
                "minItems": 3,
                "maxItems": 4,
                "items": {
                    "type": "number",
                    "minium": 0.0,
                    "maxium": 1.0,
                    "default": 0.0
                }
            },
            "primary_color": {
                "title": "RENDERER: progress_bar_renderer",
                "type": "array",
                "minItems": 3,
                "maxItems": 4,
                "items": {
                    "type": "number",
                    "minium": 0.0,
                    "maxium": 1.0,
                    "default": 0.0
                }
            },
            "secondary_color": {
                "title": "RENDERER: progress_bar_renderer",
                "type": "array",
                "minItems": 3,
                "maxItems": 4,
                "items": {
                    "type": "number",
                    "minium": 0.0,
                    "maxium": 1.0,
                    "default": 0.0
                }
            },
            "camera_tilt_degrees": {
                "title": "RENDERER: paper_doll_renderer",
                "type": "number"
            },
            "starting_rotation": {
                "title": "RENDERER: paper_doll_renderer",
                "type": "number"
            },
            "use_selected_skin": {
                "title": "RENDERER: paper_doll_renderer",
                "type": "boolean"
            },
            "use_uuid": {
                "title": "RENDERER: paper_doll_renderer",
                "type": "boolean"
            },
            "use_skin_gui_scale": {
                "title": "RENDERER: paper_doll_renderer",
                "type": "boolean"
            },
            "use_player_paperdoll": {
                "title": "RENDERER: paper_doll_renderer",
                "type": "boolean"
            },
            "rotation": {
                "title": "RENDERER: paper_doll_renderer and panorama_renderer",
                "type": "string",
                "examples": [
                    "auto",
                    "gesture_x",
                    "custom_y"
                ]
            },
            "end_event": {
                "title": "RENDERER: credits_renderer",
                "type": "string"
            },
            "tts_toggle_on": {
                "description": "type=toggle",
                "type": "string"
            },
            "tts_toggle_off": {
                "description": "type=toggle",
                "type": "string"
            },
            "#toggle_state": {
                "description": "type=toggle",
                "type": "boolean"
            },
            "tts_value_changed": {
                "description": "type=slider"
            },
            "#slider_steps": {
                "description": "type=slider"
            },
            "#slider_value": {
                "description": "type=slider"
            },
            "slider_step_factory": {
                "description": "type=slider"
            },
            "focus_nagivation_mode_up": {
                "enum": [
                    "none",
                    "stop",
                    "custom",
                    "contained"
                ]
            },
            "focus_nagivation_mode_down": {
                "enum": [
                    "none",
                    "stop",
                    "custom",
                    "contained"
                ]
            },
            "focus_nagivation_mode_left": {
                "enum": [
                    "none",
                    "stop",
                    "custom",
                    "contained"
                ]
            },
            "focus_nagivation_mode_right": {
                "enum": [
                    "none",
                    "stop",
                    "custom",
                    "contained"
                ]
            },
            "tts_name": {
                "type": "string"
            },
            "tts_control_header": {
                "type": "string"
            },
            "tts_section_header": {
                "type": "string"
            },
            "tts_control_type_order_priority": {
                "type": ["number", "string"]
            },
            "tts_index_priority": {
                "type": ["number", "string"]
            },
            "tts_override_control_value": {
                "type": "string"
            },
            "tts_ignore_count": {
                "type": "boolean"
            },
            "tts_inherit_siblings": {
                "type": ["boolean", "string"]
            },
            "binding_type": {
                "enum": [
                    "collection",
                    "collection_details",
                    "view",
                    "global"
                ]
            },
            "binding_name": {
                "type": "string"
            },
            "source_control_name": {
                "description": "Name of the object to be evaluated",
                "type": "string"
            },
            "source_property_name": {
                "description": "Property name from the `source_control_name` objec",
                "type": "string"
            },
            "target_property_name": {
                "description": "Property that its value will be override by the `source_property_name` value",
                "type": "string"
            },
            "binding_name_override": {
                "description": "Property that its value will be override by the `binding_name` value",
                "type": "string"
            },
            "binding_collection_name": {
                "type": "string"
            },
            "binding_collection_prefix": {
                "type": "string"
            },
            "binding_condition": {
                "type": "string",
                "examples": [
                    "always",
                    "always_when_visable",
                    "once",
                    "visibility_changed",
                    "visible"
                ]
            },
            "resolve_sibling_scope": {
                "type": "boolean"
            },
            "from_button_id": {
                "description": "Button mappings can be applied to any kind of input elements (button, toggle, slider and input_panel) Button (action) id that fires"
            },
            "to_button_id": {
                "description": "Button mappings can be applied to any kind of input elements (button, toggle, slider and input_panel) button (action) id that results"
            },
            "handle_select": {
                "description": "Button mappings can be applied to any kind of input elements (button, toggle, slider and input_panel)",
                "type": "boolean"
            },
            "handle_deselect": {
                "description": "Button mappings can be applied to any kind of input elements (button, toggle, slider and input_panel)",
                "type": "boolean"
            },
            "mapping_type": {
                "description": "Button mappings can be applied to any kind of input elements (button, toggle, slider and input_panel)",
                "enum": [
                    "pressed",
                    "double_pressed",
                    "focused",
                    "global"
                ]
            },
            "scope": {
                "description": "Button mappings can be applied to any kind of input elements (button, toggle, slider and input_panel)",
                "enum": [
                    "view",
                    "controller"
                ]
            },
            "input_mode_condition": {
                "description": "Button mappings can be applied to any kind of input elements (button, toggle, slider and input_panel)",
                "enum": [
                    "gamepad_and_not_gaze",
                    "not_gaze"
                ]
            },
            "button_up_right_of_first_refusal": {
                "description": "Button mappings can be applied to any kind of input elements (button, toggle, slider and input_panel)",
                "type": "boolean"
            },
            "anim_type": {
                "description": "`alpha` - accepts float values, animates the opacity of the element\n`offset` - accepts an array, animates the position of the element relative to its anchor\n`size` - accepts an array, animates the size in ( width, height )\n`flip_book` - accepts integer values, animates the image in flipbook texture or frame by frame\n`uv` - accepts an array, animates the image depending on the UV texture\n`color` - accepts float RGB values from 0.0 to 1.0, animates the color of the element\n`wait` - accepts number values, used for waiting/staying purposes\n`aseprite_flip_book` - like a flip_book animation, uses sprite sheets. More info here\n`clip`",
                "enum": [
                    "alpha",
                    "offset",
                    "size",
                    "flip_book",
                    "uv",
                    "color",
                    "wait",
                    "aseprite_flip_book",
                    "clip"
                ]
            },
            "initial_uv": {
                "type": "array",
                "maxItems": 2,
                "minItems": 2,
                "items": {
                    "type": "number"
                }
            },
            "frame_count": {
                "type": ["number", "string"]
            },
            "frame_steps": {
                "type": "number"
            },
            "reversible": {
                "type": "boolean"
            },
            "scale_from_starting_alpha": {
                "type": "boolean"
            },
            "fps": {
                "description": "Number of frames per second",
                "type": "number"
            },
            "easing": {
                "enum": [
                    "linear",
                    "spring",
                    "in_sine",
                    "in_quart",
                    "in_quint",
                    "in_expo",
                    "out_expo",
                    "out_cubic",
                    "out_back",
                    "in_out_back",
                    "in_out_expo",
                    "out_bounce",
                    "in_bounce",
                    "in_out_circ",
                    "out_sine"
                ]
            },
            "duration": {
                "description": "Number. Duration of the animation in seconds",
                "type": ["number", "string"]
            },
            "from": {
                "description": "Number (`anim_type` alpha) or a size/offset array (`anim_type` size/offset)",
                "type": [
                    "array",
                    "number",
                    "string"
                ]
            },
            "to": {
                "description": "(`anim_type` alpha) or a size/offset array (`anim_type` size/offset)",
                "type": [
                    "array",
                    "number",
                    "string"
                ]
            },
            "destroy_at_end": {
                "description": "Name of the object to destroy (stop rendering/ignored) when the animation ends. Doesn’t require namespace",
                "type": "string"
            },
            "next": {
                "description": "Name of the animation that will play after this ends",
                "type": "string"
            },
            "resettable": {
                "type": "boolean"
            },
            "play_event": {
                "description": "Name of the event when the animation starts",
                "type": "string"
            },
            "#visible": {
                "type": "boolean"
            },
            "#hyperlink": {
                "$ref": "https://raw.githubusercontent.com/legopitstop/JSON-Schemas/main/schemas/common_regex.json#/definitions/website_url"
            },
            "#tts_dialog_title": {
                "type": "string"
            },
            "#tts_dialog_body": {
                "type": "string"
            },
            "#property_field": {
                "type": "string"
            },
            "#flying_item_renderer": {
                "type": "boolean"
            },
            "#item_id_aux": {
                "description": "Item icon id aux",
                "type": "number"
            },
            "#collection_name": {
                "type": "string"
            },
            "#collection_index": {
                "type": "number"
            },
            "#playername": {
                "type": "string"
            },
            "#x_padding": {
                "type": "number"
            },
            "#hover_slice": {
                "type": "number"
            },
            "#common": {
                "description": "Same as `color`",
                "type": "array"
            },
            "#uncommon": {
                "description": "Same as `color`",
                "type": "array"
            },
            "#rare": {
                "description": "Same as `color`",
                "type": "array"
            },
            "#epic": {
                "description": "Same as `color`",
                "type": "array"
            },
            "#legendary": {
                "description": "Same as `color`",
                "type": "array"
            },
            "#is_featured": {
                "type": "boolean"
            },
            "#anchored_offset_value_x": {
                "description": "When using `use_anchored_offset` (boolean) property",
                "type": "array"
            },
            "#anchored_offset_value_y": {
                "description": "When using `use_anchored_offset` (boolean) property",
                "type": "array"
            },
            "#timer_field_count_to_show": {
                "type": "number"
            },
            "#visible_after_x_ratings": {
                "type": "boolean"
            },
            "control_id": {
                "type": "string"
            },
            "#panel_title": {
                "type": "string"
            },
            "#should_host": {
                "type": "boolean"
            }
        }
    }
}