{
    "$comment": "This is the older Schema that has everything in one file, moved to mulitple files to make it easier to update.",
    "id": "https://raw.githubusercontent.com/legopitstop/JSON-Schemas/main/schemas/bedrock-edition-schema.json",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "description": "Data for Minecraft Bedrock Edition addons.",
    "definitions": {
        "supportedVersions": {
            "enum": [
                "1.12",
                "1.16",
                "1.16.0",
                "1.16.1",
                "1.16.100",
                "1.16.2",
                "1.16.200",
                1,
                2
            ]
        },
        "recipeTags": {
            "enum": [
                "furnace",
                "smoker",
                "campfire",
                "soul_campfire",
                "crafting_table",
                "brewing_stand"
            ]
        },
        "itemDataCount": {
            "anyOf": [
                {
                    "type": "string"
                },
                {
                    "type": "object",
                    "properties": {
                        "item": {
                            "type": "string",
                            "title": "item",
                            "description": "The items id"
                        },
                        "data": {
                            "type": "number",
                            "title": "data",
                            "description": "The items data. (if any)"
                        },
                        "count": {
                            "type": "number",
                            "default": 1,
                            "maximum": 64,
                            "minimum": 1,
                            "title": "count",
                            "description": "Number of these items"
                        }
                    }
                }
            ]
        },
        "urlRegex": {
            "$ref": "http://raw.githubusercontent.com/oasis-open/cti-stix2-json-schemas/stix2.1/schemas/common/url-regex.json"
        },
        "nameSpaceID": {
            "type": "string",
            "pattern": ":"
        },
        "difficulty": {
            "type": "string",
            "enum": [
                "easy",
                "hard",
                "normal"
            ]
        },
        "hexColor": {
            "$ref": "http://raw.githubusercontent.com/oasis-open/cti-stix2-json-schemas/stix2.1/schemas/common/hex.json"
        },
        "biomeFiltertest": {
            "enum": [
                "has_biome_tag"
            ]
        },
        "operator": {
            "default": "equals",
            "enum": [
                "!=",
                "<",
                "<=",
                "<>",
                "=",
                "==",
                ">",
                ">=",
                "equals",
                "not"
            ]
        },
        "itemData": {
            "anyOf": [
                {
                    "type": "string"
                },
                {
                    "type": "object",
                    "properties": {
                        "item": {
                            "type": "string",
                            "title": "item",
                            "description": "The items id"
                        },
                        "data": {
                            "type": "number",
                            "title": "data",
                            "description": "The items data. (if any)"
                        }
                    }
                }
            ]
        },
        "descriptionIdentifier": {
            "properties": {
                "description": {
                    "type": "object",
                    "properties": {
                        "identifier": {
                            "type": "string",
                            "pattern": ":"
                        }
                    }
                }
            }
        },
        "floatMolang": {
            "anyOf": [
                {
                    "type": "number"
                },
                {
                    "type": "string"
                }
            ]
        },
        "schemaArray": {
            "type": "array",
            "minItems": 1,
            "items": {
                "$ref": "#/properties/minecraft:block/properties/components"
            }
        },
        "stringArray": {
            "type": "array",
            "items": {
                "type": "string"
            },
            "minItems": 1,
            "uniqueItems": true
        },
        "objectArray": {
            "type": "array",
            "items": {
                "type": "object"
            },
            "minItems": 1
        },
        "booleanOrObject": {
            "anyOf": [
                {
                    "type": "boolean"
                },
                {
                    "type": "object"
                }
            ]
        },
        "Events": {
            "type": "object",
            "description": "This is the name of the event.",
            "properties": {
                "add_mob_effect": {
                    "type": "object",
                    "default": {
                        "amplifier": 0,
                        "duration": 0.0,
                        "effect": "",
                        "target": "self"
                    },
                    "title": "add_mob_effect",
                    "description": "Apply mob effect to target.",
                    "properties": {
                        "amplifier": {
                            "type": "integer",
                            "default": 0,
                            "title": "amplifier",
                            "description": "The amplifier for the mob effect."
                        },
                        "duration": {
                            "type": "integer",
                            "default": 0.0,
                            "title": "duration",
                            "description": "The duration of the mob effect."
                        },
                        "effect": {
                            "type": "string",
                            "title": "effect",
                            "description": "The mob effect to apply."
                        },
                        "target": {
                            "type": "string",
                            "default": "self",
                            "title": "target",
                            "description": "The target context to execute against."
                        }
                    }
                },
                "damage": {
                    "type": "object",
                    "default": {
                        "amount": 0,
                        "type": "none",
                        "target": "self"
                    },
                    "title": "damage",
                    "description": "Deals damage to the target.",
                    "properties": {
                        "amount": {
                            "type": "integer",
                            "default": 0,
                            "title": "amount",
                            "description": "The amount of damage to deal."
                        },
                        "type": {
                            "$ref": "#/definitions/DamageSource",
                            "title": "type",
                            "description": "The type of damage to deal."
                        },
                        "target": {
                            "type": "string",
                            "default": "self",
                            "title": "target",
                            "description": "The target context to execute against."
                        }
                    }
                },
                "decrement_stack": {
                    "type": "object",
                    "default": {},
                    "title": "decrement_stack",
                    "description": "Decrement item stack."
                },
                "die": {
                    "type": "object",
                    "default": {
                        "target": "self"
                    },
                    "title": "die",
                    "description": "Kill target. If target is self and this is run from a block then destroy the block.",
                    "properties": {
                        "target": {
                            "type": "string",
                            "default": "self",
                            "title": "target",
                            "description": "The target context to execute against."
                        }
                    }
                },
                "play_effect": {
                    "type": "object",
                    "default": {
                        "data": 0,
                        "effect": "",
                        "target": "self"
                    },
                    "title": "play_effect",
                    "description": "Spawns a particle effect relative to target position.",
                    "properties": {
                        "data": {
                            "type": "integer",
                            "default": 0,
                            "title": "data",
                            "description": "Particle data value."
                        },
                        "effect": {
                            "type": "string",
                            "title": "effect",
                            "description": "The name of the particle effect to create."
                        },
                        "target": {
                            "type": "string",
                            "default": "self",
                            "title": "target",
                            "description": "The target context to execute against."
                        }
                    }
                },
                "play_sound": {
                    "type": "object",
                    "default": {
                        "sound": "",
                        "target": "self"
                    },
                    "title": "play_sound",
                    "description": "Play a sound relative to target position.",
                    "properties": {
                        "sound": {
                            "type": "string",
                            "title": "sound",
                            "description": "The name of the sound to play."
                        },
                        "target": {
                            "type": "string",
                            "default": "self",
                            "title": "target",
                            "description": "The target context to execute against."
                        }
                    }
                },
                "remove_mob_effect": {
                    "type": "object",
                    "default": {
                        "effect": "",
                        "target": "self"
                    },
                    "title": "remove_mob_effect",
                    "description": "Removes mob effect from target.",
                    "properties": {
                        "effect": {
                            "type": "string",
                            "title": "effect",
                            "description": "The mob effect to remove. Use 'all' to remove all mob effects from target."
                        },
                        "target": {
                            "type": "string",
                            "default": "self",
                            "title": "target",
                            "description": "The target context to execute against."
                        }
                    }
                },
                "run_command": {
                    "type": "object",
                    "uniqueItems": true,
                    "title": "run_command",
                    "description": "Triggers a slash command or a list of slash commands.",
                    "properties": {
                        "command": {
                            "anyOf": [
                                {
                                    "type": "array"
                                },
                                {
                                    "type": "string"
                                }
                            ],
                            "default": "",
                            "title": "command",
                            "description": "List of slash commands to run."
                        },
                        "target": {
                            "type": "string",
                            "default": "self",
                            "title": "target",
                            "description": "The target context to execute against."
                        }
                    }
                },
                "set_block": {
                    "type": "object",
                    "default": {
                        "block_type": ""
                    },
                    "title": "set_block",
                    "description": "Sets this block to another block type.",
                    "properties": {
                        "block_type": {
                            "type": "string",
                            "title": "block_type",
                            "description": "The type of block to set."
                        }
                    }
                },
                "set_block_at_pos": {
                    "type": "object",
                    "default": {
                        "block_type": "",
                        "block_offset": [
                            0.0,
                            0.0,
                            0.0
                        ]
                    },
                    "title": "set_block_at_pos",
                    "description": "Sets a block relative to this block to another block type.",
                    "properties": {
                        "block_type": {
                            "type": "string",
                            "title": "block_type",
                            "description": "The type of block to set."
                        },
                        "block_offset": {
                            "type": "array",
                            "default": [
                                0.0,
                                0.0,
                                0.0
                            ],
                            "title": "block_offset",
                            "description": "The offset from the block's center."
                        }
                    }
                },
                "set_block_property": {
                    "type": "object",
                    "default": {
                        "property": ""
                    },
                    "title": "set_block_property",
                    "description": "Sets a block property on this block.",
                    "properties": {
                        "property": {
                            "type": "string",
                            "title": "property",
                            "description": "Block property to set on the block."
                        }
                    }
                },
                "spawn_loot": {
                    "type": "object",
                    "default": {
                        "table": ""
                    },
                    "title": "spawn_loot",
                    "description": "Spawn loot from block.",
                    "properties": {
                        "table": {
                            "type": "string",
                            "title": "table",
                            "description": "File path, relative to the Behavior Pack's path, to the loot table file."
                        }
                    }
                },
                "swing": {
                    "type": "object",
                    "title": "swing",
                    "description": "Event causes the actor to swing."
                },
                "teleport": {
                    "type": "object",
                    "default": {
                        "avoid_water": true,
                        "destination": [
                            0.0,
                            0.0,
                            0.0
                        ],
                        "land_on_block": true,
                        "max_range": [
                            8.0,
                            8.0,
                            8.0
                        ],
                        "target": "self"
                    },
                    "title": "teleport",
                    "description": "Teleport target randomly around destination point.",
                    "properties": {
                        "avoid_water": {
                            "type": "boolean",
                            "default": true,
                            "title": "avoid_water",
                            "description": "Determines if the teleport avoids putting the target in water."
                        },
                        "destination": {
                            "type": "array",
                            "default": [
                                0.0,
                                0.0,
                                0.0
                            ],
                            "title": "destination",
                            "description": "Origin destination of the teleport."
                        },
                        "land_on_block": {
                            "type": "boolean",
                            "default": true,
                            "title": "land_on_block",
                            "description": "Determines if the teleport places the target on a block."
                        },
                        "max_range": {
                            "type": "array",
                            "default": [
                                8.0,
                                8.0,
                                8.0
                            ],
                            "title": "max_range",
                            "description": "Max range the target can teleport relative to the origin destination."
                        },
                        "target": {
                            "type": "string",
                            "default": "self",
                            "title": "target",
                            "description": "The target context to execute against."
                        }
                    }
                },
                "transform_item": {
                    "type": "object",
                    "default": {
                        "transform": ""
                    },
                    "title": "transform_item",
                    "description": "Transforms item into another item.",
                    "properties": {
                        "transform": {
                            "type": "string",
                            "title": "transform",
                            "description": "Name of the item it should transform into"
                        }
                    }
                }
            }
        },
        "DamageSource": {
            "enum": [
                "all",
                "anvil",
                "block_explosion",
                "charging",
                "contact",
                "drowning",
                "entity_attack",
                "entity_explosion",
                "fall",
                "falling_block",
                "fire",
                "fire_tick",
                "fireworks",
                "fly_into_wall",
                "lava",
                "lightning",
                "magic",
                "magma",
                "none",
                "override",
                "piston",
                "projectile",
                "starve",
                "suffocation",
                "suicide",
                "temperature",
                "thorns",
                "void",
                "wither"
            ]
        }
    },
    "required": [
        "format_version"
    ],
    "properties": {
        "credit": {
            "type": "string",
            "default": "Thanks to Legopitstop for creating the schema. https://github.com/legopitstop/JSON-Schemas",
            "title": "credit"
        },
        "format_version": {
            "$ref": "#/definitions/supportedVersions",
            "default": "1.16.1",
            "title": "format_version",
            "description": "Specifies the version of the game this entity was made in. If the version is lower than the current version, any changes made to the entity in the vanilla version will be applied to it."
        },
        "header": {
            "type": "object",
            "required": [
                "name",
                "uuid"
            ],
            "properties": {
                "description": {
                    "type": "string",
                    "title": "description",
                    "description": "This is a short description of the pack. It will appear in the game below the name of the pack. We recommend keeping it to 1-2 lines."
                },
                "name": {
                    "type": "string",
                    "title": "name",
                    "description": "This is the name of the pack as it appears within Minecraft. This is a required field."
                },
                "uuid": {
                    "type": "string",
                    "title": "uuid",
                    "description": "This is a special type of identifier that uniquely identifies this pack from any other pack. UUIDs are written in the format xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx where each x is a hexadecimal value (0-9 or a-f). We recommend using an online service to generate this and guarantee their uniqueness (just bing UUID Generator to find some)"
                },
                "version": {
                    "type": "array",
                    "title": "version",
                    "description": "This is the version of your pack in the format [majorVersion, minorVersion, revision]. The version number is used when importing a pack that has been imported before. The new pack will replace the old one if the version is higher, and ignored if it's the same or lower",
                    "items": [
                        {
                            "type": "number"
                        }
                    ]
                },
                "min_engine_version": {
                    "type": "array",
                    "title": "min_engine_version",
                    "description": "This is the minimum version of the game that this pack was written for. This is a required field for resource and behavior packs. This helps the game identify whether any backwards compatibility is needed for your pack. You should always use the highest version currently available when creating packs",
                    "items": [
                        {
                            "type": "number"
                        }
                    ]
                },
                "base_game_version": {
                    "type": "array",
                    "title": "base_game_version",
                    "description": "This is the version of the base game your world template requires, specified as [majorVersion, minorVersion, revision]. We use this to determine what version of the base game resource and behavior packs to apply when your content is used.",
                    "items": [
                        {
                            "type": "number"
                        }
                    ]
                },
                "lock_template_options": {
                    "type": "boolean",
                    "title": "lock_template_options",
                    "description": "This option is required for any world templates. This will lock the player from modifying the options of the world."
                }
            }
        },
        "modules": {
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "description": {
                        "type": "string",
                        "title": "description",
                        "description": "This is a short description of the module. This is not user-facing at the moment but is a good place to remind yourself why the module is defined"
                    },
                    "type": {
                        "enum": [
                            "resources",
                            "data",
                            "client_data",
                            "interface",
                            "world_template"
                        ],
                        "title": "type",
                        "description": "This is the type of the module. Can be any of the following: resources, data, client_data, interface, world_template"
                    },
                    "uuid": {
                        "type": "string",
                        "title": "uuid",
                        "description": "This is a unique identifier for the module in the same format as the pack's UUID in the header. This should be different from the pack's UUID, and different for every module"
                    },
                    "version": {
                        "type": "array",
                        "title": "version",
                        "description": "This is the version of the module in the same format as the pack's version in the header. This can be used to further identify changes in your pack",
                        "items": [
                            {
                                "type": "number"
                            }
                        ]
                    }
                }
            }
        },
        "dependencies": {
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "uuid": {
                        "type": "string",
                        "title": "uuid",
                        "description": "This is the unique identifier of the pack that this pack depends on. It needs to be the exact same UUID that the pack has defined in the header section of it's manifest file"
                    },
                    "version": {
                        "type": "array",
                        "title": "version",
                        "description": "This is the specific version of the pack that your pack depends on. Should match the version the other pack has in its manifest file",
                        "items": [
                            {
                                "type": "number"
                            }
                        ]
                    }
                }
            }
        },
        "metadata": {
            "type": "object",
            "properties": {
                "authors": {
                    "type": "array",
                    "title": "authors",
                    "description": "Name of the author(s) of the pack",
                    "items": {
                        "type": "string"
                    }
                },
                "license": {
                    "type": "string",
                    "title": "license",
                    "description": "The license of the pack"
                },
                "url": {
                    "$ref": "#/definitions/urlRegex",
                    "title": "url",
                    "description": "The home website of your pack"
                }
            }
        },
        "capabilities": {
            "type": "object",
            "title": "capabilities",
            "description": "Their isnt much info about 'capabilities' other than the names.",
            "properties": {
                "experimental_custom_ui": {
                    "title": "experimental_custom_ui",
                    "description": ""
                },
                "chemistry": {
                    "title": "chemistry",
                    "description": ""
                },
                "raytraced": {
                    "title": "raytraced",
                    "description": ""
                }
            }
        },
        "subpacks": {
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "folder_name": {
                        "type": "string",
                        "title": "folder_name",
                        "description": "This is the folder that it will look into. directory is 'manifest.json/subpacks/<your file(s)>'"
                    },
                    "name": {
                        "type": "string",
                        "title": "name",
                        "description": "The display name that will show up in-game."
                    },
                    "memory_tier": {
                        "type": "integer",
                        "title": "memory_tier",
                        "description": "This is the order that they will show up in the settings screen."
                    }
                }
            }
        },
        "minecraft:block": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "object",
                    "properties": {
                        "identifier": {
                            "type": "string",
                            "pattern": ":"
                        },
                        "properties": {
                            "type": "object",
                            "title": "properties",
                            "description": "The properties for this block. block_properties."
                        }
                    }
                },
                "components": {
                    "type": "object",
                    "properties": {
                        "minecraft:block_light_absorption": {
                            "type": "integer",
                            "default": 0,
                            "title": "minecraft:block_light_absorption",
                            "description": "The amount of light this block will absorb."
                        },
                        "minecraft:block_light_emission": {
                            "type": "integer",
                            "default": 0,
                            "title": "minecraft:block_light_emission",
                            "description": "The amount of light this block will emit in a range [0.0, 1.0]."
                        },
                        "minecraft:breakonpush": {
                            "type": "boolean",
                            "default": false,
                            "title": "minecraft:breakonpush",
                            "description": "When pushed by a piston the block breaks"
                        },
                        "minecraft:breathability": {
                            "enum": [
                                "solid",
                                "air"
                            ],
                            "default": "solid",
                            "title": "minecraft:breathability",
                            "description": "Property describing the breathability of this block and whether it is treated as a solid or as air."
                        },
                        "minecraft:destroy_time": {
                            "type": "integer",
                            "default": 0.0,
                            "title": "minecraft:destroy_time",
                            "description": "Sets the destroy time property for the block. Greater numbers result in greater mining times."
                        },
                        "minecraft:display_name": {
                            "type": "string",
                            "title": "minecraft:display_name",
                            "description": "Specifies the display name id for the block."
                        },
                        "minecraft:entity_collision": {
                            "anyOf": [
                                {
                                    "type": "boolean"
                                },
                                {
                                    "type": "object"
                                }
                            ],
                            "default": false,
                            "title": "minecraft:entity_collision",
                            "description": "Can only be set to false, it disables the collision of the block with entities",
                            "properties": {
                                "origin": {
                                    "type": "array",
                                    "default": [
                                        -8.0,
                                        0.0,
                                        -8.0
                                    ],
                                    "title": "origin",
                                    "description": "Minimal position Bounds of the collision box"
                                },
                                "size": {
                                    "type": "array",
                                    "default": [
                                        16.0,
                                        16.0,
                                        16.0
                                    ],
                                    "title": "origin",
                                    "description": "Size of each side of the box of the component"
                                }
                            }
                        },
                        "minecraft:explosion_resistance": {
                            "type": "integer",
                            "default": 0.0,
                            "title": "minecraft:explosion_resistance",
                            "description": "Sets the explosion resistance for this block."
                        },
                        "minecraft:flammable": {
                            "type": "object",
                            "title": "minecraft:flammable",
                            "description": "Describes the flammable properties for this block.",
                            "properties": {
                                "burn_odds": {
                                    "type": "integer",
                                    "default": 0,
                                    "title": "burn_odds",
                                    "description": "How likely the block will be destroyed by flames when on fire."
                                },
                                "flame_odds": {
                                    "type": "integer",
                                    "default": 0,
                                    "title": "flame_odds",
                                    "description": "How likely the block will be destroyed by flames when on fire.How likely the block will catch flame when next to a fire."
                                }
                            }
                        },
                        "minecraft:friction": {
                            "type": "integer",
                            "default": 0.1,
                            "title": "minecraft:friction",
                            "description": "Property describing the friction for this block. Friction effects an entities movements when it walks on the block."
                        },
                        "minecraft:geometry": {
                            "type": "string",
                            "title": "minecraft:geometry",
                            "description": "The geometry definition name to use."
                        },
                        "minecraft:immovable": {
                            "type": "boolean",
                            "title": "minecraft:immovable",
                            "description": "An Immovable block cannot be pushed by pistons"
                        },
                        "minecraft:map_color": {
                            "type": "string",
                            "pattern": "#",
                            "title": "minecraft:map_color",
                            "description": "A color represented as a hex value. This will be the color rendered to a map."
                        },
                        "minecraft:material_instances": {
                            "type": "object",
                            "title": "minecraft:material_instances",
                            "description": "Maps face or material_instance names in a geometry file to an actual material instance. Material instance can either be a full material instance or a name to another already defined instance"
                        },
                        "minecraft:onlypistonpush": {
                            "type": "boolean",
                            "title": "minecraft:onlypistonpush",
                            "description": "Blocks with those components won't stick to stickyPistons"
                        },
                        "minecraft:pick_collision": {
                            "anyOf": [
                                {
                                    "type": "boolean"
                                },
                                {
                                    "type": "object"
                                }
                            ],
                            "default": false,
                            "title": "minecraft:pick_collision",
                            "description": "Can only be set to false, it disables the collision of the block with entities",
                            "properties": {
                                "origin": {
                                    "type": "array",
                                    "default": [
                                        -8.0,
                                        0.0,
                                        -8.0
                                    ],
                                    "title": "origin",
                                    "description": "Minimal position Bounds of the collision box"
                                },
                                "size": {
                                    "type": "array",
                                    "default": [
                                        16.0,
                                        16.0,
                                        16.0
                                    ],
                                    "title": "origin",
                                    "description": "Size of each side of the box of the component"
                                }
                            }
                        },
                        "minecraft:placement_filter": {
                            "type": "object",
                            "title": "minecraft:placement_filter",
                            "description": "Sets rules for under what conditions the block can be placed/survive",
                            "properties": {
                                "conditions": {
                                    "type": "array",
                                    "title": "conditions",
                                    "description": "List of conditions where the block can be placed/survive",
                                    "properties": {
                                        "allowed_faces": {
                                            "$ref": "#/definitions/stringArray",
                                            "title": "allowed_faces",
                                            "description": "List of any of the following strings: up, down, north, south, east, west, side, all"
                                        },
                                        "block_filter": {
                                            "$ref": "#/definitions/stringArray",
                                            "title": "block_filter",
                                            "description": "List of blocks (can use tags to specify them) that this block can be placed against in the allowed_faces direction"
                                        }
                                    }
                                }
                            }
                        },
                        "minecraft:preventsjumping": {
                            "type": "boolean",
                            "title": "minecraft:preventsjumping",
                            "description": "this component makes it so actors can't jump when walking on this block"
                        },
                        "minecraft:random_ticking": {
                            "type": "object",
                            "title": "minecraft:random_ticking",
                            "description": "Describes the component that will trigger an even at a regular interval between two values",
                            "properties": {
                                "on_tick": {
                                    "type": "object",
                                    "properties": {
                                        "condition": {
                                            "type": "string",
                                            "default": 1,
                                            "title": "condition",
                                            "description": "The condition of event to be executed on the block."
                                        },
                                        "event": {
                                            "type": "string",
                                            "default": "set_block_property",
                                            "title": "event",
                                            "description": "The type of event executed on the block."
                                        },
                                        "range": {
                                            "type": "array",
                                            "default": [
                                                10,
                                                10
                                            ],
                                            "title": "range",
                                            "description": "The Range between which the component will trigger his event."
                                        },
                                        "target": {
                                            "type": "string",
                                            "default": "self",
                                            "title": "target",
                                            "description": "The target of event executed on the block."
                                        }
                                    }
                                }
                            }
                        },
                        "minecraft:rotation": {
                            "type": "array",
                            "default": [
                                0,
                                0,
                                0
                            ],
                            "title": "minecraft:rotation",
                            "description": "This is the block's rotation around the center of the cube in degrees. The rotation order is x-y-z."
                        },
                        "minecraft:ticking": {
                            "type": "object",
                            "title": "minecraft:ticking",
                            "description": "Describes the component that will trigger an even at a regular interval between two values",
                            "properties": {
                                "looping": {
                                    "type": "boolean",
                                    "default": true,
                                    "title": "looping",
                                    "description": "Does the event loop"
                                },
                                "range": {
                                    "type": "array",
                                    "default": [
                                        10,
                                        10
                                    ],
                                    "title": "range",
                                    "description": "The Range between which the component will trigger his event."
                                },
                                "on_tick": {
                                    "type": "object",
                                    "properties": {
                                        "condition": {
                                            "type": "string",
                                            "default": 1,
                                            "title": "condition",
                                            "description": "The condition of event to be executed on the block."
                                        },
                                        "event": {
                                            "type": "string",
                                            "default": "set_block_property",
                                            "title": "event",
                                            "description": "The type of event executed on the block."
                                        },
                                        "range": {
                                            "type": "array",
                                            "default": [
                                                10,
                                                10
                                            ],
                                            "title": "range",
                                            "description": "The Range between which the component will trigger his event."
                                        },
                                        "target": {
                                            "type": "string",
                                            "default": "self",
                                            "title": "target",
                                            "description": "The target of event executed on the block."
                                        }
                                    }
                                }
                            }
                        },
                        "minecraft:unit_cube": {
                            "type": "string",
                            "title": "minecraft:unit_cube",
                            "description": "Specifies that a unit cube is to be used with tessellation."
                        },
                        "minecraft:unwalkable": {
                            "type": "boolean",
                            "title": "minecraft:unwalkable",
                            "description": "this component sets a block as unwalkable. Most mobs will not try to jump over it if the value is set to true"
                        },
                        "minecraft:on_fall_on": {
                            "type": "object",
                            "title": "minecraft:on_fall_on",
                            "description": "Describes event for this block.",
                            "properties": {
                                "min_fall_distance": {
                                    "type": "integer",
                                    "default": 0.0,
                                    "title": "min_fall_distance",
                                    "description": "The minimum distance in blocks that an actor needs to fall to trigger this event."
                                },
                                "condition": {
                                    "type": "string",
                                    "title": "condition",
                                    "description": "The condition of event to be executed on the block."
                                },
                                "event": {
                                    "type": "string",
                                    "title": "event",
                                    "description": "The event executed on the block."
                                },
                                "target": {
                                    "type": "string",
                                    "default": "self",
                                    "title": "target",
                                    "description": "The target of event executed on the block."
                                }
                            }
                        },
                        "minecraft:on_interact": {
                            "type": "object",
                            "title": "minecraft:on_interact",
                            "description": "Describes event for this block.",
                            "properties": {
                                "condition": {
                                    "type": "string",
                                    "title": "condition",
                                    "description": "The condition of event to be executed on the block."
                                },
                                "event": {
                                    "type": "string",
                                    "title": "event",
                                    "description": "The event executed on the block."
                                },
                                "target": {
                                    "type": "string",
                                    "default": "self",
                                    "title": "target",
                                    "description": "The target of event executed on the block."
                                }
                            }
                        },
                        "minecraft:on_placed": {
                            "type": "object",
                            "title": "minecraft:on_placed",
                            "description": "Describes event for this block.",
                            "properties": {
                                "condition": {
                                    "type": "string",
                                    "title": "condition",
                                    "description": "The condition of event to be executed on the block."
                                },
                                "event": {
                                    "type": "string",
                                    "title": "event",
                                    "description": "The event executed on the block."
                                },
                                "target": {
                                    "type": "string",
                                    "default": "self",
                                    "title": "target",
                                    "description": "The target of event executed on the block."
                                }
                            }
                        },
                        "minecraft:on_player_destroyed": {
                            "type": "object",
                            "title": "minecraft:on_player_destroyed",
                            "description": "Describes event for this block.",
                            "properties": {
                                "condition": {
                                    "type": "string",
                                    "title": "condition",
                                    "description": "The condition of event to be executed on the block."
                                },
                                "event": {
                                    "type": "string",
                                    "title": "event",
                                    "description": "The event executed on the block."
                                },
                                "target": {
                                    "type": "string",
                                    "default": "self",
                                    "title": "target",
                                    "description": "The target of event executed on the block."
                                }
                            }
                        },
                        "minecraft:on_player_placing": {
                            "type": "object",
                            "title": "minecraft:on_player_placing",
                            "description": "Describes event for this block.",
                            "properties": {
                                "condition": {
                                    "type": "string",
                                    "title": "condition",
                                    "description": "The condition of event to be executed on the block."
                                },
                                "event": {
                                    "type": "string",
                                    "title": "event",
                                    "description": "The event executed on the block."
                                },
                                "target": {
                                    "type": "string",
                                    "default": "self",
                                    "title": "target",
                                    "description": "The target of event executed on the block."
                                }
                            }
                        },
                        "minecraft:on_step_off": {
                            "type": "object",
                            "title": "minecraft:on_step_off",
                            "description": "Describes event for this block.",
                            "properties": {
                                "condition": {
                                    "type": "string",
                                    "title": "condition",
                                    "description": "The condition of event to be executed on the block."
                                },
                                "event": {
                                    "type": "string",
                                    "title": "event",
                                    "description": "The event executed on the block."
                                },
                                "target": {
                                    "type": "string",
                                    "default": "self",
                                    "title": "target",
                                    "description": "The target of event executed on the block."
                                }
                            }
                        },
                        "minecraft:on_step_on": {
                            "type": "object",
                            "title": "minecraft:on_step_on",
                            "description": "Describes event for this block.",
                            "properties": {
                                "condition": {
                                    "type": "string",
                                    "title": "condition",
                                    "description": "The condition of event to be executed on the block."
                                },
                                "event": {
                                    "type": "string",
                                    "title": "event",
                                    "description": "The event executed on the block."
                                },
                                "target": {
                                    "type": "string",
                                    "default": "self",
                                    "title": "target",
                                    "description": "The target of event executed on the block."
                                }
                            }
                        }
                    }
                },
                "permutations": {
                    "type": "array",
                    "default": [
                        {}
                    ],
                    "title": "permutations",
                    "description": "Add multiple components with optional condition to create blockstates.",
                    "items": {
                        "type": "object",
                        "properties": {
                            "condition": {
                                "type": "string",
                                "title": "condition",
                                "description": "The condition of event to be executed on the block."
                            },
                            "components": {
                                "type": "object",
                                "$ref": "#/properties/minecraft:block/properties/components"
                            }
                        }
                    }
                },
                "events": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/Events"
                    },
                    "default": {}
                }
            }
        },
        "minecraft:item": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "object",
                    "properties": {
                        "identifier": {
                            "type": "string",
                            "pattern": ":"
                        },
                        "category": {
                            "enum": [
                                "Items",
                                "Equipment"
                            ],
                            "default": "Item",
                            "title": "category",
                            "description": "The category for this item. Categories are used to control high level properties of how the item is integrated into the bedrock engine, such as whether it can be used in slash commands."
                        },
                        "is_experimental": {
                            "type": "boolean",
                            "default": false,
                            "title": "is_experimental",
                            "description": "If this item is experimental, it will only be registered if the world is marked as experimental."
                        }
                    }
                },
                "components": {
                    "type": "object",
                    "properties": {
                        "minecraft:armor": {
                            "type": "object",
                            "title": "minecraft:armor",
                            "description": "The armor item componenent determines the amount of protection you have in your armor item.",
                            "properties": {
                                "protection": {
                                    "type": "integer",
                                    "title": "protection",
                                    "description": "How much protection does the armor item have."
                                },
                                "texture_type": {
                                    "type": "string",
                                    "title": "texture_type",
                                    "description": "Texture Type to apply for the armor. Note that Horse armor is restricted to leather, iron, gold, or diamond."
                                }
                            }
                        },
                        "minecraft:block_placer": {
                            "type": "object",
                            "title": "minecraft:block_placer",
                            "description": "Planter item component. planter items are items that can be planted.",
                            "properties": {
                                "block": {
                                    "type": "string",
                                    "title": "block",
                                    "description": "block: Set the placement block name for the planter item."
                                },
                                "on_use": {
                                    "type": "array",
                                    "title": "on_use",
                                    "description": "List of block descriptors that contain blocks that this item can be used on. If left empty, all blocks will be allowed."
                                }
                            }
                        },
                        "minecraft:cooldown": {
                            "type": "object",
                            "title": "minecraft:cooldown",
                            "description": "Cool down time for a component. After you use an item it becomes unusable for the duration specified by the 'cool down time' setting in this component.",
                            "properties": {
                                "category": {
                                    "type": "string",
                                    "title": "properties",
                                    "description": "The type of cool down for this item."
                                },
                                "duration": {
                                    "type": "integer",
                                    "title": "duration",
                                    "description": "The duration of time this item will spend cooling down before becoming usable again."
                                }
                            }
                        },
                        "minecraft:digger": {
                            "type": "object",
                            "title": "minecraft:digger",
                            "description": "Digger item. Component put on items that dig.",
                            "properties": {
                                "destroy_speeds": {
                                    "type": "object",
                                    "title": "destroy_speeds",
                                    "description": "Destroy speed per block."
                                },
                                "on_dig": {
                                    "type": "string",
                                    "title": "on_dig",
                                    "description": "Trigger for when you dig a block that isn't listed in destroy_speeds"
                                },
                                "use_efficiency": {
                                    "type": "boolean",
                                    "default": false,
                                    "title": "use_efficiency",
                                    "description": "Use efficiency? Default is set to false."
                                }
                            }
                        },
                        "minecraft:display_name": {
                            "type": "object",
                            "title": "minecraft:display_name",
                            "description": "Display Name item component. Display Names display the name of an item.",
                            "properties": {
                                "value": {
                                    "type": "string",
                                    "title": "value",
                                    "description": "Set the display name for an item."
                                }
                            }
                        },
                        "minecraft:durability": {
                            "type": "object",
                            "title": "minecraft:durability",
                            "description": "Durability item component: how much damage can this item take before breaking.",
                            "properties": {
                                "damage_chance": {
                                    "type": "integer",
                                    "title": "damage_chance",
                                    "description": "Damage chance."
                                },
                                "max_durability": {
                                    "type": "integer",
                                    "title": "max_durability",
                                    "description": "Max durability is the amount of damage that this item can take before breaking."
                                }
                            }
                        },
                        "minecraft:dye_powder": {
                            "type": "object",
                            "title": "minecraft:dye_powder",
                            "description": "Dye powder, there are 16 kinds of dye.",
                            "properties": {
                                "color": {
                                    "enum": [
                                        "dye_color"
                                    ],
                                    "title": "color",
                                    "description": "Defines what color the dye is."
                                }
                            }
                        },
                        "minecraft:entity_placer": {
                            "type": "object",
                            "title": "minecraft:entity_placer",
                            "description": "Entity placer item component. You can specifiy allowed blocks that the item is restricted to.",
                            "properties": {
                                "dispense_on": {
                                    "type": "array",
                                    "title": "dispense_on",
                                    "description": "List of block descriptors that contain blocks that this item can be dispensed on. If left empty, all blocks will be allowed."
                                },
                                "entity": {
                                    "type": "string",
                                    "title": "entity",
                                    "description": "The entity to be placed in the world."
                                },
                                "use_on": {
                                    "type": "array",
                                    "title": "use_on",
                                    "description": "List of block descriptors that contain blocks that this item can be used on. If left empty, all blocks will be allowed."
                                }
                            }
                        },
                        "minecraft:food": {
                            "type": "object",
                            "title": "minecraft:food",
                            "description": "When an item has a food component, it becomes edible to the player.",
                            "properties": {
                                "can_always_eat": {
                                    "type": "boolean",
                                    "default": false,
                                    "title": "can_always_eat",
                                    "description": "If true you can always eat this item (even when not hungry), defaults to false."
                                },
                                "nutrition": {
                                    "type": "integer",
                                    "title": "nutrition",
                                    "description": "How much nutrition does this food item give the player when eaten."
                                },
                                "on_consume": {
                                    "type": "object",
                                    "title": "on_consume",
                                    "description": ""
                                },
                                "saturation_modifier": {
                                    "type": "integer",
                                    "title": "saturation_modifier",
                                    "description": "Saturation Modifier is used in this formula: (nutrition * saturation_modifier * 2) when appling the saturation buff. Which happens when you eat the item."
                                },
                                "using_converts_to": {
                                    "type": "object",
                                    "title": "using_converts_to",
                                    "description": "When used, convert the *this* item to the one specified by 'using_converts_to'.",
                                    "properties": {
                                        "item": {
                                            "type": "string",
                                            "title": "item",
                                            "description": "The item that it will become."
                                        }
                                    }
                                },
                                "effects": {
                                    "type": "array",
                                    "title": "effects",
                                    "description": "The effects that the player will get when consumed.",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "title": "name",
                                                "description": "The name of the effect that the consumer will get"
                                            },
                                            "chance": {
                                                "type": "integer",
                                                "default": 1.0,
                                                "title": "chance",
                                                "description": "The chance that the conumer will get the effect. 1.0 for 100% of the time."
                                            },
                                            "duration": {
                                                "type": "integer",
                                                "title": "duration",
                                                "description": "How long the effect will last in ticks. (20 ticks = 1 sec)"
                                            },
                                            "amplifier": {
                                                "type": "integer",
                                                "default": 0,
                                                "title": "amplifier",
                                                "description": "Makes the effect more powerful."
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "minecraft:fuel": {
                            "type": "object",
                            "title": "minecraft:fuel",
                            "description": "Fuel component. Allows this item to be used as fuel in a furnace to 'cook' other items.",
                            "properties": {
                                "duration": {
                                    "type": "number",
                                    "title": "duration",
                                    "description": "How long in seconds will this fuel cook items for."
                                }
                            }
                        },
                        "minecraft:icon": {
                            "type": "object",
                            "title": "minecraft:icon",
                            "description": "The icon item componenent determines the icon to represent the item in the UI and elsewhere.",
                            "properties": {
                                "frame": {
                                    "type": "integer",
                                    "default": 0,
                                    "title": "frame",
                                    "description": "An index or expression for which frame of the icon to display. Default resolves to 0."
                                },
                                "legacy_id": {
                                    "type": "string",
                                    "title": "legacy_id",
                                    "description": "Legacy texture id for older item icons"
                                },
                                "texture": {
                                    "type": "string",
                                    "title": "texture",
                                    "description": "The key from the resource_pack/textures/item_texture.json 'texture_data' object associated with the texture file Example: blaze_powder"
                                }
                            }
                        },
                        "minecraft:knockback_resistance": {
                            "type": "object",
                            "title": "minecraft:knockback_resistance",
                            "description": "Knockback Resistance Item. Component put on items that provide knockback resistance.",
                            "properties": {
                                "protection": {
                                    "type": "integer",
                                    "maximum": 1.0,
                                    "title": "protection",
                                    "description": "Amount of knockback resistance provided with the total maximum protection being 1.0"
                                }
                            }
                        },
                        "minecraft:on_use": {
                            "type": "object",
                            "title": "minecraft:on_use",
                            "description": "The on_use item component allows you to receive an event when the item is used.",
                            "properties": {
                                "on_use": {
                                    "type": "object",
                                    "properties": {
                                        "event": {
                                            "type": "string",
                                            "title": "event",
                                            "description": "Event trigger for when the item is used."
                                        },
                                        "target": {
                                            "type": "string",
                                            "title": "target",
                                            "description": "The target to execute agenst."
                                        }
                                    }
                                }
                            }
                        },
                        "minecraft:on_use_on": {
                            "type": "object",
                            "title": "minecraft:on_use_on",
                            "description": "The on_use_on item component allows you to receive an event when the item is used on a block in the world.",
                            "properties": {
                                "on_use_on": {
                                    "type": "object",
                                    "properties": {
                                        "event": {
                                            "type": "string",
                                            "title": "event",
                                            "description": "Event trigger for when the item is used."
                                        },
                                        "target": {
                                            "type": "string",
                                            "title": "target",
                                            "description": "The target to execute agenst."
                                        }
                                    }
                                }
                            }
                        },
                        "minecraft:projectile": {
                            "type": "object",
                            "title": "minecraft:projectile",
                            "description": "Projectile item component. projectile items shoot out, like an arrow.",
                            "properties": {
                                "minimum_critical_power": {
                                    "type": "integer",
                                    "title": "minimum_critical_power",
                                    "description": "How long you must charge a projectile for it to critically hit."
                                },
                                "projectile_entity": {
                                    "type": "string",
                                    "title": "projectile_entity",
                                    "description": "The entity to be fired as a projectile."
                                }
                            }
                        },
                        "minecraft:repairable": {
                            "type": "object",
                            "title": "minecraft:repairable",
                            "description": "Repairable item component: how much damage can this item repair, what items can repair it.",
                            "properties": {
                                "on_repaired": {
                                    "type": "string",
                                    "title": "on_repaired",
                                    "description": "Event that is called when this item has been repaired."
                                },
                                "repair_items": {
                                    "type": "array",
                                    "title": "repair_items",
                                    "description": "Repair item entries."
                                }
                            }
                        },
                        "minecraft:shooter": {
                            "type": "array",
                            "title": "minecraft:shooter",
                            "description": "Shooter Item Component.",
                            "properties": {
                                "ammunition": {
                                    "type": "string",
                                    "title": "ammunition",
                                    "description": "Ammunition."
                                },
                                "charge_on_draw": {
                                    "type": "boolean",
                                    "default": false,
                                    "title": "charge_on_draw",
                                    "description": "Charge on draw? Default is set to false."
                                },
                                "launch_power_scale": {
                                    "type": "integer",
                                    "default": 1.0,
                                    "title": "launch_power_scale",
                                    "description": "Launch power scale. Default is set to 1.0."
                                },
                                "max_draw_duration": {
                                    "type": "integer",
                                    "default": 0,
                                    "title": "max_draw_duration",
                                    "description": "Draw Duration. Default is set to 0."
                                },
                                "max_launch_power": {
                                    "type": "integer",
                                    "default": 1.0,
                                    "title": "max_launch_power",
                                    "description": "Launch power. Default is set to 1.0."
                                },
                                "scale_power_by_draw_duration": {
                                    "type": "boolean",
                                    "default": false,
                                    "title": "scale_power_by_draw_duration",
                                    "description": "Scale power by draw duration? Default is set to false."
                                }
                            }
                        },
                        "minecraft:throwable": {
                            "type": "object",
                            "title": "minecraft:throwable",
                            "description": "Throwable item component. Throwable items, such as a snowball.",
                            "properties": {
                                "do_swing_animation": {
                                    "type": "boolean",
                                    "default": false,
                                    "title": "do_swing_animation",
                                    "description": "Whether the item should use the swing animation when thrown. Default is set to false."
                                },
                                "launch_power_scale": {
                                    "type": "integer",
                                    "default": 1.0,
                                    "title": "launch_power_scale",
                                    "description": "The scale at which the power of the throw increases. Default is set to 1.0."
                                },
                                "max_draw_duration": {
                                    "type": "integer",
                                    "default": 0.0,
                                    "title": "max_draw_duration",
                                    "description": "The maximum duration to draw a throwable item. Default is set to 0.0."
                                },
                                "max_launch_power": {
                                    "type": "integer",
                                    "default": 1.0,
                                    "title": "max_launch_power",
                                    "description": "The maximum power to launch the throwable item. Default is set to 1.0."
                                },
                                "min_draw_duration": {
                                    "type": "integer",
                                    "default": 0.0,
                                    "title": "min_draw_duration",
                                    "description": "The minimum duration to draw a throwable item. Default is set to 0.0."
                                },
                                "scale_power_by_draw_duration": {
                                    "type": "boolean",
                                    "default": false,
                                    "title": "scale_power_by_draw_duration",
                                    "description": "Whether or not the power of the throw increases with duration charged. Default is set to false."
                                }
                            }
                        },
                        "minecraft:weapon": {
                            "type": "object",
                            "title": "minecraft:weapon",
                            "description": "Weapon Item Component. Added to every weapon item such as axe, sword, trident, bow, crossbow.",
                            "properties": {
                                "on_hit_block": {
                                    "type": "object",
                                    "title": "on_hit_block",
                                    "description": "Trigger for letting you know when this item is used to hit a block",
                                    "properties": {
                                        "event": {
                                            "type": "string",
                                            "title": "event",
                                            "description": "Event to run when triggered."
                                        }
                                    }
                                },
                                "on_hurt_entity": {
                                    "type": "object",
                                    "title": "on_hurt_entity",
                                    "description": "Trigger for letting you know when this item is used to hurt another mob",
                                    "properties": {
                                        "event": {
                                            "type": "string",
                                            "title": "event",
                                            "description": "Event to run when triggered."
                                        }
                                    }
                                },
                                "on_not_hurt_entity": {
                                    "type": "object",
                                    "title": "on_not_hurt_entity",
                                    "description": "Trigger for letting you know when this item hit another actor, but didn't do damage",
                                    "properties": {
                                        "event": {
                                            "type": "string",
                                            "title": "event",
                                            "description": "Event to run when triggered."
                                        }
                                    }
                                }
                            }
                        },
                        "minecraft:wearable": {
                            "type": "object",
                            "title": "minecraft:wearable",
                            "description": "Wearable item component.",
                            "properties": {
                                "dispensable": {
                                    "type": "boolean",
                                    "default": false,
                                    "title": "dispensable"
                                },
                                "slot": {
                                    "type": "object",
                                    "title": "slot",
                                    "description": "Slot where you can place the armor piece in/on.",
                                    "properties": {
                                        "equipment_slot": {
                                            "type": "array",
                                            "items": {
                                                "enum": [
                                                    "slot.weapon.mainhand",
                                                    "slot.weapon.offhand",
                                                    "slot.armor.head",
                                                    "slot.armor.chest",
                                                    "slot.armor.legs",
                                                    "slot.armor.feet",
                                                    "slot.hotbar",
                                                    "slot.inventory",
                                                    "slot.enderchest",
                                                    "slot.saddle",
                                                    "slot.armor",
                                                    "slot.chest"
                                                ]
                                            },
                                            "title": "",
                                            "description": ""
                                        }
                                    }
                                }
                            }
                        },
                        "minecraft:creative_category": {
                            "type": "object",
                            "title": "minecraft:creative_category",
                            "description": "These are categories / itemGroups that some items are grouped in. ex; 'itemGroup.name.saplings' are where all that saplings are.",
                            "properties": {
                                "parent": {
                                    "type": "string",
                                    "title": "parent",
                                    "description": "Premade itemGroups."
                                }
                            }
                        },
                        "minecraft:hand_equipped": {
                            "type": "boolean",
                            "default": false,
                            "title": "minecraft:hand_equipped",
                            "description": "Will rotate the texture to look like an equipped item. ex; stick, sword"
                        }
                    }
                },
                "events": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/Events"
                    },
                    "default": {}
                }
            }
        },
        "minecraft:texture_set": {
            "type": "object",
            "required": [
                "color"
            ],
            "title": "minecraft:texture_set",
            "description": "Minecraft supports a Physically Based Rendering (PBR) color pipeline (e.g. used for Ray Tracing). This uses more texture data than simply 'color' to enable richer, more realistic visuals. With the PBR approach, you can have layers for different specular reflections, emissivity, normal maps, etc. which goes beyond the Classic color pipeline for Vanilla Minecraft. Texture Sets have been added as the feature for defining multiple PBR layers for a texture resource. Texture sets are data driven from json files.",
            "properties": {
                "color": {
                    "anyOf": [
                        {
                            "type": "array",
                            "items": {
                                "type": "number"
                            }
                        },
                        {
                            "type": "string"
                        }
                    ],
                    "title": "color",
                    "description": "This is an RGB 3-channel image (defaults to uniform alpha of 1.0), or an RGBA 4-channel image, or a 4 value array for a uniform color with alpha. This is the only required layer. It is the only layer used by the Classic pipeline. Typically there is lighting baked in the color image."
                },
                "metalness_emissive_roughness": {
                    "anyOf": [
                        {
                            "type": "array",
                            "items": {
                                "type": "number"
                            }
                        },
                        {
                            "type": "string"
                        }
                    ],
                    "title": "metalness_emissive_roughness",
                    "description": "3-channel image (or 4-channel where the 4th channel is ignored) or a 3 value array for a uniform MER. RGB images map Red to Metalness, Green to Emissive, and Blue to Roughness."
                },
                "normal": {
                    "type": "string",
                    "title": "normal",
                    "description": "3-channel normal map image (or 4-channel where the 4th channel is ignored). Mutually exclusive with the `heightmap` layer."
                },
                "heightmap": {
                    "type": "string",
                    "title": "heightmap",
                    "description": "1-channel layer image or a single value in json for a uniform heightmap. Mutually exclusive with the `normal` layer."
                }
            }
        },
        "minecraft:recipe_furnace": {
            "required": [
                "description"
            ],
            "type": "object",
            "title": "minecraft:recipe_furnace",
            "description": "Represents a furnace recipe for a furnace.'Input' items will burn and transform into items specified in 'output'..",
            "properties": {
                "description": {
                    "type": "object",
                    "properties": {
                        "identifier": {
                            "type": "string",
                            "pattern": ":"
                        }
                    }
                },
                "tags": {
                    "type": "array",
                    "title": "tags",
                    "description": "Item used as input for the furnace recipe.",
                    "items": {
                        "$ref": "#/definitions/recipeTags"
                    }
                },
                "priority": {
                    "type": "integer",
                    "title": "priority",
                    "description": "Item used as output for the furnace recipe."
                },
                "input": {
                    "$ref": "#/definitions/itemDataCount",
                    "title": "input",
                    "description": "Items used as input for the furnace recipe."
                },
                "output": {
                    "$ref": "#/definitions/itemDataCount",
                    "title": "output",
                    "description": "Items used as output for the furnace recipe."
                }
            }
        },
        "minecraft:recipe_shaped": {
            "required": [
                "description"
            ],
            "type": "object",
            "title": "minecraft:recipe_shaped",
            "description": "Represents a shaped crafting recipe for a crafting table. The key used in the pattern may be any single character except the 'space' character, which is reserved for empty slots in a recipe..",
            "properties": {
                "description": {
                    "type": "object",
                    "properties": {
                        "identifier": {
                            "type": "string",
                            "pattern": ":"
                        }
                    }
                },
                "tags": {
                    "type": "array",
                    "title": "tags",
                    "description": "Item used as input for the furnace recipe.",
                    "items": {
                        "$ref": "#/definitions/recipeTags"
                    }
                },
                "priority": {
                    "type": "integer",
                    "title": "priority",
                    "description": "Item used as output for the furnace recipe."
                },
                "pattern": {
                    "type": "array",
                    "title": "pattern",
                    "description": "characters that represent a pattern to be defined by keys.",
                    "items": {
                        "type": "string"
                    }
                },
                "key": {
                    "type": "object",
                    "title": "key",
                    "description": "patten key character mapped to item names.",
                    "additionalProperties": {
                        "$ref": "#/definitions/itemData"
                    }
                },
                "result": {
                    "$ref": "#/definitions/itemDataCount",
                    "title": "result",
                    "description": "when input items match the pattern then these items are the result."
                }
            }
        },
        "minecraft:recipe_shapeless": {
            "required": [
                "description"
            ],
            "type": "object",
            "title": "minecraft:recipe_shapeless",
            "description": "Represents a shapeless crafting recipe..",
            "properties": {
                "description": {
                    "type": "object",
                    "properties": {
                        "identifier": {
                            "type": "string",
                            "pattern": ":"
                        }
                    }
                },
                "tags": {
                    "type": "array",
                    "title": "tags",
                    "description": "Item used as input for the furnace recipe.",
                    "items": {
                        "$ref": "#/definitions/recipeTags"
                    }
                },
                "priority": {
                    "type": "integer",
                    "title": "priority",
                    "description": "Item used as output for the furnace recipe."
                },
                "ingredients": {
                    "anyOf": [
                        {
                            "type": "object",
                            "$ref": "#/definitions/itemDataCount"
                        },
                        {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/itemDataCount"
                            }
                        }
                    ],
                    "title": "ingredients",
                    "description": "items used as input (without a shape) for the recipe."
                },
                "result": {
                    "$ref": "#/definitions/itemDataCount",
                    "title": "result",
                    "description": "when input items match the pattern then these items are the result."
                }
            }
        },
        "minecraft:recipe_brewing_mix": {
            "required": [
                "description"
            ],
            "type": "object",
            "title": "minecraft:recipe_brewing_mix",
            "description": "Represents a Potion Brewing Mix..",
            "properties": {
                "description": {
                    "type": "object",
                    "properties": {
                        "identifier": {
                            "type": "string",
                            "pattern": ":"
                        }
                    }
                },
                "tags": {
                    "type": "array",
                    "title": "tags",
                    "description": "Item used as input for the furnace recipe.",
                    "items": {
                        "$ref": "#/definitions/recipeTags"
                    }
                },
                "input": {
                    "type": "string",
                    "title": "input",
                    "description": "input potion used on the brewing stand."
                },
                "reagent": {
                    "type": "string",
                    "title": "reagent",
                    "description": "item used to mix with the input potion."
                },
                "output": {
                    "type": "string",
                    "title": "output",
                    "description": "output potion from mixing the input potion with the reagent on the brewing stand."
                }
            }
        },
        "minecraft:recipe_brewing_container": {
            "type": "object",
            "title": "minecraft:recipe_brewing_container",
            "description": "Represents a Potion Brewing Container Recipe..",
            "properties": {
                "description": {
                    "type": "object",
                    "properties": {
                        "identifier": {
                            "type": "string",
                            "pattern": ":"
                        }
                    }
                },
                "tags": {
                    "type": "array",
                    "title": "tags",
                    "description": "Item used as input for the furnace recipe.",
                    "items": {
                        "$ref": "#/definitions/recipeTags"
                    }
                },
                "input": {
                    "type": "string",
                    "title": "input",
                    "description": "input potion used on the brewing stand."
                },
                "reagent": {
                    "type": "string",
                    "title": "reagent",
                    "description": "item used to mix with the input potion."
                },
                "output": {
                    "type": "string",
                    "title": "output",
                    "description": "output potion from mixing the input potion with the reagent on the brewing stand."
                }
            }
        },
        "particle_effect": {
            "type": "object",
            "title": "particle_effect",
            "properties": {
                "description": {
                    "type": "object",
                    "properties": {
                        "identifier": {
                            "type": "string",
                            "pattern": ":"
                        },
                        "basic_render_parameters": {
                            "type": "object",
                            "properties": {
                                "material": {
                                    "type": "string",
                                    "title": "material",
                                    "description": "Minecraft material to use for emitter"
                                },
                                "texture": {
                                    "type": "string",
                                    "title": "texture",
                                    "description": "Minecraft texture to use for emitter"
                                }
                            }
                        }
                    }
                },
                "curves": {
                    "type": "object",
                    "title": "curves",
                    "description": "curve details"
                },
                "events": {
                    "type": "object",
                    "title": "events",
                    "description": "events details"
                },
                "components": {
                    "type": "object",
                    "title": "components",
                    "description": "Contains components that control emissions, emitters, and a ton more info.",
                    "properties": {
                        "minecraft:emitter_local_space": {
                            "type": "object",
                            "properties": {
                                "position": {
                                    "type": "boolean"
                                },
                                "rotation": {
                                    "type": "boolean"
                                },
                                "velocity": {
                                    "type": "boolean"
                                }
                            }
                        },
                        "minecraft:emitter_initialization": {
                            "type": "object",
                            "properties": {
                                "creation_expression": {
                                    "type": "string",
                                    "title": "creation_expression",
                                    "description": "this is run once at emitter startup"
                                },
                                "per_update_expression": {
                                    "type": "string",
                                    "title": "per_update_expression",
                                    "description": "this is run once per emitter update"
                                }
                            }
                        },
                        "minecraft:emitter_rate_instant": {
                            "type": "object",
                            "properties": {
                                "num_particles": {
                                    "default": 10,
                                    "title": "num_particles",
                                    "description": "this many particles are emitted at once. evaluated once per particle emitter loop",
                                    "$ref": "#/definitions/floatMolang"
                                }
                            }
                        },
                        "minecraft:emitter_rate_steady": {
                            "type": "object",
                            "properties": {
                                "spawn_rate": {
                                    "title": "spawn_rate",
                                    "description": "how often a particle is emitted, in particles/sec. evaluated once per particle emitted",
                                    "$ref": "#/definitions/floatMolang",
                                    "default": 1
                                },
                                "max_particles": {
                                    "title": "max_particles",
                                    "description": "maximum number of particles that can be active at once for this emitter. evaluated once per particle emitter loop",
                                    "$ref": "#/definitions/floatMolang",
                                    "default": 50
                                }
                            }
                        },
                        "minecraft:emitter_rate_manual": {
                            "type": "object",
                            "properties": {
                                "max_particles": {
                                    "$ref": "#/definitions/floatMolang",
                                    "title": "max_particles",
                                    "description": "evaluated once per particle emitted"
                                }
                            }
                        },
                        "minecraft:emitter_lifetime_looping": {
                            "type": "object",
                            "properties": {
                                "active_time": {
                                    "$ref": "#/definitions/floatMolang",
                                    "default": 10,
                                    "title": "active_time",
                                    "description": "emitter will emit particles for this time per loop. evaluated once per particle emitter loop."
                                },
                                "sleep_time": {
                                    "$ref": "#/definitions/floatMolang",
                                    "default": 0,
                                    "title": "sleep_time",
                                    "description": "emitter will pause emitting particles for this time per loop. evaluated once per particle emitter loop."
                                }
                            }
                        },
                        "minecraft:emitter_lifetime_once": {
                            "type": "object",
                            "properties": {
                                "active_time": {
                                    "$ref": "#/definitions/floatMolang",
                                    "default": 10,
                                    "title": "active_time",
                                    "description": "how long the particles emit for. evaluated once"
                                }
                            }
                        },
                        "minecraft:emitter_lifetime_expression": {
                            "type": "object",
                            "properties": {
                                "activation_expression": {
                                    "$ref": "#/definitions/floatMolang",
                                    "default": 1,
                                    "title": "activation_expression",
                                    "description": "When the expression is non-zero, the emitter will emit particles. Evaluated every frame"
                                },
                                "expiration_expression": {
                                    "$ref": "#/definitions/floatMolang",
                                    "default": 0,
                                    "title": "expiration_expression",
                                    "description": "Emitter will expire if the expression is non-zero. Evaluated every frame"
                                }
                            }
                        },
                        "minecraft:emitter_lifetime_events": {
                            "type": "object",
                            "properties": {
                                "creation_event": {
                                    "title": "creation_event",
                                    "description": "fires when the emitter is created",
                                    "anyOf": [
                                        {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        {
                                            "type": "string"
                                        }
                                    ]
                                },
                                "expiration_event": {
                                    "title": "expiration_event",
                                    "description": "fires when the emitter expires (does not wait for particles to expire)",
                                    "anyOf": [
                                        {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        {
                                            "type": "string"
                                        }
                                    ]
                                },
                                "timeline": {
                                    "type": "object",
                                    "title": "timeline",
                                    "description": "a series of times, e.g. 0.0 or 1.0, that trigger the event. these get fired on every loop the emitter goes through. \"time\" is the time, e.g. one line might be: \"0.4\": \"event\"",
                                    "properties": {
                                        "time": {
                                            "anyOf": [
                                                {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                {
                                                    "type": "string"
                                                }
                                            ]
                                        }
                                    }
                                },
                                "travel_distance_events": {
                                    "type": "object",
                                    "properties": {
                                        "distance": {
                                            "title": "distance",
                                            "description": "a series of distances, e.g. 0.0 or 1.0, that trigger the event. these get fired when the emitter has moved by the specified input. distance, e.g. one line might be: \"0.4\": \"event\"",
                                            "anyOf": [
                                                {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                {
                                                    "type": "string"
                                                }
                                            ]
                                        }
                                    }
                                },
                                "looping_travel_distance_events": {
                                    "type": "array",
                                    "items": {
                                        "title": "looping_travel_distance_events",
                                        "description": "a series of events that occur at set intervals. these get fired every time the emitter has moved the specified input. distance from the last time it was fired.",
                                        "type": "string",
                                        "properties": {
                                            "distance": {
                                                "type": "number"
                                            },
                                            "effects": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "minecraft:emitter_shape_point": {
                            "type": "object",
                            "properties": {
                                "offset": {
                                    "type": "array",
                                    "title": "offset",
                                    "description": "specifies the offset from the emitter to emit the particles. evaluated once per particle emitted",
                                    "default": [
                                        0,
                                        0,
                                        0
                                    ],
                                    "items": {
                                        "$ref": "#/definitions/floatMolang"
                                    }
                                },
                                "direction": {
                                    "type": "array",
                                    "title": "direction",
                                    "description": "specifies the direciton of particles. evaluated once per particle emitted.",
                                    "items": {
                                        "$ref": "#/definitions/floatMolang"
                                    }
                                }
                            }
                        },
                        "minecraft:emitter_shape_sphere": {
                            "type": "object",
                            "properties": {
                                "offset": {
                                    "type": "array",
                                    "title": "offset",
                                    "description": "specifies the offset from the emitter to emit the particles. evaluated once per particle emitted",
                                    "default": [
                                        0,
                                        0,
                                        0
                                    ],
                                    "items": {
                                        "$ref": "#/definitions/floatMolang"
                                    }
                                },
                                "radius": {
                                    "$ref": "#/definitions/floatMolang",
                                    "default": 1,
                                    "title": "radius",
                                    "description": "sphere radius. evaluated once per particle emitted."
                                },
                                "direction": {
                                    "anyOf": [
                                        {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/floatMolang"
                                            }
                                        },
                                        {
                                            "enum": [
                                                "inwards",
                                                "outwards"
                                            ]
                                        }
                                    ],
                                    "title": "direction",
                                    "default": "outwards",
                                    "description": "specifies the direciton of particles. evaluated once per particle emitted."
                                }
                            }
                        },
                        "minecraft:emitter_shape_box": {
                            "type": "object",
                            "properties": {
                                "offset": {
                                    "type": "array",
                                    "title": "offset",
                                    "description": "specifies the offset from the emitter to emit the particles. evaluated once per particle emitted",
                                    "default": [
                                        0,
                                        0,
                                        0
                                    ],
                                    "items": {
                                        "$ref": "#/definitions/floatMolang"
                                    }
                                },
                                "half_dimensions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/floatMolang"
                                    },
                                    "default": 1,
                                    "title": "half_dimensions",
                                    "description": "box dimensions. these are the half dimensions, the box is formed centered on the emitter. with the box extending in the 3 principal x/y/z axes by these values"
                                },
                                "surface_only": {
                                    "type": "boolean",
                                    "default": false,
                                    "title": "surface_only",
                                    "description": "emit only from the surface of the sphere"
                                },
                                "direction": {
                                    "anyOf": [
                                        {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/floatMolang"
                                            }
                                        },
                                        {
                                            "enum": [
                                                "inwards",
                                                "outwards"
                                            ]
                                        }
                                    ],
                                    "title": "direction",
                                    "default": "outwards",
                                    "description": "specifies the direciton of particles. evaluated once per particle emitted."
                                }
                            }
                        },
                        "minecraft:emitter_shape_custom": {
                            "type": "object",
                            "properties": {
                                "offset": {
                                    "type": "array",
                                    "title": "offset",
                                    "description": "specifies the offset from the emitter to emit the particles. evaluated once per particle emitted",
                                    "default": [
                                        0,
                                        0,
                                        0
                                    ],
                                    "items": {
                                        "$ref": "#/definitions/floatMolang"
                                    }
                                },
                                "direction": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/floatMolang"
                                    },
                                    "title": "direction",
                                    "default": [
                                        0,
                                        0,
                                        0
                                    ],
                                    "description": "specifies the direciton of particles. evaluated once per particle emitted."
                                }
                            }
                        },
                        "minecraft:emitter_shape_entity_aabb": {
                            "type": "object",
                            "properties": {
                                "surface_only": {
                                    "type": "boolean",
                                    "default": false,
                                    "title": "surface_only",
                                    "description": "emit only from the surface of the sphere"
                                },
                                "direction": {
                                    "anyOf": [
                                        {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/floatMolang"
                                            }
                                        },
                                        {
                                            "enum": [
                                                "inwards",
                                                "outwards"
                                            ]
                                        }
                                    ],
                                    "title": "direction",
                                    "default": "outwards",
                                    "description": "specifies the direciton of particles. evaluated once per particle emitted."
                                }
                            }
                        },
                        "minecraft:emitter_shape_disc": {
                            "type": "object",
                            "properties": {
                                "offset": {
                                    "type": "array",
                                    "title": "offset",
                                    "description": "specifies the offset from the emitter to emit the particles. evaluated once per particle emitted",
                                    "default": [
                                        0,
                                        0,
                                        0
                                    ],
                                    "items": {
                                        "$ref": "#/definitions/floatMolang"
                                    }
                                },
                                "surface_only": {
                                    "type": "boolean",
                                    "default": false,
                                    "title": "surface_only",
                                    "description": "emit only from the surface of the sphere"
                                },
                                "radius": {
                                    "$ref": "#/definitions/floatMolang",
                                    "default": 1,
                                    "title": "radius",
                                    "description": "sphere radius. evaluated once per particle emitted."
                                },
                                "plane_normal": {
                                    "title": "plane_normal",
                                    "description": "specifies the normal of the disc plane, the disc will be perpendicular to this direction",
                                    "default": [
                                        0,
                                        1,
                                        0
                                    ],
                                    "anyOf": [
                                        {
                                            "description": "custom direction for the normal",
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/floatMolang"
                                            }
                                        },
                                        {
                                            "type": "string"
                                        }
                                    ]
                                },
                                "direction": {
                                    "anyOf": [
                                        {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/floatMolang"
                                            }
                                        },
                                        {
                                            "enum": [
                                                "inwards",
                                                "outwards"
                                            ]
                                        }
                                    ],
                                    "title": "direction",
                                    "default": "outwards",
                                    "description": "specifies the direciton of particles. evaluated once per particle emitted."
                                }
                            }
                        },
                        "minecraft:particle_initial_spin": {
                            "type": "object",
                            "properties": {
                                "rotation": {
                                    "$ref": "#/definitions/floatMolang",
                                    "default": 0,
                                    "title": "specifies the initial rotation in degrees. evaluated once.",
                                    "description": "rotation. "
                                },
                                "rotation_rate": {
                                    "$ref": "#/definitions/floatMolang",
                                    "default": 0,
                                    "title": "rotation_rate",
                                    "description": "specifies the spin rate in degrees/second. evaluated once."
                                }
                            }
                        },
                        "minecraft:particle_initial_speed": {
                            "title": "minecraft:particle_initial_speed",
                            "description": "evaluated once",
                            "anyOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/floatMolang"
                                    }
                                },
                                {
                                    "type": "string",
                                    "default": 0,
                                    "$ref": "#/definitions/floatMolang"
                                }
                            ]
                        },
                        "minecraft:particle_motion_dynamic": {
                            "type": "object",
                            "properties": {
                                "linear_acceleration": {
                                    "type": "array",
                                    "default": [
                                        0,
                                        0,
                                        0
                                    ],
                                    "title": "linear_acceleration",
                                    "description": "the linear acceleration applied to the particle. Units are blocks/sec/sec. An example would be gravity which is [0, -9.8, 0]. evaluated every frame.",
                                    "items": {
                                        "$ref": "#/definitions/floatMolang"
                                    }
                                },
                                "linear_drag_coefficient": {
                                    "$ref": "#/definitions/floatMolang",
                                    "default": 0,
                                    "title": "linear_drag_coefficient",
                                    "description": "using the equation: 'acceleration = -linear_drag_coefficient*velocity'. where velocity is the current direction times speed. Think of this as air-drag.  The higher the value, the more drag. evaluated every frame."
                                },
                                "rotation_acceleration": {
                                    "$ref": "#/definitions/floatMolang",
                                    "default": 0,
                                    "title": "rotation_acceleration",
                                    "description": "acceleration applies to the rotation speed of the particle. think of a disc spinning up or a smoke puff that starts rotating. but slows down over time. evaluated every frame. acceleration is in degrees/sec/sec."
                                },
                                "rotation_drag_coefficient": {
                                    "$ref": "#/definitions/floatMolang",
                                    "default": 0,
                                    "title": "rotation_drag_coefficient",
                                    "description": "drag applied to retard rotation. equation is 'rotation_acceleration += -rotation_rate*rotation_drag_coefficient'. useful to slow a rotation, or to limit the rotation acceleration. Think of a disc that speeds up (acceleration). but reaches a terminal speed (drag). Another use is if you have a particle growing in size, having. the rotation slow down due to drag can add \"weight\" to the particle's. motion"
                                }
                            }
                        },
                        "minecraft:particle_motion_parametric": {
                            "type": "object",
                            "properties": {
                                "relative_position": {
                                    "type": "array",
                                    "default": [
                                        0,
                                        0,
                                        0
                                    ],
                                    "title": "relative_position",
                                    "description": "directly set the position relative to the emitter. E.g. a spiral might be: '\"relative_position\": [\"Math.cos(Params.LifeTime)\", 1.0,\"Math.sin(Params.Lifetime)\"]' evaluated every frame.",
                                    "items": {
                                        "$ref": "#/definitions/floatMolang"
                                    }
                                },
                                "direction": {
                                    "type": "array",
                                    "title": "direction",
                                    "description": "directly set the 3d direction of the particle. doesn't affect direction if not specified. evaluated every frame",
                                    "items": {
                                        "$ref": "#/definitions/floatMolang"
                                    }
                                },
                                "rotation": {
                                    "default": 0,
                                    "$ref": "#/definitions/floatMolang",
                                    "title": "rotation",
                                    "description": "directly set the rotation of the particle. evaluated every frame."
                                }
                            }
                        },
                        "minecraft:particle_motion_collision": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "anyOf": [
                                        {
                                            "type": "boolean"
                                        },
                                        {
                                            "type": "string"
                                        }
                                    ],
                                    "default": true,
                                    "title": "enabled",
                                    "description": "enables collision when true/non-zero. evaluated every frame"
                                },
                                "collision_drag": {
                                    "type": "number",
                                    "title": "collision_drag",
                                    "description": "alters the speed of the particle when it has collided. useful for emulating friction/drag when colliding, e.g a particle that hits the ground would slow to a stop. This drag slows down the particle by this amount in blocks/sec when in contact"
                                },
                                "coefficient_of_restitution": {
                                    "type": "number",
                                    "title": "coefficient_of_restitution",
                                    "description": "used for bouncing/not-bouncing. Set to 0.0 to not bounce, 1.0 to bounce back up to original hight. and in-between to lose speed after bouncing.  Set to >1.0 to gain energy on each bounce"
                                },
                                "collision_radius": {
                                    "type": "number",
                                    "title": "collision_radius",
                                    "description": "used to minimize interpenetration of particles with the environment. note that this must be less than or equal to 1/2 block"
                                },
                                "expire_on_contact": {
                                    "type": "boolean",
                                    "title": "expire_on_contact",
                                    "description": "triggers expiration on contact if true"
                                },
                                "events": {
                                    "anyOf": [
                                        {
                                            "type": "array",
                                            "title": "events",
                                            "description": "triggers an event. array of individual events",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "event": {
                                                        "type": "string",
                                                        "title": "event",
                                                        "description": "triggers the specified event if the conditions are met."
                                                    },
                                                    "min_speed": {
                                                        "type": "number",
                                                        "default": 2,
                                                        "minimum": 2,
                                                        "title": "min_speed",
                                                        "description": "optional minimum speed for event triggering"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "event": {
                                                    "type": "string",
                                                    "title": "event",
                                                    "description": "triggers the specified event if the conditions are met."
                                                },
                                                "min_speed": {
                                                    "type": "number",
                                                    "default": 2,
                                                    "minimum": 2,
                                                    "title": "min_speed",
                                                    "description": "optional minimum speed for event triggering"
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "minecraft:ore_feature": {
            "type": "object",
            "title": "minecraft:ore_feature",
            "description": "'minecraft:ore_feature' places a vein of blocks to simulate ore deposits. Despite the name, any block can be placed by this feature. During placement, existing world blocks are checked to see if they can be replaced by the new ore block based on the list provided in the 'may_replace' field. If no 'may_replace' field is specified, the ore block can replace any existing block.Succeeds if: At least one ore block is successfully placed.Fails if: All ore block placements fail.",
            "properties": {
                "description": {
                    "type": "object",
                    "properties": {
                        "identifier": {
                            "type": "string",
                            "pattern": ":"
                        }
                    }
                },
                "places_block": {
                    "type": "string"
                },
                "count": {
                    "type": "number"
                },
                "may_replace": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "minecraft:aggregate_feature": {
            "type": "object",
            "title": "minecraft:aggregate_feature",
            "description": "'minecraft:aggregate_feature' places a collection of features in an arbitary order. All features in the collection use the same input position. Features should not depend on each other, as there is no guarantee on the order the features will be placed.Succeeds if: At lease one feature is placed successfully.Fails if: All features fail to be placed.",
            "properties": {
                "description": {
                    "type": "object",
                    "properties": {
                        "identifier": {
                            "type": "string",
                            "pattern": ":"
                        }
                    }
                },
                "features": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "type": "string"
                    }
                },
                "early_out": {
                    "enum": [
                        "none",
                        "first_failure",
                        "first_success"
                    ]
                }
            }
        },
        "minecraft:sequence_feature": {
            "type": "object",
            "title": "minecraft:sequence_feature",
            "description": "'minecraft:sequence_feature' places a collection of features sequentially, in the order they appear in data. The output position of the previous feature is used as the input position for the next. For example, a tree feature is placed at (0, 0, 0) and places blocks up to (0, 10, 0). The next feature in the sequence begins at (0, 10, 0).Succeeds if: All features in the sequence are successfully placed.Fails if: Any feature in the sequence fails to be placed. Features that have not yet been placed at the time of failure are skipped.",
            "properties": {
                "description": {
                    "type": "object",
                    "properties": {
                        "identifier": {
                            "type": "string",
                            "pattern": ":"
                        }
                    }
                },
                "features": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "minecraft:scatter_feature": {
            "type": "object",
            "title": "minecraft:scatter_feature",
            "description": "'minecraft:scatter_feature' scatters a feature throughout a chunk. The 'x', 'y', and 'z' fields are per-coordinate parameters. Note that coordinates represent an offset from the input position, not an absolute position. Coordinates may be a single value, a random distribution, or molang expression that resolves to a numeric value. The 'coordinate_eval_order' field is provided for finer control of coordinate resolution (particularly when using the 'grid' distribution). 'iterations' controls how many individual placements should occur if the 'scatter_chance' check succeeds. The 'scatter_chance' check happens once, so either all placements will run or none will.Succeeds if: At least one feature placement succeeds.Fails if: All feature placements fail.",
            "properties": {
                "description": {
                    "type": "object",
                    "properties": {
                        "identifier": {
                            "type": "string",
                            "pattern": ":"
                        }
                    }
                },
                "project_input_to_floor": {
                    "type": "boolean"
                },
                "places_feature": {
                    "type": "string"
                },
                "iterations": {
                    "type": "number"
                },
                "scatter_chance": {
                    "anyOf": [
                        {
                            "type": "number"
                        },
                        {
                            "type": "object",
                            "properties": {
                                "numerator": {
                                    "type": "number",
                                    "minimum": 1
                                },
                                "denominator": {
                                    "type": "number",
                                    "minimum": 1
                                }
                            }
                        }
                    ]
                },
                "x": {
                    "anyOf": [
                        {
                            "type": "number"
                        },
                        {
                            "type": "object",
                            "properties": {
                                "distribution": {
                                    "enum": [
                                        "uniform"
                                    ]
                                },
                                "extent": {
                                    "type": "array",
                                    "maxItems": 2,
                                    "items": {
                                        "type": "number"
                                    }
                                }
                            }
                        }
                    ]
                },
                "y": {
                    "anyOf": [
                        {
                            "type": "number"
                        },
                        {
                            "type": "object",
                            "properties": {
                                "distribution": {
                                    "enum": [
                                        "uniform"
                                    ]
                                },
                                "extent": {
                                    "type": "array",
                                    "maxItems": 2,
                                    "items": {
                                        "type": "number"
                                    }
                                }
                            }
                        }
                    ]
                },
                "z": {
                    "anyOf": [
                        {
                            "type": "number"
                        },
                        {
                            "type": "object",
                            "properties": {
                                "distribution": {
                                    "enum": [
                                        "uniform"
                                    ]
                                },
                                "extent": {
                                    "type": "array",
                                    "maxItems": 2,
                                    "items": {
                                        "type": "number"
                                    }
                                }
                            }
                        }
                    ]
                }
            }
        },
        "minecraft:search_feature": {
            "type": "object",
            "title": "minecraft:search_feature",
            "description": "'minecraft:search_feature' sweeps a volume searching for a valid placement location for its referenced feature. The 'search_volume' field specifies the axis-aligned bounding box that defines the boundaries of the search. The search sweeps along the axis defined by the 'search_axis' field, layer by layer. For example, if 'search_axis' = '-x', blocks with greater x values will be checked before blocks with lower x values. Each layer is searched from the bottom-left to the top-right before moving to the next layer along the axis. By default, only one valid position must be found, but this can be altered by specifying the 'required_successes' field. If fewer than the required successes are found, no placement will occur.Succeeds if: The number of valid positions is equal to the value specified by 'required_successes'.Fails if: The number of valid positions is less than the value specified by 'required_successes'.",
            "properties": {
                "description": {
                    "type": "object",
                    "properties": {
                        "identifier": {
                            "type": "string",
                            "pattern": ":"
                        }
                    }
                },
                "places_feature": {
                    "type": "string"
                },
                "search_volume": {
                    "type": "object",
                    "properties": {
                        "min": {
                            "type": "number",
                            "maxItems": 3,
                            "minItems": 3
                        },
                        "max": {
                            "type": "number",
                            "maxItems": 3,
                            "minItems": 3
                        }
                    }
                },
                "search_axis": {
                    "enum": [
                        "x",
                        "y",
                        "z",
                        "-x",
                        "-y",
                        "-z"
                    ]
                }
            }
        },
        "minecraft:single_block_feature": {
            "type": "object",
            "title": "minecraft:single_block_feature",
            "description": "'minecraft:single_block_feature' places a single block in the world. The 'may_place_on' and 'may_replace' fields are whitelists which specify where the block can be placed. If these fields are omitted, the block can be placed anywhere. The block's internal survivability and placement rules can optionally be enforced with the 'enforce_survivability_rules' and 'enforce_placement_rules' fields. These rules are specified per-block and are typically designed to produce high quality gameplay or natural behavior. However, enabling this enforcement may make it harder to debug placement failures.Succeeds if: The block is successfully placed in the world.Fails if: The block fails to be placed.",
            "properties": {
                "description": {
                    "type": "object",
                    "properties": {
                        "identifier": {
                            "type": "string",
                            "pattern": ":"
                        }
                    }
                },
                "places_block": {
                    "type": "string"
                },
                "enforce_placement_rules": {
                    "type": "boolean"
                },
                "enforce_survivability_rules": {
                    "type": "boolean"
                },
                "may_place_on": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "type": "string"
                    }
                },
                "may_replace": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "minecraft:structure_template_feature": {
            "type": "object",
            "title": "minecraft:structure_template_feature",
            "description": "'minecraft:structure_template_feature' places a structure in the world. The structure must be stored as a .mcstructure file in the \"structures\" subdirectory of a behavior pack. It is possible to reference structures that are part of other behavior packs, they do not need to come from the same behavior pack as this feature. Constraints can be defined to specify where the structure is allowed to be placed. During placement, the feature will search for a position within the 'adjustment_radius' that satisfies all constraints. If none are found, the structure will not be placed.Succeeds if: The structure is placed in the world.Fails if: The structure fails to be placed within the world.",
            "properties": {
                "description": {
                    "type": "object",
                    "properties": {
                        "identifier": {
                            "type": "string",
                            "pattern": ":"
                        }
                    }
                },
                "structure_name": {
                    "type": "string"
                },
                "adjustment_radius": {
                    "type": "number"
                },
                "facing_direction": {
                    "enum": [
                        "random",
                        "north",
                        "south",
                        "east",
                        "west"
                    ]
                },
                "constraints": {
                    "type": "object",
                    "properties": {
                        "unburied": {
                            "type": "object"
                        },
                        "block_intersection": {
                            "type": "object",
                            "properties": {
                                "block_whitelist": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "uniqueItems": true
                                    }
                                },
                                "block_blacklist": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "uniqueItems": true
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "minecraft:tree_feature": {
            "type": "object",
            "title": "minecraft:tree_feature",
            "description": "Feature type 'minecraft:tree_feature' has not yet been documented.",
            "properties": {
                "description": {
                    "type": "object",
                    "properties": {
                        "identifier": {
                            "type": "string",
                            "pattern": ":"
                        }
                    }
                }
            }
        },
        "minecraft:weighted_random_feature": {
            "type": "object",
            "title": "minecraft:weighted_random_feature",
            "description": "'minecraft:weighted_random_feature' randomly selects and places a feature based on a weight value. Weights are relative, with higher values making selection more likely.Succeeds if: The selected feature is placed.Fails if: The selected feature fails to be placed.",
            "properties": {
                "description": {
                    "type": "object",
                    "properties": {
                        "identifier": {
                            "type": "string",
                            "pattern": ":"
                        }
                    }
                },
                "features": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": [
                            {
                                "$ref": "#/definitions/nameSpaceID",
                                "description": "The feature name"
                            },
                            {
                                "type": "number",
                                "description": "The weight of the features"
                            }
                        ]
                    }
                }
            }
        },
        "minecraft:feature_rules": {
            "type": "object",
            "title": "minecraft:feature_rules",
            "description": "Feature rules are separate JSON definition files found in the \"feature_rules\" subfolder of behavior packs. Feature rules follow the same filename rules as features. Each feature rule controls exactly one feature and serves as the root of a chain of feature data. To attach a feature to a biome with a feature rule, the \"conditions\" object must include the \"minecraft:biome_filter\" field. This is a list of filter tests that are performed on each biome to determine if the feature should be attached. Most relevant is the \"has_biome_tag\" test.",
            "properties": {
                "description": {
                    "type": "object",
                    "properties": {
                        "identifier": {
                            "$ref": "#/definitions/nameSpaceID"
                        },
                        "places_feature": {
                            "$ref": "#/definitions/nameSpaceID"
                        }
                    }
                },
                "conditions": {
                    "type": "object",
                    "properties": {
                        "placement_pass": {
                            "enum": [
                                "first_pass",
                                "before_underground_pass",
                                "underground_pass",
                                "after_underground_pass",
                                "before_surface_pass",
                                "surface_pass",
                                "after_surface_pass",
                                "before_sky_pass",
                                "sky_pass",
                                "after_sky_pass",
                                "final_pass"
                            ]
                        },
                        "minecraft:biome_filter": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "test": {
                                        "$ref": "#/definitions/biomeFiltertest"
                                    },
                                    "operator": {
                                        "$ref": "#/definitions/operator"
                                    },
                                    "value": {
                                        "type": "string"
                                    },
                                    "all_of": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "test": {
                                                    "$ref": "#/definitions/biomeFiltertest"
                                                },
                                                "operator": {
                                                    "$ref": "#/definitions/operator"
                                                },
                                                "value": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "distribution": {
                    "type": "object",
                    "properties": {
                        "iterations": {
                            "type": "number"
                        },
                        "x": {
                            "type": "number"
                        },
                        "y": {
                            "type": "number"
                        },
                        "z": {
                            "type": "number"
                        }
                    }
                }
            }
        },
        "minecraft:client_entity": {
            "properties": {
                "description": {
                    "properties": {
                        "identifier": {
                            "$ref": "#/definitions/nameSpaceID",
                            "title": "identifier",
                            "description": "The identifier is used to register the entity with the server. In the Client Entity Definitions JSON the identifier sets the appearance of the entity(materials, textures, geometry, etc.) The matching identifier in the Entity Behavior JSON in the Behavior Pack is what gives the entity its behaviors."
                        },
                        "min_engine_version": {
                            "$ref": "#/definitions/supportedVersions",
                            "title": "min_engine_version",
                            "description": "When present, players can set the min version needed to allow the JSON to be parsed. The version in the definition is compared to the engine version for which the top resource pack was built.If a definition's min_engine_version is newer than that pack's engine version then the definition is not parsed.Multiple definition files may use the same identifier, in which case only one of those definitions will be loaded. The definition with the same or closest and not greater min_engine_version, as compared to the top resource pack's engine version, will be parsed; all other definitions with the same identifier will not be parsed.This can be useful for continuing to support an older version of an entity, when an older resource pack is used at the top of the resource pack stack, while also supporting a newer version of the entity in all other cases."
                        },
                        "materials": {
                            "type": "object",
                            "title": "materials",
                            "description": "Players can set the materials, texture and geometry used for the entity in this section. Players can set one or more materials, textures, and geometries that can be used by the mob. Players must set user defined names for them. These names are used in the Render Controllers JSON. Players can reference materials, textures, and geometry from the vanilla Minecraft Resource Pack or create their own. Custom materials, textures, and geometry should be in the corresponding folder at the root of the Resource Pack.",
                            "properties": {
                                "default": {
                                    "type": "string"
                                }
                            }
                        },
                        "textures": {
                            "type": "object",
                            "title": "textures",
                            "description": "Players can set the materials, texture and geometry used for the entity in this section. Players can set one or more materials, textures, and geometries that can be used by the mob. Players must set user defined names for them. These names are used in the Render Controllers JSON. Players can reference materials, textures, and geometry from the vanilla Minecraft Resource Pack or create their own. Custom materials, textures, and geometry should be in the corresponding folder at the root of the Resource Pack.",
                            "properties": {
                                "default": {
                                    "type": "string"
                                }
                            }
                        },
                        "geometry": {
                            "type": "object",
                            "title": "geometry",
                            "description": "Players can set the materials, texture and geometry used for the entity in this section. Players can set one or more materials, textures, and geometries that can be used by the mob. Players must set user defined names for them. These names are used in the Render Controllers JSON. Players can reference materials, textures, and geometry from the vanilla Minecraft Resource Pack or create their own. Custom materials, textures, and geometry should be in the corresponding folder at the root of the Resource Pack.",
                            "properties": {
                                "default": {
                                    "type": "string"
                                }
                            }
                        },
                        "scripts": {
                            "type": "object",
                            "title": "scripts",
                            "description": "Scripts allow players to use MoLang to compute calculations once and store that value. This value than can be used over and over again without the need to constantly recompute the calculations. Scripts currently support pre - animation and scale.More script types will be added later.Pre-animation scripts are evaluated immediately before animations are processed.-Scale sets the scale of the mob's geometry.",
                            "properties": {
                                "pre_animation": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "scale": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "animations": {
                            "type": "object",
                            "title": "animations",
                            "description": "Allows the player to assign names to reference the long name for animations. These names are used by the animation controller JSON. Players can reference animations from the vanilla Minecraft Resource Pack or create their own. Custom animations should be in the animation folder at the root of the Resource Pack."
                        },
                        "animation_controllers": {
                            "type": "array",
                            "title": "animation_controllers",
                            "description": "Animation controllers decide which animations to play when. Each Controller contains a list of states that play one or more animations. Allows the player to assign names to reference the long names for animation controllers. Names are required and need to be unique from all other names in the animation controllers for that mob. Players can reference animation controllers from the vanilla Minecraft Resource Pack or create their own. Custom animation controllers should be in the animation_controllers folder at the root of the Resource Pack.",
                            "items": {
                                "type": "object"
                            }
                        },
                        "render_controllers": {
                            "type": "array",
                            "title": "render_controllers",
                            "description": "Specifies the names of render controllers. This name needs to match the name of a corresponding JSON located in the Render Controllers folder. Players can reference Render Controllers from the vanilla Minecraft Resource Pack or create their own. Custom Render Controllers should be in the textures folder at the root of the Resource Pack.",
                            "items": {
                                "type": "string"
                            }
                        },
                        "enable_attachables": {
                            "type": "boolean",
                            "title": "enable_attachables",
                            "description": "This determines if the entity can equip attachables when this is set to true. This allows the entity to render armor."
                        },
                        "particle": {
                            "type": "string",
                            "title": "particle",
                            "description": "Allows the player to assign a key to reference the long name for particles. When these are present, the particle is created when the entity is spawned. Keys are required and need to be unique from all other keys in the animation controllers. Players can reference particles from the vanilla Minecraft Resource Pack or create their own. Custom particles should be in the particle folder at the root of the Resource Pack."
                        },
                        "locators": {
                            "type": "object",
                            "title": "locators",
                            "description": "Locator offsets are specified in model space. An example of a locator is the \"lead\" locator used to specify where the lead will attach to graphically.",
                            "items": {
                                "type": "object"
                            }
                        },
                        "spawn_egg": {
                            "type": "object",
                            "title": "spawn_egg",
                            "description": "This sets the color or texture used for the entity Spawn Egg. There are 2 ways to do this. The first is to use the hex value for the base color and the overlay color.",
                            "properties": {
                                "texture": {
                                    "type": "string"
                                },
                                "texture_index": {
                                    "type": "number"
                                },
                                "base_color": {
                                    "$ref": "#/definitions/hexColor"
                                },
                                "overlay_color": {
                                    "$ref": "#/definitions/hexColor"
                                }
                            }
                        }
                    }
                }
            }
        },
        "minecraft:spawn_rules": {
            "type": "object",
            "properties": {
                "description": {
                    "properties": {
                        "identifier": {
                            "$ref": "#/definitions/nameSpaceID",
                            "title": "identifier",
                            "description": "The identifier is used to register the entity with the server. In the Client Entity Definitions JSON the identifier sets the appearance of the entity(materials, textures, geometry, etc.) The matching identifier in the Entity Behavior JSON in the Behavior Pack is what gives the entity its behaviors."
                        },
                        "population_control": {
                            "enum": [
                                "monster"
                            ]
                        }
                    }
                },
                "conditions": {
                    "type": "array",
                    "title": "conditions",
                    "description": "Conditions contain different components that players can use to customize natural biome spawning.",
                    "items": {
                        "type": "object",
                        "properties": {
                            "minecraft:spawns_on_surface": {
                                "type": "object",
                                "title": "minecraft:spawns_on_surface",
                                "description": "This component allows the mob to spawn on the ground. Adding the component causes it to be true, removing it causes the mob to stop spawning on the surface."
                            },
                            "minecraft:spawns_underwater": {
                                "type": "object",
                                "title": "minecraft:spawns_underwater",
                                "description": "This component allows the mob to spawn underwater. Adding the component causes it to be true, removing it causes the mob to stop spawning underwater."
                            },
                            "minecraft:brightness_filter": {
                                "type": "object",
                                "title": "minecraft:brightness_filter",
                                "description": "This component allows players to set the light level range that causes the mob to spawn.",
                                "properties": {
                                    "min": {
                                        "type": "number",
                                        "default": 0.0,
                                        "title": "min",
                                        "description": "This is the minimum light level value that allows the mob to spawn"
                                    },
                                    "max": {
                                        "type": "number",
                                        "default": 15.0,
                                        "title": "max",
                                        "description": "This is the maximum light level value that allows the mob to spawn"
                                    },
                                    "adjust_for_weather": {
                                        "type": "boolean",
                                        "default": false,
                                        "title": "adjust_for_weather",
                                        "description": "This determines if weather can affect the light level conditions that cause the mob to spawn (e.g. Allowing hostile mobs to spawn during the day when it rains.)"
                                    }
                                }
                            },
                            "minecraft:difficulty_filter": {
                                "type": "object",
                                "title": "minecraft:difficulty_filter",
                                "description": "This component allows players determine what mobs spawn when certain difficulty levels are set.",
                                "properties": {
                                    "min": {
                                        "$ref": "#/definitions/difficulty",
                                        "title": "min",
                                        "description": "This is the minimum difficulty level that a mob spawns"
                                    },
                                    "max": {
                                        "$ref": "#/definitions/difficulty",
                                        "title": "max",
                                        "description": "This is the maximum difficulty level that a mob spawns"
                                    }
                                }
                            },
                            "minecraft:weight": {
                                "type": "object",
                                "title": "minecraft:weight",
                                "description": "This component allows players to give a priority to how often that mob should spawn. Mobs with lower weight values have a higher chance to spawn than mobs with higher weight values.",
                                "properties": {
                                    "default": {
                                        "type": "number",
                                        "default": 0.0,
                                        "title": "default",
                                        "description": "This is the priority of the mob spawning"
                                    }
                                }
                            },
                            "minecraft:herd": {
                                "type": "object",
                                "title": "minecraft:herd",
                                "description": "This component allows players to determine the herd size of animals.",
                                "properties": {
                                    "event": {
                                        "type": "string",
                                        "title": "event",
                                        "description": "This is an event that can be triggered from spawning"
                                    },
                                    "event_skip_count": {
                                        "type": "number",
                                        "title": "event_skip_count",
                                        "description": "This is the number of mobs spawned before the specified event is triggered"
                                    },
                                    "min_size": {
                                        "type": "number",
                                        "title": "min_size",
                                        "description": "This is the minimum number of mobs that spawn in a herd"
                                    },
                                    "max_size": {
                                        "type": "number",
                                        "title": "max_size",
                                        "description": "This is the maximum number of mobs that spawn in a herd"
                                    }
                                }
                            },
                            "minecraft:permute_type": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "weight": {
                                            "type": "number"
                                        },
                                        "entity_type": {
                                            "type": "string",
                                            "pattern": ":"
                                        }
                                    }
                                }
                            },
                            "minecraft:biome_filter": {
                                "type": "object",
                                "title": "minecraft:biome_filter",
                                "description": "This component allows the players to specify which biomes the mob spawns in. Check below to see which Biome Tags exist, and what each biome is tagged as.",
                                "properties": {
                                    "test": {
                                        "$ref": "#/definitions/biomeFiltertest"
                                    },
                                    "operator": {
                                        "$ref": "#/definitions/operator"
                                    },
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "default": {}
}